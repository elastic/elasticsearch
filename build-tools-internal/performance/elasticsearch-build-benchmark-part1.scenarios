// ensure branch scenario is listed first as this is the gradle version that will picked for inspecting the build
default-scenarios = ["buildConfiguration_branch", "buildConfiguration_main", "single_project_branch", "single_project_main"]

buildConfiguration_main {
    title = "configuration phase (main)"
    versions = ["@mainWrapper@"]
    tasks = ["help"]
    gradle-args = ["--no-scan", "--no-build-cache", "--stacktrace"]
    run-using = cli // value can be "cli" or "tooling-api"
    daemon = warm // value can be "warm", "cold", or "none"
    warm-ups = 5
    iterations = 10
    system-properties {
        "BUILD_PERFORMANCE_TEST" = "true"
    }
    git-checkout = {
        build = "main"
    }
}

buildConfiguration_branch {
    title = "configuration phase (@testGitCommit@)"
    versions = ["@branchWrapper@"]
    tasks = ["help"]
    gradle-args = ["--no-scan", "--no-build-cache", "--stacktrace"]
    run-using = cli // value can be "cli" or "tooling-api"
    daemon = warm // value can be "warm", "cold", or "none"
    warm-ups = 5
    iterations = 10
    system-properties {
        "BUILD_PERFORMANCE_TEST" = "true"
    }
    git-checkout = {
        build = "@testGitCommit@"
    }
}

single_project_main {
    title = "single project (main)"
    versions = ["@mainWrapper@"]
    tasks = [":server:precommit"]
    gradle-args = ["--no-scan", "--stacktrace"]
    apply-abi-change-to = "server/src/main/java/org/elasticsearch/bootstrap/BootstrapInfo.java"
    run-using = cli // value can be "cli" or "tooling-api"
    daemon = warm // value can be "warm", "cold", or "none"
    warm-ups = 5
    iterations = 10
    system-properties {
        "BUILD_PERFORMANCE_TEST" = "true"
    }
    git-checkout = {
        build = "main"
    }
}

single_project_branch {
    title = "single project (@testGitCommit@)"
    versions = ["@branchWrapper@"]
    tasks = [":server:precommit"]
    gradle-args = ["--no-scan", "--stacktrace"]
    apply-abi-change-to = "server/src/main/java/org/elasticsearch/bootstrap/BootstrapInfo.java"
    run-using = cli // value can be "cli" or "tooling-api"
    daemon = warm // value can be "warm", "cold", or "none"
    warm-ups = 5
    iterations = 10
    system-properties {
        "BUILD_PERFORMANCE_TEST" = "true"
    }
    git-checkout = {
        build = "@testGitCommit@"
    }
}

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

apply plugin: 'elasticsearch.build'

base {
  archivesName = 'elasticsearch-plugin-cli'
}

dependencies {
  compileOnly project(":server")
  compileOnly project(":libs:elasticsearch-cli")
  api "org.bouncycastle:bcpg-fips:1.0.7.1"
  api "org.bouncycastle:bc-fips:1.0.2.4"
  testImplementation project(":test:framework")
  testImplementation "com.google.jimfs:jimfs:${versions.jimfs}"
  testRuntimeOnly "com.google.guava:guava:${versions.jimfs_guava}"
}

configurations.configureEach {
  resolutionStrategy.eachDependency { DependencyResolveDetails details ->
    if (details.requested.group == 'org.bouncycastle' && details.requested.name == 'bc-fips') {
        details.useVersion '1.0.2.4' // to avoid jar hell
    }
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /bc.*/, to: 'bouncycastle'
}

tasks.named("test").configure {
  // TODO: find a way to add permissions for the tests in this module
  systemProperty 'tests.security.manager', 'false'
}

/*
 * these two classes intentionally use the following JDK internal APIs in order to offer the necessary
 * functionality
 *
 * sun.security.internal.spec.TlsKeyMaterialParameterSpec
 * sun.security.internal.spec.TlsKeyMaterialSpec
 * sun.security.internal.spec.TlsMasterSecretParameterSpec
 * sun.security.internal.spec.TlsPrfParameterSpec
 * sun.security.internal.spec.TlsRsaPremasterSecretParameterSpec
 * sun.security.provider.SecureRandom
 *
 */
tasks.named("thirdPartyAudit").configure {
  ignoreViolations(
          'org.bouncycastle.jcajce.provider.BouncyCastleFipsProvider$CoreSecureRandom',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$BaseTLSKeyGeneratorSpi',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSKeyMaterialGenerator',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSKeyMaterialGenerator$2',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSMasterSecretGenerator',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSMasterSecretGenerator$2',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSPRFKeyGenerator',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSRsaPreMasterSecretGenerator',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSRsaPreMasterSecretGenerator$2',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSExtendedMasterSecretGenerator',
          'org.bouncycastle.jcajce.provider.ProvSunTLSKDF$TLSExtendedMasterSecretGenerator$2'
  )
}

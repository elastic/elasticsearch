project: 'Elasticsearch'
exclude:
  - README.md
  - internal/*
  - reference/query-languages/esql/kibana/docs/**
  - reference/query-languages/esql/README.md
cross_links:
  - beats
  - cloud
  - docs-content
  - ecs
  - eland
  - elasticsearch-hadoop
  - elasticsearch-java
  - elasticsearch-js
  - elasticsearch-net
  - elasticsearch-php
  - elasticsearch-py
  - elasticsearch-rs
  - elasticsearch-ruby
  - go-elasticsearch
  - kibana
  - logstash
toc:
  - toc: reference
  - toc: release-notes
  - toc: extend
subs:
  ecloud:   "Elastic Cloud"
  ess:   "Elasticsearch Service"
  ece:   "Elastic Cloud Enterprise"
  eck:   "Elastic Cloud on Kubernetes"
  ech:   "Elastic Cloud Hosted"
  serverless-full:   "Elastic Cloud Serverless"
  serverless-short:   "Serverless"
  es-serverless:   "Elasticsearch Serverless"
  ess-utm-params:   "?page=docs&placement=docs-body"
  cloud-only:   "This feature is designed for indirect use by Elasticsearch Service, Elastic Cloud Enterprise, and Elastic Cloud on Kubernetes. Direct use is not supported."
  security-app:   "Elastic Security app"
  stack-monitor-app:   "Stack Monitoring"
  agent:   "Elastic Agent"
  fleet:   "Fleet"
  stack:   "Elastic Stack"
  xpack:   "X-Pack"
  es:   "Elasticsearch"
  kib:   "Kibana"
  ls:   "Logstash"
  beats:   "Beats"
  filebeat:   "Filebeat"
  metricbeat:   "Metricbeat"
  es-sql:   "Elasticsearch SQL"
  esql:   "ES|QL"
  security-features:   "security features"
  operator-feature:   "operator privileges feature"
  stack-security-features:   "Elastic Stack security features"
  monitoring:   "X-Pack monitoring"
  monitor-features:   "monitoring features"
  stack-monitor-features:   "Elastic Stack monitoring features"
  watcher:   "Watcher"
  report-features:   "reporting features"
  ml:   "machine learning"
  ml-cap:   "Machine learning"
  ml-features:   "machine learning features"
  ccr:   "cross-cluster replication"
  ccr-init:   "CCR"
  ccs:   "cross-cluster search"
  ccs-cap:   "Cross-cluster search"
  ilm:   "index lifecycle management"
  ilm-cap:   "Index lifecycle management"
  ilm-init:   "ILM"
  search-snap:   "searchable snapshot"
  search-snaps:   "searchable snapshots"
  slm:   "snapshot lifecycle management"
  slm-init:   "SLM"
  dfeed:   "datafeed"
  dfeeds:   "datafeeds"
  dfeeds-cap:   "Datafeeds"
  anomaly-detect:   "anomaly detection"
  anomaly-detect-cap:   "Anomaly detection"
  anomaly-job:   "anomaly detection job"
  anomaly-jobs:   "anomaly detection jobs"
  anomaly-jobs-cap:   "Anomaly detection jobs"
  dataframe:   "data frame"
  dataframes:   "data frames"
  dataframe-cap:   "Data frame"
  dataframes-cap:   "Data frames"
  watcher-transform:   "payload transform"
  watcher-transforms:   "payload transforms"
  watcher-transform-cap:   "Payload transform"
  watcher-transforms-cap:   "Payload transforms"
  transform:   "transform"
  transforms:   "transforms"
  transform-cap:   "Transform"
  transforms-cap:   "Transforms"
  dataframe-transform:   "transform"
  dataframe-transform-cap:   "Transform"
  dataframe-transforms:   "transforms"
  dataframe-transforms-cap:   "Transforms"
  dfanalytics-cap:   "Data frame analytics"
  dfanalytics:   "data frame analytics"
  dataframe-analytics-config:   "'{dataframe} analytics config'"
  dfanalytics-job:   "'{dataframe} analytics job'"
  dfanalytics-jobs:   "'{dataframe} analytics jobs'"
  dfanalytics-jobs-cap:   "'{dataframe-cap} analytics jobs'"
  cdataframe:   "continuous data frame"
  cdataframes:   "continuous data frames"
  cdataframe-cap:   "Continuous data frame"
  cdataframes-cap:   "Continuous data frames"
  cdataframe-transform:   "continuous transform"
  cdataframe-transforms:   "continuous transforms"
  cdataframe-transforms-cap:   "Continuous transforms"
  ctransform:   "continuous transform"
  ctransform-cap:   "Continuous transform"
  ctransforms:   "continuous transforms"
  ctransforms-cap:   "Continuous transforms"
  oldetection:   "outlier detection"
  oldetection-cap:   "Outlier detection"
  olscore:   "outlier score"
  olscores:   "outlier scores"
  fiscore:   "feature influence score"
  evaluatedf-api:   "evaluate {dataframe} analytics API"
  evaluatedf-api-cap:   "Evaluate {dataframe} analytics API"
  regression:   "regression"
  regression-cap:   "Regression"
  classification-cap:   "Classification"
  infer-cap:   "Inference"
  infer:   "inference"
  nlp:   "natural language processing"
  multi-arg:   "†footnoteref:[multi-arg,This parameter accepts multiple arguments.]"
  multi-arg-ref:   "†footnoteref:[multi-arg]"


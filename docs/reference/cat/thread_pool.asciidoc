[[cat-thread-pool]]
=== cat thread pool API
++++
<titleabbrev>cat thread pool</titleabbrev>
++++

[IMPORTANT]
====
cat APIs are only intended for human consumption using the command line or {kib} 
console. They are _not_ intended for use by applications. For application 
consumption, use the <<cluster-nodes-info,nodes info API>>.
====

Returns thread pool statistics for each node in a cluster. Returned information
includes all <<modules-threadpool,built-in thread pools>> and custom thread
pools.


[[cat-thread-pool-api-request]]
==== {api-request-title}

`GET /_cat/thread_pool/<thread_pool>`

`GET /_cat/thread_pool`

[[cat-thread-pool-api-prereqs]]
==== {api-prereq-title}

* If the {es} {security-features} are enabled, you must have the `monitor` or
`manage` <<privileges-list-cluster,cluster privilege>> to use this API.

[[cat-thread-pool-path-params]]
==== {api-path-parms-title}

`<thread_pool>`::
(Optional, string) Comma-separated list of thread pool names used to limit the
request. Accepts wildcard expressions.


[[cat-thread-pool-query-params]]
==== {api-query-parms-title}

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=http-format]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=cat-h]
+
--
If you do not specify which columns to include, the API returns the default
columns in the order listed below. If you explicitly specify one or more
columns, it only returns the specified columns.

Valid columns are:

`node_name`::
(Default) Node name, such as `I8hydUG`.

`name`::
(Default) Name of the thread pool, such as `analyze` or `generic`.

`active`, `a`::
(Default) Number of active threads in the current thread pool.

`queue`,`q`::
(Default) Number of tasks in the queue for the current thread pool.

`rejected`, `r`::
(Default) Number of tasks rejected by the thread pool executor.

`completed`, `c`::
Number of tasks completed by the thread pool executor.

`core`, `cr`::
Configured core number of active threads allowed in the current thread pool.

`ephemeral_id`,`eid`::
Ephemeral node ID.

`host`, `h`::
Hostname for the current node.

`ip`, `i`::
IP address for the current node.

`keep_alive`, `k`::
Configured keep alive time for threads.

`largest`, `l`::
Highest number of active threads in the current thread pool.

`max`, `mx`::
Configured maximum number of active threads allowed in the current thread pool.

`node_id`, `id`::
ID of the node, such as `k0zy`.

`pid`, `p`::
Process ID of the running node.

`pool_size`, `psz`::
Number of threads in the current thread pool.

`port`, `po`::
Bound transport port for the current node.

`queue_size`, `qs`::
Maximum number of tasks permitted in the queue for the current thread pool.

`size`, `sz`::
Configured fixed number of active threads allowed in the current thread pool.

`type`, `t`::
Type of thread pool. Returned values are `fixed`, `fixed_auto_queue_size`, `direct`, or `scaling`.

--

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=help]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=local]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=cat-s]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=time]

include::{es-repo-dir}/rest-api/common-parms.asciidoc[tag=cat-v]


[[cat-thread-pool-api-example]]
==== {api-examples-title}

[[cat-thread-pool-api-ex-default]]
===== Example with default columns

[source,console]
--------------------------------------------------
GET /_cat/thread_pool
--------------------------------------------------

The API returns the following response:

[source,txt]
--------------------------------------------------
node-0 analyze             0 0 0
...
node-0 fetch_shard_started 0 0 0
node-0 fetch_shard_store   0 0 0
node-0 flush               0 0 0
...
node-0 write               0 0 0
--------------------------------------------------
// TESTRESPONSE[s/\.\.\./(node-0 \\S+ 0 0 0\n)*/]
// TESTRESPONSE[s/\d+/\\d+/ non_json]
// The substitutions do two things:
// 1. Expect any number of extra thread pools. This allows us to only list a
//    few thread pools. The list would be super long otherwise. In addition,
//    if xpack is installed then the list will contain more thread pools and
//    this way we don't have to assert about them.
// 2. Expect any number of active, queued, or rejected items. We really don't
//    know how many there will be and we just want to assert that there are
//    numbers in the response, not *which* numbers are there.


[[cat-thread-pool-api-ex-headings]]
===== Example with explicit columns

The following API request returns the `id`, `name`, `active`, `rejected`, and
`completed` columns. The request limits returned information to the `generic`
thread pool.

[source,console]
--------------------------------------------------
GET /_cat/thread_pool/generic?v=true&h=id,name,active,rejected,completed
--------------------------------------------------

The API returns the following response:

[source,txt]
--------------------------------------------------
id                     name    active rejected completed
0EWUhXeBQtaVGlexUeVwMg generic      0        0        70
--------------------------------------------------
// TESTRESPONSE[s/0EWUhXeBQtaVGlexUeVwMg/[\\w-]+/ s/\d+/\\d+/ non_json]


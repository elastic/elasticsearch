[#es-connectors-box]
=== Elastic Box connector reference
++++
<titleabbrev>Box</titleabbrev>
++++
// Attributes used in this file
:service-name: Box
:service-name-stub: box

Th Box connector is written in Python using the {connectors-python}[Elastic connector framework^].

View the {connectors-python}/connectors/sources/box.py[source code for this connector^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).

// //////// //// //// //// //// //// //// ////////
// //////// NATIVE CONNECTOR REFERENCE (MANAGED SERVICE) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-box-native-connector-reference]
==== *Elastic managed connector reference*

.View *Elastic managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-box-availability-and-prerequisites]
===== Availability and prerequisites

This connector is available as a *managed connector* as of Elastic version *8.14.0*.

To use this connector natively in Elastic Cloud, satisfy all <<es-native-connectors-prerequisites,managed connector requirements>>.

[NOTE]
====
This connector is in *technical preview* and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#es-connectors-box-create-connector-native]
===== Create a {service-name} connector
include::_connectors-create-native.asciidoc[]

[discrete#es-connectors-box-usage]
===== Usage

To use this connector as a *self-managed connector*, use the *Box* tile from the connectors list OR *Customized connector* workflow.

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-box-api-authorization]
===== Box API Authorization

[discrete#es-connectors-box-free-account]
====== Box Free Account

[discrete#es-connectors-box-create-oauth-custom-app]
*Create Box User Authentication (OAuth 2.0) Custom App*

You'll need to create an OAuth app in the Box developer console by following these steps:

1. Register a new app in the https://app.box.com/developers/console[Box dev console] with custom App and select User authentication (OAuth 2.0).
2. Add the URL of the web page in *Redirect URIs*, which is accessible by you.
3. Check "Write all files and folders stored in Box" in Application Scopes.
4. Once the app is created, *Client ID* and *Client secret* values are available in the configuration tab. Keep these handy.

[discrete#es-connectors-box-connector-generate-a-refresh-token]
*Generate a refresh Token*

To generate a refresh token, follow these steps:

1. Go to the following URL, replacing `<CLIENT_ID>` with the *Client ID* value saved earlier.
For example:
+
[source,bash]
----
https://account.box.com/api/oauth2/authorize?response_type=code&client_id=<CLIENT_ID>
----
+
2. Grant access to your application.
3. You will now be redirected to the web page that you configured in *Redirect URIs*, and the HTTP response should contain an *authorization code* that you'll use to generate a refresh token.
*Note:* Authorization codes to generate refresh tokens can only be used once and are only valid for 30 seconds.
4. In your terminal, run the following `curl` command, replacing `<AUTHORIZATION_CODE>`, `<CLIENT_ID> and <CLIENT_SECRET>` with the values you saved earlier:
+
[source,bash]
----
curl -i -X POST "https://api.box.com/oauth2/token" \
     -H "Content-Type: application/x-www-form-urlencoded" \
     -d "client_id=<CLIENT_ID>" \
     -d "client_secret=<CLIENT_SECRET>" \
     -d "code=<AUTHORIZATION_CODE>" \
     -d "grant_type=authorization_code"
----
+
Save the refresh token from the response. You'll need this for the connector configuration.

[discrete#es-connectors-box-enterprise-account]
====== Box Enterprise Account

[discrete#es-connectors-box-connector-create-box-server-authentication-client-credentials-grant-custom-app]
*Create Box Server Authentication (Client Credentials Grant) Custom App*

1. Register a new app in the https://app.box.com/developers/console[Box dev console] with custom App and select Server Authentication (Client Credentials Grant).
2. Check following permissions:
+
* "Write all files and folders stored in Box" in Application Scopes
* "Make API calls using the as-user header" in Advanced Features
3. Select `App + Enterprise Access` in App Access Level.
4. Authorize your application from the admin console.
Save the *Client Credentials* and *Enterprise ID*. You'll need these to configure the connector.

[discrete#es-connectors-box-configuration]
===== Configuration

`Box Account`  (required)::
Dropdown to determine Box Account type: `Box Free Account` or `Box Enterprise Account`. Default value is `Box Free Account`.

`Client ID`  (required)::
The Client ID to authenticate with Box instance.

`Client Secret`  (required)::
The Client Secret to authenticate with Box instance.

`Refresh Token`  (required if Box Account is Box Free)::
The Refresh Token to generate Access Token. 
*NOTE:* If the process terminates, you'll need to generate a new refresh token.

`Enterprise ID`  (required if Box Account is Box Enterprise)::
The Enterprise ID to authenticate with Box instance.

[discrete#es-connectors-box-content-extraction]
===== Content Extraction

Refer to <<es-connectors-content-extraction>>.

[discrete#es-connectors-box-documents-and-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *Files*
* *Folders*

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced. *All documents* indexed to an Elastic deployment will be visible to *all users with access* to that Elastic Deployment.
====

[discrete#es-connectors-box-sync-types]
====== Sync types

<<es-connectors-sync-types-full,Full syncs>> are supported by default for all connectors.

This connector also supports <<es-connectors-sync-types-incremental,incremental syncs>>.

[discrete#es-connectors-box-sync-rules]
===== Sync rules

<<es-sync-rules-basic, Basic sync rules>> are identical for all connectors and are available by default.

[discrete#es-connectors-box-advanced-sync-rules]
===== Advanced Sync Rules

Advanced sync rules are not available for this connector in the present version.

[discrete#es-connectors-box-known-issues]
===== Known issues

There are no known issues for this connector.
Refer to <<es-connectors-known-issues>> for a list of known issues for all connectors.

[discrete#es-connectors-box-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-box-security]
===== Security

See <<es-connectors-security>>.

// Closing the collapsible section 
===============


// //////// //// //// //// //// //// //// ////////
// //////// CONNECTOR CLIENT REFERENCE (SELF-MANAGED) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-box-connector-client-reference]
==== *Self-managed connector reference*

.View *self-managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-box-client-availability-and-prerequisites]
===== Availability and prerequisites

This connector is available as a self-managed *self-managed connector*. To use this connector, satisfy all <<es-build-connector, self-managed connector prerequisites>>.

[NOTE]
====
This connector is in *technical preview* and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#es-connectors-box-client-create-connector-client]
===== Create a {service-name} connector
include::_connectors-create-client.asciidoc[]

[discrete#es-connectors-box-client-usage]
===== Usage

To use this connector as a *self-managed connector*, use the *Box* tile from the connectors list OR *Customized connector* workflow.

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-box-client-api-authorization]
===== Box API Authorization

[discrete#es-connectors-box-client-free-account]
====== Box Free Account

[discrete#es-connectors-box-client-create-oauth-custom-app]
*Create Box User Authentication (OAuth 2.0) Custom App*

You'll need to create an OAuth app in the Box developer console by following these steps:

1. Register a new app in the https://app.box.com/developers/console[Box dev console] with custom App and select User authentication (OAuth 2.0).
2. Add the URL of the web page in *Redirect URIs*, which is accessible by you.
3. Check "Write all files and folders stored in Box" in Application Scopes.
4. Once the app is created, *Client ID* and *Client secret* values are available in the configuration tab. Keep these handy.

[discrete#es-connectors-box-client-connector-generate-a-refresh-token]
*Generate a refresh Token*

To generate a refresh token, follow these steps:

1. Go to the following URL, replacing `<CLIENT_ID>` with the *Client ID* value saved earlier.
For example:
+
[source,bash]
----
https://account.box.com/api/oauth2/authorize?response_type=code&client_id=<CLIENT_ID>
----
+
2. Grant access to your application.
3. You will now be redirected to the web page that you configured in *Redirect URIs*, and the HTTP response should contain an *authorization code* that you'll use to generate a refresh token.
*Note:* Authorization codes to generate refresh tokens can only be used once and are only valid for 30 seconds.
4. In your terminal, run the following `curl` command, replacing `<AUTHORIZATION_CODE>`, `<CLIENT_ID> and <CLIENT_SECRET>` with the values you saved earlier:
+
[source,bash]
----
curl -i -X POST "https://api.box.com/oauth2/token" \
     -H "Content-Type: application/x-www-form-urlencoded" \
     -d "client_id=<CLIENT_ID>" \
     -d "client_secret=<CLIENT_SECRET>" \
     -d "code=<AUTHORIZATION_CODE>" \
     -d "grant_type=authorization_code"
----
+
Save the refresh token from the response. You'll need this for the connector configuration.

[discrete#es-connectors-box-client-enterprise-account]
====== Box Enterprise Account

[discrete#es-connectors-box-client-connector-create-box-server-authentication-client-credentials-grant-custom-app]
*Create Box Server Authentication (Client Credentials Grant) Custom App*

1. Register a new app in the https://app.box.com/developers/console[Box dev console] with custom App and select Server Authentication (Client Credentials Grant).
2. Check following permissions:
+
* "Write all files and folders stored in Box" in Application Scopes
* "Make API calls using the as-user header" in Advanced Features
3. Select `App + Enterprise Access` in App Access Level.
4. Authorize your application from the admin console.
Save the *Client Credentials* and *Enterprise ID*. You'll need these to configure the connector.

[discrete#es-connectors-box-client-configuration]
===== Configuration

`Box Account`  (required)::
Dropdown to determine Box Account type: `Box Free Account` or `Box Enterprise Account`. Default value is `Box Free Account`.

`Client ID`  (required)::
The Client ID to authenticate with Box instance.

`Client Secret`  (required)::
The Client Secret to authenticate with Box instance.

`Refresh Token`  (required if Box Account is Box Free)::
The Refresh Token to generate Access Token. 
*NOTE:* If the process terminates, you'll need to generate a new refresh token.

`Enterprise ID`  (required if Box Account is Box Enterprise)::
The Enterprise ID to authenticate with Box instance.

[discrete#es-connectors-box-client-client-docker]
====== Deployment using Docker

include::_connectors-docker-instructions.asciidoc[]

[discrete#es-connectors-box-client-content-extraction]
===== Content Extraction

Refer to <<es-connectors-content-extraction>>.

[discrete#es-connectors-box-client-documents-and-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *Files*
* *Folders*

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced. *All documents* indexed to an Elastic deployment will be visible to *all users with access* to that Elastic Deployment.
====

[discrete#es-connectors-box-client-sync-types]
====== Sync types

<<es-connectors-sync-types-full,Full syncs>> are supported by default for all connectors.

This connector also supports <<es-connectors-sync-types-incremental,incremental syncs>>.

[discrete#es-connectors-box-client-sync-rules]
===== Sync rules

<<es-sync-rules-basic, Basic sync rules>> are identical for all connectors and are available by default.

[discrete#es-connectors-box-client-advanced-sync-rules]
===== Advanced Sync Rules

Advanced sync rules are not available for this connector in the present version.

[discrete#es-connectors-box-client-end-to-end-testing]
===== End-to-end Testing

The connector framework enables operators to run functional tests against a real data source.
Refer to <<es-build-connector-testing>> for more details.

To perform E2E testing for the Box connector, run the following command:

[source,shell]
----
$ make ftest NAME=box
----

For faster tests, add the `DATA_SIZE=small` flag:

[source,shell]
----
make ftest NAME=box DATA_SIZE=small
----

[discrete#es-connectors-box-client-known-issues]
===== Known issues

There are no known issues for this connector.
Refer to <<es-connectors-known-issues>> for a list of known issues for all connectors.

[discrete#es-connectors-box-client-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-box-client-security]
===== Security

See <<es-connectors-security>>.


// Closing the collapsible section 
===============

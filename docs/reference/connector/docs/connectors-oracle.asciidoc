[#es-connectors-oracle]
=== Elastic Oracle connector reference
++++
<titleabbrev>Oracle</titleabbrev>
++++

// Attributes used in this file:
:service-name: Oracle
:service-name-stub: oracle


// //////// //// //// //// //// //// //// ////////
// //////// NATIVE CONNECTOR REFERENCE (MANAGED SERVICE) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-oracle-native-connector-reference]
==== *Elastic managed connector reference*

.View *Elastic managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-oracle-availability-prerequisites]
===== Availability and prerequisites

This connector is available natively in Elastic Cloud as of *8.12.0*.
To use this connector, satisfy all <<es-native-connectors, managed connector requirements>>.

[discrete#es-connectors-oracle-create-native-connector]
===== Create a {service-name} connector
include::_connectors-create-native.asciidoc[]

[discrete#es-connectors-oracle-usage]
===== Usage

To use this connector as a *managed connector*, see <<es-native-connectors>>.

The database user requires `CONNECT` and `DBA` privileges and must be the owner of the tables to be indexed.

[discrete#es-connectors-oracle-usage-secure-connection]
====== Secure connection

To set up a secure connection the Oracle service must be installed on the system where the connector is running.

Follow these steps:

. Set the `oracle_home` parameter to your Oracle home directory.
If configuration files are not at the default location, set the `wallet_configuration_path` parameter.
. Create a directory to store the wallet.
+
[source,shell]
----
$ mkdir $ORACLE_HOME/ssl_wallet
----
. Create file named `sqlnet.ora` at `$ORACLE_HOME/network/admin` and add the following content:
+
[source,shell]
----
WALLET_LOCATION = (SOURCE = (METHOD = FILE) (METHOD_DATA = (DIRECTORY = $ORACLE_HOME/ssl_wallet)))
SSL_CLIENT_AUTHENTICATION = FALSE
SSL_VERSION = 1.0
SSL_CIPHER_SUITES = (SSL_RSA_WITH_AES_256_CBC_SHA)
SSL_SERVER_DN_MATCH = ON
----
+
. Run the following commands to create a wallet and attach an SSL certificate.
Replace the file name with your file name.
+
[source,shell]
----
$ orapki wallet create -wallet path-to-oracle-home/ssl_wallet -auto_login_only
$ orapki wallet add -wallet path-to-oracle-home/ssl_wallet -trusted_cert -cert path-to-oracle-home/ssl_wallet/root_ca.pem -auto_login_only
----

For more information, refer to this https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.Options.SSL.html[Amazon RDS documentation^] about Oracle SSL.
Oracle docs: https://docs.oracle.com/database/121/DBSEG/asossl.htm#DBSEG070.
// TODO: check whether this link is appropriate

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-oracle-compatability]
===== Compatibility

This connector is compatible with Oracle Database versions *18c*, *19c* and *21c*.

[discrete#es-connectors-oracle-configuration]
===== Configuration

Use the following configuration fields to set up the connector:

Connection source::
Dropdown to determine the Oracle Source Connection: `Service Name` or `SID`. Default value is `SID`. Select 'Service Name' option if connecting to a pluggable database.

SID:: 
SID of the database.

Service name::
Service name for the database.

Host::
The IP address or hostname of the Oracle database server.
Default value is `127.0.0.1`.

Port::
Port number of the Oracle database server.

Username::
Username to use to connect to the Oracle database server.

Password::
Password to use to connect to the Oracle database server.

Comma-separated list of tables::
Comma-separated list of tables to monitor for changes.
Default value is `*`.
Examples:
* `TABLE_1, TABLE_2`
* `*`

[discrete#es-connectors-oracle-documents-syncs]
===== Documents and syncs

* Tables with no primary key defined are skipped.
* If the table's system change number (SCN) value is not between the `min(SCN)` and `max(SCN)` values of the `SMON_SCN_TIME` table, the connector will not be able to retrieve the most recently updated time.
 Data will therefore index in every sync.
 For more details refer to the following https://community.oracle.com/tech/apps-infra/discussion/4076446/show-error-about-ora-08181-specified-number-is-not-a-valid-system-change-number-when-using-scn-t[discussion thread^].
* The `sys` user is not supported, as it contains 1000+ system tables. If you need to work with the `sys` user, use either `sysdba` or `sysoper` and configure this as the username.

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced.
**All documents** indexed to an Elastic deployment will be visible to **all users with access** to that Elastic Deployment.
====

[discrete#es-connectors-oracle-sync-rules]
===== Sync rules

<<es-sync-rules-basic,Basic sync rules>> are identical for all connectors and are available by default.

Advanced sync rules are not available for this connector in the present version.
Currently, filtering is controlled by ingest pipelines.

[discrete#es-connectors-oracle-known-issues]
===== Known issues

There are no known issues for this connector.

See <<es-connectors-known-issues>> for any issues affecting all connectors.

[discrete#es-connectors-oracle-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-oracle-security]
===== Security

See <<es-connectors-security>>.

[discrete#es-connectors-oracle-source]
===== Framework and source

This connector is built with the {connectors-python}[Elastic connector framework^].

This connector uses the https://github.com/elastic/connectors/blob/{branch}/connectors/sources/generic_database.py[generic database connector source code^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).

View {connectors-python}/connectors/sources/oracle.py[additional code specific to this data source^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).


// Closing the collapsible section 
===============


// //////// //// //// //// //// //// //// ////////
// //////// CONNECTOR CLIENT REFERENCE (SELF-MANAGED) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-oracle-connector-client-reference]
==== *Self-managed connector reference*

.View *self-managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-oracle-client-availability-prerequisites]
===== Availability and prerequisites

This connector is available as a self-managed *self-managed connector*.
This self-managed connector is compatible with Elastic versions *8.6.0+*.
To use this connector, satisfy all <<es-build-connector,self-managed connector requirements>>.

[discrete#es-connectors-oracle-create-connector-client]
===== Create a {service-name} connector
include::_connectors-create-client.asciidoc[]

[discrete#es-connectors-oracle-client-usage]
===== Usage

To use this connector as a *self-managed connector*, see <<es-build-connector>>.

The database user requires `CONNECT` and `DBA` privileges and must be the owner of the tables to be indexed.

[discrete#es-connectors-oracle-client-usage-secure-connection]
====== Secure connection

To set up a secure connection the Oracle service must be installed on the system where the connector is running.

Follow these steps:

. Set the `oracle_home` parameter to your Oracle home directory.
If configuration files are not at the default location, set the `wallet_configuration_path` parameter.
. Create a directory to store the wallet.
+
[source,shell]
----
$ mkdir $ORACLE_HOME/ssl_wallet
----
. Create file named `sqlnet.ora` at `$ORACLE_HOME/network/admin` and add the following content:
+
[source,shell]
----
WALLET_LOCATION = (SOURCE = (METHOD = FILE) (METHOD_DATA = (DIRECTORY = $ORACLE_HOME/ssl_wallet)))
SSL_CLIENT_AUTHENTICATION = FALSE
SSL_VERSION = 1.0
SSL_CIPHER_SUITES = (SSL_RSA_WITH_AES_256_CBC_SHA)
SSL_SERVER_DN_MATCH = ON
----
+
. Run the following commands to create a wallet and attach an SSL certificate.
Replace the file name with your file name.
+
[source,shell]
----
$ orapki wallet create -wallet path-to-oracle-home/ssl_wallet -auto_login_only
$ orapki wallet add -wallet path-to-oracle-home/ssl_wallet -trusted_cert -cert path-to-oracle-home/ssl_wallet/root_ca.pem -auto_login_only
----

For more information, refer to this https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Appendix.Oracle.Options.SSL.html[Amazon RDS documentation^] about Oracle SSL.
Oracle docs: https://docs.oracle.com/database/121/DBSEG/asossl.htm#DBSEG070.
// TODO: check whether this link is appropriate

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-oracle-client-compatability]
===== Compatibility

Oracle Database versions *18c*, *19c* and *21c* are compatible with Elastic connector frameworks.

[discrete#es-connectors-oracle-client-configuration]
===== Configuration

[TIP]
====
When using the <<es-build-connector, self-managed connector>> workflow, these fields will use the default configuration set in the https://github.com/elastic/connectors/blob/{branch}/connectors/sources/generic_database.py[connector source code^].
Note that this data source uses the `generic_database.py` connector source code.
Refer to https://github.com/elastic/connectors/blob/{branch}/connectors/sources/oracle.py[`oracle.py`^] for additional code, specific to this data source.

These configurable fields will be rendered with their respective *labels* in the Kibana UI.
Once connected, users will be able to update these values in Kibana.
====

Use the following configuration fields to set up the connector:

`connection_source`::
Determines the Oracle source: Service Name or SID. Default value is SID. Select 'Service Name' if connecting to a pluggable database.

`sid`::
SID of the database.

`service_name`::
Service name for the database.

`host`::
The IP address or hostname of the Oracle database server.
Default value is `127.0.0.1`.

`port`::
Port number of the Oracle database server.

`username`::
Username to use to connect to the Oracle database server.

`password`::
Password to use to connect to the Oracle database server.

`tables`::
Comma-separated list of tables to monitor for changes.
Default value is `*`.
Examples:
* `TABLE_1, TABLE_2`
* `*`

`oracle_protocol`::
Protocol which the connector uses to establish a connection.
Default value is `TCP`.
For secure connections, use `TCPS`.

`oracle_home`::
Path to Oracle home directory to run connector in thick mode for secured connection.
For unsecured connections, keep this field empty.

`wallet_configuration_path`::
Path to SSL Wallet configuration files.

`fetch_size`::
Number of rows to fetch per request.
Default value is `50`.

`retry_count`::
Number of retry attempts after failed request to Oracle Database.
Default value is `3`.

[discrete#es-connectors-oracle-client-docker]
===== Deployment using Docker

include::_connectors-docker-instructions.asciidoc[]

[discrete#es-connectors-oracle-client-documents-syncs]
===== Documents and syncs

* Tables with no primary key defined are skipped.
* If the table's system change number (SCN) value is not between the `min(SCN)` and `max(SCN)` values of the `SMON_SCN_TIME` table, the connector will not be able to retrieve the most recently updated time.
 Data will therefore index in every sync.
 For more details refer to the following https://community.oracle.com/tech/apps-infra/discussion/4076446/show-error-about-ora-08181-specified-number-is-not-a-valid-system-change-number-when-using-scn-t[discussion thread^].
* The `sys` user is not supported, as it contains 1000+ system tables. If you need to work with the `sys` user, use either `sysdba` or `sysoper` and configure this as the username.

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced.
**All documents** indexed to an Elastic deployment will be visible to **all users with access** to that Elastic Deployment.
====

[discrete#es-connectors-oracle-client-sync-rules]
===== Sync rules

<<es-sync-rules-basic,Basic sync rules>> are identical for all connectors and are available by default.

Advanced sync rules are not available for this connector in the present version.
Currently, filtering is controlled by ingest pipelines.

[discrete#es-connectors-oracle-client-operations]
===== Self-managed connector operations

[discrete#es-connectors-oracle-client-operations-testing]
====== End-to-end testing

The connector framework enables operators to run functional tests against a real data source.
Refer to <<es-build-connector-testing>> for more details.

To execute a functional test for the Oracle connector, run the following command:

[source,shell]
----
make ftest NAME=oracle
----

By default, this will use a medium-sized dataset.
To make the test faster add the `DATA_SIZE=small` argument:

[source,shell]
----
make ftest NAME=oracle DATA_SIZE=small
----

[discrete#es-connectors-oracle-client-known-issues]
===== Known issues

There are no known issues for this connector.

See <<es-connectors-known-issues>> for any issues affecting all connectors.

[discrete#es-connectors-oracle-client-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-oracle-client-security]
===== Security

See <<es-connectors-security>>.

[discrete#es-connectors-oracle-client-source]
===== Framework and source

This connector is built with the {connectors-python}[Elastic connector framework^].

This connector uses the https://github.com/elastic/connectors/blob/{branch}/connectors/sources/generic_database.py[generic database connector source code^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).

View {connectors-python}/connectors/sources/oracle.py[additional code specific to this data source^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).


// Closing the collapsible section 
===============

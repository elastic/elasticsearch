[#es-connectors-teams]
=== Elastic Microsoft Teams connector reference
++++
<titleabbrev>Teams</titleabbrev>
++++
// Attributes used in this file
:service-name: Microsoft Teams
:service-name-stub: microsoft_teams

The Microsoft Teams connector is written in Python using the {connectors-python}[Elastic connector framework^].

View the {connectors-python}/connectors/sources/microsoft_teams.py[source code for this connector^] (branch _{connectors-branch}_, compatible with Elastic _{minor-version}_).

// //////// //// //// //// //// //// //// ////////
// //////// NATIVE CONNECTOR REFERENCE (MANAGED SERVICE) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-teams-native-connector-reference]
==== *Elastic managed connector reference*

.View *Elastic managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-microsoft-teams-native-availability-and-prerequisites]
===== Availability and prerequisites

This managed connector was introduced in Elastic *8.14.0* as a managed service on Elastic Cloud.

To use this connector natively in Elastic Cloud, satisfy all <<es-native-connectors,managed connector requirements>>.

[NOTE]
====
This connector is in **technical preview** and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#es-connectors-teams-create-connector-native]
===== Create a {service-name} connector
include::_connectors-create-native.asciidoc[]

[discrete#es-connectors-microsoft-teams-native-usage]
===== Usage

To use this connector in the UI, select the *Teams* tile when creating a new connector under *Search -> Connectors*.

If you're already familiar with how connectors work, you can also use the {ref}/connector-apis.html[Connector APIs].

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-microsoft-teams-native-connecting-to-microsoft-teams]
===== Connecting to Microsoft Teams

To connect to Microsoft Teams you need to https://learn.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal[create an Azure Active Directory application and service principal] that can access resources. Follow these steps:

1. Go to the https://portal.azure.com[Azure portal] and sign in with your Azure account.
2. Navigate to the *Azure Active Directory* service.
3. Select *App registrations* from the left-hand menu.	
4. Click on the *New registration* button to register a new application.
5. Provide a *name* for your app, and _optionally_ select the supported account types (e.g., single tenant, multi-tenant).
6. Click on the *Register* button to create the app registration.
7. After the registration is complete, you will be redirected to the app's overview page. Take note of the *Application (client) ID* value, as you'll need it later.
8. Scroll down to the *API permissions* section and click on the "Add a permission" button.
9. In the "Request API permissions pane, select "Microsoft Graph" as the API.
10. Select the following *permissions*:
+
*  `TeamMember.Read.All` (Delegated)
*  `Team.ReadBasic.All` (Delegated)
*  `TeamsTab.Read.All` (Delegated)
*  `Group.Read.All` (Delegated)
*  `ChannelMessage.Read.All` (Delegated)
*  `Chat.Read` (Delegated) & `Chat.Read.All` (Application)
*  `Chat.ReadBasic` (Delegated) & `Chat.ReadBasic.All` (Application)
*  `Files.Read.All` (Delegated and Application)
*  `Calendars.Read` (Delegated and Application)
+
11. Click on the *Add permissions* button to add the selected permissions to your app.
12. Click on the *Grant admin consent* button to grant the required permissions to the app. This step requires administrative privileges. *If you are not an admin, you need to request the admin to grant consent via their Azure Portal*.
13. Under the "Certificates & Secrets" tab, go to *Client Secrets*. 
Generate a new client secret and keep a note of the string under the `Value` column.

After completion, use the following configuration parameters to configure the connector.

[discrete#es-connectors-microsoft-teams-native-configuration]
===== Configuration

The following configuration fields are required:

`client_id` (required)::  
Unique identifier for your Azure Application, found on the app's overview page. Example:
* `ab123453-12a2-100a-1123-93fd09d67394`

`secret_value` (required)::  
String value that the application uses to prove its identity when requesting a token, available under the `Certificates & Secrets` tab of your Azure application menu. Example:
* `eyav1~12aBadIg6SL-STDfg102eBfCGkbKBq_Ddyu`

`tenant_id` (required)::  
Unique identifier for your Azure Active Directory instance, found on the app's overview page. Example:
* `123a1b23-12a3-45b6-7c8d-fc931cfb448d`

`username` (required)::  
Username for your Azure Application. Example:
* `dummy@3hmr2@onmicrosoft.com`

`password` (required)::  
Password for your Azure Application. Example:
* `changeme`

[discrete#es-connectors-microsoft-teams-native-content-extraction]
====== Content Extraction

Refer to <<es-connectors-content-extraction>>.

[discrete#es-connectors-microsoft-teams-native-documents-and-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *USER_CHATS_MESSAGE*
* *USER_CHAT_TABS*
* *USER_CHAT_ATTACHMENT*
* *USER_CHAT_MEETING_RECORDING*
* *USER_MEETING*
* *TEAMS*
* *TEAM_CHANNEL*
* *CHANNEL_TAB*
* *CHANNEL_MESSAGE*
* *CHANNEL_MEETING*
* *CHANNEL_ATTACHMENT*
* *CALENDAR_EVENTS*

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced. *All documents* indexed to an Elastic deployment will be visible to *all users with access* to that Elastic Deployment.
====

[discrete#es-connectors-microsoft-teams-native-sync-types]
====== Sync types

<<es-connectors-sync-types-full,Full syncs>> are supported by default for all connectors.

This connector also supports <<es-connectors-sync-types-incremental,incremental syncs>>.

[discrete#es-connectors-microsoft-teams-native-sync-rules]
===== Sync rules

<<es-sync-rules-basic, Basic sync rules>> are identical for all connectors and are available by default.

[discrete#es-connectors-microsoft-teams-native-advanced-sync-rules]
===== Advanced Sync Rules

Advanced sync rules are not available for this connector in the present version.

[discrete#es-connectors-microsoft-teams-native-known-issues]
===== Known issues

* Messages in one-on-one chats for _Chat with Self_ users are not fetched via Graph APIs. Therefore, these messages won't be indexed into Elasticsearch.

Refer to <<es-connectors-known-issues>> for a list of known issues for all connectors.

[discrete#es-connectors-microsoft-teams-native-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-microsoft-teams-native-security]
===== Security

See <<es-connectors-security>>.

// Closing the collapsible section 
===============


// //////// //// //// //// //// //// //// ////////
// //////// CONNECTOR CLIENT REFERENCE (SELF-MANAGED) ///////
// //////// //// //// //// //// //// //// ////////

[discrete#es-connectors-teams-connector-client-reference]
==== *Self-managed connector reference*

.View *self-managed connector* reference
[%collapsible]
===============

[discrete#es-connectors-microsoft-teams-availability-and-prerequisites]
===== Availability and prerequisites

This connector is available as a self-managed *self-managed connector*.
To use this connector, satisfy all <<es-build-connector, self-managed connector prerequisites>>.

[NOTE]
====
This connector is in *technical preview* and is subject to change.
The design and code is less mature than official GA features and is being provided as-is with no warranties.
Technical preview features are not subject to the support SLA of official GA features.
====

[discrete#es-connectors-teams-client-create-connector-client]
===== Create a {service-name} connector
include::_connectors-create-client.asciidoc[]

[discrete#es-connectors-microsoft-teams-usage]
===== Usage

To use this connector as a *self-managed connector*, use the *Microsoft Teams* tile from the connectors list *Customized connector* workflow.

For additional operations, see <<es-connectors-usage>>.

[discrete#es-connectors-microsoft-teams-connecting-to-microsoft-teams]
===== Connecting to Microsoft Teams

To connect to Microsoft Teams you need to https://learn.microsoft.com/en-us/azure/active-directory/develop/howto-create-service-principal-portal[create an Azure Active Directory application and service principal] that can access resources. Follow these steps:

1. Go to the https://portal.azure.com[Azure portal] and sign in with your Azure account.
2. Navigate to the *Azure Active Directory* service.
3. Select *App registrations* from the left-hand menu.	
4. Click on the *New registration* button to register a new application.
5. Provide a *name* for your app, and _optionally_ select the supported account types (e.g., single tenant, multi-tenant).
6. Click on the *Register* button to create the app registration.
7. After the registration is complete, you will be redirected to the app's overview page. Take note of the *Application (client) ID* value, as you'll need it later.
8. Scroll down to the *API permissions* section and click on the "Add a permission" button.
9. In the "Request API permissions pane, select "Microsoft Graph" as the API.
10. Select the following *permissions*:
+
*  `TeamMember.Read.All` (Delegated)
*  `Team.ReadBasic.All` (Delegated)
*  `TeamsTab.Read.All` (Delegated)
*  `Group.Read.All` (Delegated)
*  `ChannelMessage.Read.All` (Delegated)
*  `Chat.Read` (Delegated) & `Chat.Read.All` (Application)
*  `Chat.ReadBasic` (Delegated) & `Chat.ReadBasic.All` (Application)
*  `Files.Read.All` (Delegated and Application)
*  `Calendars.Read` (Delegated and Application)
+
11. Click on the *Add permissions* button to add the selected permissions to your app.
12. Click on the *Grant admin consent* button to grant the required permissions to the app. This step requires administrative privileges. *If you are not an admin, you need to request the admin to grant consent via their Azure Portal*.
13. Under the "Certificates & Secrets" tab, go to *Client Secrets*. 
Generate a new client secret and keep a note of the string under the `Value` column.

After completion, use the following configuration parameters to configure the connector.

[discrete#es-connectors-microsoft-teams-configuration]
===== Configuration

The following configuration fields are required:

`client_id` (required)::  
Unique identifier for your Azure Application, found on the app's overview page. Example:
* `ab123453-12a2-100a-1123-93fd09d67394`

`secret_value` (required)::  
String value that the application uses to prove its identity when requesting a token, available under the `Certificates & Secrets` tab of your Azure application menu. Example:
* `eyav1~12aBadIg6SL-STDfg102eBfCGkbKBq_Ddyu`

`tenant_id` (required)::  
Unique identifier for your Azure Active Directory instance, found on the app's overview page. Example:
* `123a1b23-12a3-45b6-7c8d-fc931cfb448d`

`username` (required)::  
Username for your Azure Application. Example:
* `dummy@3hmr2@onmicrosoft.com`

`password` (required)::  
Password for your Azure Application. Example:
* `changeme`

[discrete#es-connectors-microsoft-teams-client-docker]
====== Deployment using Docker

include::_connectors-docker-instructions.asciidoc[]

[discrete#es-connectors-microsoft-teams-content-extraction]
====== Content Extraction

Refer to <<es-connectors-content-extraction>>.

[discrete#es-connectors-microsoft-teams-documents-and-syncs]
===== Documents and syncs

The connector syncs the following objects and entities:

* *USER_CHATS_MESSAGE*
* *USER_CHAT_TABS*
* *USER_CHAT_ATTACHMENT*
* *USER_CHAT_MEETING_RECORDING*
* *USER_MEETING*
* *TEAMS*
* *TEAM_CHANNEL*
* *CHANNEL_TAB*
* *CHANNEL_MESSAGE*
* *CHANNEL_MEETING*
* *CHANNEL_ATTACHMENT*
* *CALENDAR_EVENTS*

[NOTE]
====
* Files bigger than 10 MB won't be extracted.
* Permissions are not synced. *All documents* indexed to an Elastic deployment will be visible to *all users with access* to that Elastic Deployment.
====

[discrete#es-connectors-microsoft-teams-sync-types]
====== Sync types

<<es-connectors-sync-types-full,Full syncs>> are supported by default for all connectors.

This connector also supports <<es-connectors-sync-types-incremental,incremental syncs>>.

[discrete#es-connectors-microsoft-teams-sync-rules]
===== Sync rules

<<es-sync-rules-basic, Basic sync rules>> are identical for all connectors and are available by default.

[discrete#es-connectors-microsoft-teams-advanced-sync-rules]
===== Advanced Sync Rules

Advanced sync rules are not available for this connector in the present version.

[discrete#es-connectors-microsoft-teams-end-to-end-testing]
===== End-to-end Testing

The connector framework enables operators to run functional tests against a real data source.
Refer to <<es-build-connector-testing>> for more details.

To perform E2E testing for the Teams connector, run the following command:

[source,shell]
----
$ make ftest NAME=microsoft_teams
----

For faster tests, add the `DATA_SIZE=small` flag:

[source,shell]
----
make ftest NAME=microsoft_teams DATA_SIZE=small
----

[discrete#es-connectors-microsoft-teams-known-issues]
===== Known issues

* Messages in one-on-one chats for _Chat with Self_ users are not fetched via Graph APIs. Therefore, these messages won't be indexed into Elasticsearch.

Refer to <<es-connectors-known-issues>> for a list of known issues for all connectors.

[discrete#es-connectors-microsoft-teams-troubleshooting]
===== Troubleshooting

See <<es-connectors-troubleshooting>>.

[discrete#es-connectors-microsoft-teams-security]
===== Security

See <<es-connectors-security>>.

// Closing the collapsible section 
===============

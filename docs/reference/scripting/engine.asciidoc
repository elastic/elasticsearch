[[modules-scripting-engine]]
== Advanced scripts using script engines

A `ScriptEngine` is a backend for implementing a scripting language. It may also
be used to write scripts that need to use advanced internals of scripting. For example,
a script that wants to use term frequencies while scoring.

The plugin {plugins}/plugin-authors.html[documentation] has more information on
how to write a plugin so that Elasticsearch will properly load it. To register
the `ScriptEngine`, your plugin should implement the `ScriptPlugin` interface
and override the `getScriptEngine(Settings settings)` method.

The following is an example of a custom `ScriptEngine` which uses the language
name `expert_scripts`. It implements a single script called `pure_df` which
may be used as a search script to override each document's score as
the document frequency of a provided term.

["source","java",subs="attributes,callouts,macros"]
--------------------------------------------------
include-tagged::{elasticsearch-root}/plugins/examples/script-expert-scoring/src/main/java/org/elasticsearch/example/expertscript/ExpertScriptPlugin.java[expert_engine]
--------------------------------------------------

You can execute the script by specifying its `lang` as `expert_scripts`, and the name
of the script as the script source:


[source,console]
--------------------------------------------------
POST /_search
{
  "query": {
    "function_score": {
      "query": {
        "match": {
          "body": "foo"
        }
      },
      "functions": [
        {
          "script_score": {
            "script": {
                "source": "pure_df",
                "lang" : "expert_scripts",
                "params": {
                    "field": "body",
                    "term": "foo"
                }
            }
          }
        }
      ]
    }
  }
}
--------------------------------------------------
// TEST[skip:we don't have an expert script plugin installed to test this]

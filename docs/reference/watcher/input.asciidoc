[role="xpack"]
[[input]]
== {watcher} inputs
++++
<titleabbrev>Inputs</titleabbrev>
++++

When a watch is triggered, its _input_ loads data into the execution 
context. This payload is accessible during the subsequent watch execution 
phases. For example, you can base a watch's condition on the data loaded by its
input.

{watcher} supports four input types: 

* <<input-simple,`simple`>>: load static data into the execution context.
* <<input-search,`search`>>: load the results of a search into the execution 
context.
* <<input-http,`http`>>: load the results of an HTTP request into the execution
context.
* <<input-chain,`chain`>>: use a series of inputs to load data into the 
execution context.

NOTE: If you don't define an input for a watch, an empty payload is loaded
      into the execution context.

include::input/simple.asciidoc[]

include::input/search.asciidoc[]

include::input/http.asciidoc[]

include::input/chain.asciidoc[]

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */
apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.publish'

apply plugin: 'elasticsearch.embedded-providers'

embeddedProviders {
  impl 'entitlement', project(':libs:entitlement:instrumentation-impl')
}

configurations {
  entitlementBridge
}

dependencies {
  compileOnly project(':libs:core') // For @SuppressForbidden
  compileOnly project(":libs:x-content") // for parsing policy files
  testImplementation project(":test:framework")
  entitlementBridge project(':libs:entitlement:bridge')
}

tasks.named('compileJava').configure {
  // The bridge library can't be a normal dependency because it will appear in the java.base module at runtime
  System.err.println "--patch-module=java.base=${configurations.entitlementBridge.singleFile}"
  options.compilerArgs << "--patch-module=java.base=${configurations.entitlementBridge.singleFile}"
  options.compilerArgs << "--add-exports=java.base/org.elasticsearch.entitlement.api=org.elasticsearch.entitlement.runtime"
  options.release.set(null) // Incompatible with --patch-module
}

tasks.named('forbiddenApisMain').configure {
  replaceSignatureFiles 'jdk-signatures'
}

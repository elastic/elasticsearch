/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

apply plugin: 'elasticsearch.publish'
apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.mrjar'

import org.elasticsearch.gradle.internal.precommit.CheckForbiddenApisTask

base {
  archivesName = "x-content-impl"
}

String jacksonVersion = "2.17.2"

dependencies {
  compileOnly project(':libs:core')
  compileOnly project(':libs:x-content')
  implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-smile:${jacksonVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
  implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${jacksonVersion}"
  implementation "org.yaml:snakeyaml:${versions.snakeyaml}"
  implementation "org.simdjson:simdjson-java:0.3.0"

  testImplementation(project(":test:framework")) {
    exclude group: 'org.elasticsearch', module: 'x-content'
  }
}

tasks.named("dependencyLicenses").configure {
  mapping from: /jackson-.*/, to: 'jackson'
}

// workaround for (/com/fasterxml/jackson/core/JsonFactory.class): warning: Cannot find annotation method
// 'value()' in type 'ServiceProvider': class file for aQute.bnd.annotation.spi.ServiceProvider not found
tasks.withType(JavaCompile).configureEach {
  options.compilerArgs.add("-Xlint:-classfile")
}

// not published, so no need for javadoc
tasks.named("javadoc").configure { enabled = false }

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
    // from com.fasterxml.jackson.dataformat.yaml.YAMLMapper (jackson-dataformat-yaml)
    'com.fasterxml.jackson.databind.ObjectMapper',
    'com.fasterxml.jackson.databind.cfg.MapperBuilder'
  )
}

// For JsonSimdXContentParser
// compileMain21Java does not exist within idea (see MrJarPlugin) so we cannot reference directly by name
tasks.matching { it.name == "compileMain21Java" }.configureEach {
  options.compilerArgs << '--add-modules=jdk.incubator.vector'
  // we remove Werror, since incubating suppression (-Xlint:-incubating)
  // is only support since JDK 22
  options.compilerArgs -= '-Werror'
}


tasks.named('test').configure {
  if (buildParams.getRuntimeJavaVersion().map{ it.majorVersion.toInteger() }.get() >= 21) {
    jvmArgs '--add-modules=jdk.incubator.vector'
  }
}

tasks.withType(CheckForbiddenApisTask).configureEach {
  replaceSignatureFiles 'jdk-signatures'
}

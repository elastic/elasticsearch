setup:
  - do:
      indices.create:
          index: test_1
          body:
            mappings:
              properties:
                number:
                  type: integer
                date:
                  type: date
                  fields:
                    nanos:
                      type: date_nanos

---
"Basic test":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 1}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 151}'

  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 50

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 50 }
  - is_false: aggregations.histo.buckets.1.key_as_string
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 100 }
  - is_false: aggregations.histo.buckets.2.key_as_string
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 150 }
  - is_false: aggregations.histo.buckets.3.key_as_string
  - match: { aggregations.histo.buckets.3.doc_count: 1 }

---
"Format test":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 1}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 151}'

  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 50
                format: "Value is ##0.0"

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - match: { aggregations.histo.buckets.0.key_as_string: "Value is 0.0" }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 50 }
  - match: { aggregations.histo.buckets.1.key_as_string: "Value is 50.0" }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 100 }
  - match: { aggregations.histo.buckets.2.key_as_string: "Value is 100.0" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 150 }
  - match: { aggregations.histo.buckets.3.key_as_string: "Value is 150.0" }
  - match: { aggregations.histo.buckets.3.doc_count: 1 }

---
"Show empty intervals":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 1}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 61}'
          - '{"index": {}}'
          - '{"number": 71}'
  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 20

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 20 }
  - is_false: aggregations.histo.buckets.1.key_as_string
  - match: { aggregations.histo.buckets.1.doc_count: 0 }

  - match: { aggregations.histo.buckets.2.key: 40 }
  - is_false: aggregations.histo.buckets.2.key_as_string
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 60 }
  - is_false: aggregations.histo.buckets.3.key_as_string
  - match: { aggregations.histo.buckets.3.doc_count: 2 }

---
"histogram with min_doc_count":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 1}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 61}'
          - '{"index": {}}'
          - '{"number": 71}'

  - do:
      search: # Test with min_doc_count: 1
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 20
                min_doc_count: 1

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 40 }
  - is_false: aggregations.histo.buckets.1.key_as_string
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 60 }
  - is_false: aggregations.histo.buckets.2.key_as_string
  - match: { aggregations.histo.buckets.2.doc_count: 2 }

  - do:
      search: # Test with min_doc_count: 2
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 20
                min_doc_count: 2

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 1 }
  - match: { aggregations.histo.buckets.0.key: 60 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 2 }

---
"histogram with extended_bounds":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 52}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 150}'

  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field : number
                interval : 50
                extended_bounds:
                  min: 0
                  max: 200

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 5 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 0 }

  - match: { aggregations.histo.buckets.1.key: 50 }
  - is_false: aggregations.histo.buckets.1.key_as_string
  - match: { aggregations.histo.buckets.1.doc_count: 2 }

  - match: { aggregations.histo.buckets.2.key: 100 }
  - is_false: aggregations.histo.buckets.2.key_as_string
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 150 }
  - is_false: aggregations.histo.buckets.3.key_as_string
  - match: { aggregations.histo.buckets.3.doc_count: 1 }

  - match: { aggregations.histo.buckets.4.key: 200 }
  - is_false: aggregations.histo.buckets.4.key_as_string
  - match: { aggregations.histo.buckets.4.doc_count: 0 }

---
"histogram with hard bounds":
  - skip:
      version: " - 7.9.99"
      reason:  hard_bounds were introduced in 7.10.0

  - do:
      indices.create:
        index: test_3
        body:
          mappings:
            properties:
              range:
                type: long_range

  - do:
      bulk:
        index: test_3
        refresh: true
        body:
          - '{"index": {}}'
          - '{"range": {"lte": 10}}'
          - '{"index": {}}'
          - '{"range": {"gte": 15}}'

  - do:
      search:
        index: test_3
        body:
          size: 0
          aggs:
            histo:
              histogram:
                field: range
                interval: 1
                hard_bounds:
                  min: 0
                  max: 20
  - match: { hits.total.value: 2 }
  - length: { aggregations.histo.buckets: 21 }
  - match: { aggregations.histo.buckets.0.key: 0 }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }
  - match: { aggregations.histo.buckets.20.key: 20 }
  - match: { aggregations.histo.buckets.20.doc_count: 1 }

---
"histogram with offset and unmapped":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"number": 11}'
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 151}'

  - do:
      indices.create:
        index: test_unmapped

  - do:
      indices.refresh: {}

  - do:
      search:
        index: test_*
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 50
                offset: 20

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }

  - match: { aggregations.histo.buckets.0.key: -30 }
  - is_false: aggregations.histo.buckets.0.key_as_string
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 20 }
  - is_false: aggregations.histo.buckets.1.key_as_string
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 70 }
  - is_false: aggregations.histo.buckets.2.key_as_string
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 120 }
  - is_false: aggregations.histo.buckets.3.key_as_string
  - match: { aggregations.histo.buckets.3.doc_count: 1 }

---
"histogram with missing field without missing param":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"another_number": 11}' # number field is missing
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 151}'

  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 50

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }

  - match: { aggregations.histo.buckets.0.key: 50 }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 100 }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 150 }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }


---
"histogram with missing field with missing param":
  - do:
      bulk:
        index: test_1
        refresh: true
        body:
          - '{"index": {}}'
          - '{"another_number": 11}' # number field is missing
          - '{"index": {}}'
          - '{"number": 51}'
          - '{"index": {}}'
          - '{"number": 101}'
          - '{"index": {}}'
          - '{"number": 151}'

  - do:
      search:
        body:
          aggs:
            histo:
              histogram:
                field: number
                interval: 50
                missing: 0

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }

  - match: { aggregations.histo.buckets.0.key: 0 }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - match: { aggregations.histo.buckets.1.key: 50 }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }

  - match: { aggregations.histo.buckets.2.key: 100 }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - match: { aggregations.histo.buckets.3.key: 150 }
  - match: { aggregations.histo.buckets.3.doc_count: 1 }

---
"date_histogram":
  - skip:
      version: " - 7.1.99"
      reason:  calendar_interval introduced in 7.2.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              # There was a BWC issue that only showed up on empty shards. This
              # test has 4 docs and 5 shards makes sure we get one empty.
              number_of_shards: 5
            mappings:
              properties:
                date:
                  type: date
                  fields:
                    nanos:
                      type: date_nanos

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"date": "2016-01-01"}'
            - '{"index": {}}'
            - '{"date": "2016-01-02"}'
            - '{"index": {}}'
            - '{"date": "2016-02-01"}'
            - '{"index": {}}'
            - '{"date": "2016-03-01"}'

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date
                calendar_interval: month
  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2016-01-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 2 }
  - match: { aggregations.histo.buckets.1.key_as_string: "2016-02-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }
  - match: { aggregations.histo.buckets.2.key_as_string: "2016-03-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date.nanos
                calendar_interval: month
  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2016-01-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 2 }
  - match: { aggregations.histo.buckets.1.key_as_string: "2016-02-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }
  - match: { aggregations.histo.buckets.2.key_as_string: "2016-03-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

---
"date_histogram with offset":
  - skip:
      version: " - 7.1.99"
      reason:  calendar_interval introduced in 7.2.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              # There was a BWC issue that only showed up on empty shards. This
              # test has 4 docs and 5 shards makes sure we get one empty.
              number_of_shards: 5
            mappings:
              properties:
                date:
                  type : date

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"date": "2016-01-01"}'
            - '{"index": {}}'
            - '{"date": "2016-01-02"}'
            - '{"index": {}}'
            - '{"date": "2016-02-01"}'
            - '{"index": {}}'
            - '{"date": "2016-03-01"}'

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date
                calendar_interval: month
                offset: +1d

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2015-12-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }
  - match: { aggregations.histo.buckets.1.key_as_string: "2016-01-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.1.doc_count: 2 }
  - match: { aggregations.histo.buckets.2.key_as_string: "2016-02-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

---
"date_histogram on range":
  - skip:
      version: " - 7.1.99"
      reason:  calendar_interval introduced in 7.2.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              # There was a BWC issue that only showed up on empty shards. This
              # test has 4 docs and 5 shards makes sure we get one empty.
              number_of_shards: 5
            mappings:
              properties:
                range:
                  type : date_range

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"range": {"gte": "2016-01-01", "lt": "2016-01-02"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-01-02", "lt": "2016-01-03"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-02-01", "lt": "2016-02-02"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-03-01", "lt": "2016-03-02"}}'

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: range
                calendar_interval: month

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2016-01-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 2 }
  - match: { aggregations.histo.buckets.1.key_as_string: "2016-02-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.1.doc_count: 1 }
  - match: { aggregations.histo.buckets.2.key_as_string: "2016-03-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

---
"date_histogram on range with offset":
  - skip:
      version: " - 7.1.99"
      reason:  calendar_interval introduced in 7.2.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              # There was a BWC issue that only showed up on empty shards. This
              # test has 4 docs and 5 shards makes sure we get one empty.
              number_of_shards: 5
            mappings:
              properties:
                range:
                  type : date_range

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"range": {"gte": "2016-01-01", "lt": "2016-01-02"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-01-02", "lt": "2016-01-03"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-02-01", "lt": "2016-02-02"}}'
            - '{"index": {}}'
            - '{"range": {"gte": "2016-03-01", "lt": "2016-03-02"}}'

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: range
                calendar_interval: month
                offset: +1d

  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 3 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2015-12-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }
  - match: { aggregations.histo.buckets.1.key_as_string: "2016-01-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.1.doc_count: 2 }
  - match: { aggregations.histo.buckets.2.key_as_string: "2016-02-02T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }

---
"date_histogram with pre-epoch daylight savings time transition":
  - skip:
      version: " - 7.6.1"
      reason:  bug fixed in 7.6.1.

  - do:
      bulk:
        index: test_1
        refresh: true
        body:
            - '{"index": {}}'
            - '{"date": "2016-01-01"}'

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date
                fixed_interval: 1ms
                time_zone: America/Phoenix

  - match: { hits.total.value: 1 }
  - length: { aggregations.histo.buckets: 1 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2015-12-31T17:00:00.000-07:00" }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

  - do:
      search:
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date.nanos
                fixed_interval: 1ms
                time_zone: America/Phoenix

  - match: { hits.total.value: 1 }
  - length: { aggregations.histo.buckets: 1 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2015-12-31T17:00:00.000-07:00" }
  - match: { aggregations.histo.buckets.0.doc_count: 1 }

---
"histogram profiler":
  - skip:
      version: " - 7.8.99"
      reason:  debug info added in 7.9.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              number_of_shards: 1
            mappings:
              properties:
                n:
                  type: long

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"n": "1"}'
            - '{"index": {}}'
            - '{"n": "2"}'
            - '{"index": {}}'
            - '{"n": "10"}'
            - '{"index": {}}'
            - '{"n": "17"}'

  - do:
      search:
        index: test_2
        body:
          size: 0
          profile: true
          aggs:
            histo:
              histogram:
                field: n
                interval: 5
  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 4 }
  - match: { aggregations.histo.buckets.0.key: 0 }
  - match: { aggregations.histo.buckets.0.doc_count: 2 }
  - match: { aggregations.histo.buckets.1.key: 5 }
  - match: { aggregations.histo.buckets.1.doc_count: 0 }
  - match: { aggregations.histo.buckets.2.key: 10 }
  - match: { aggregations.histo.buckets.2.doc_count: 1 }
  - match: { aggregations.histo.buckets.3.key: 15 }
  - match: { aggregations.histo.buckets.3.doc_count: 1 }
  - match: { profile.shards.0.aggregations.0.type: NumericHistogramAggregator }
  - match: { profile.shards.0.aggregations.0.description: histo }
  - match: { profile.shards.0.aggregations.0.breakdown.collect_count: 4 }
  - match: { profile.shards.0.aggregations.0.debug.total_buckets: 3 }

---
"date_histogram profiler":
  - skip:
      version: " - 7.8.99"
      reason:  debug info added in 7.9.0

  - do:
      indices.create:
          index: test_2
          body:
            settings:
              number_of_shards: 1
            mappings:
              properties:
                date:
                  type: date

  - do:
      bulk:
        index: test_2
        refresh: true
        body:
            - '{"index": {}}'
            - '{"date": "2000-01-01"}' # This date is intenationally very far in the past so we end up not being able to use the date_histo -> range -> filters optimization
            - '{"index": {}}'
            - '{"date": "2000-01-02"}'
            - '{"index": {}}'
            - '{"date": "2016-02-01"}'
            - '{"index": {}}'
            - '{"date": "2016-03-01"}'

  - do:
      search:
        index: test_2
        body:
          size: 0
          profile: true
          aggs:
            histo:
              date_histogram:
                field: date
                calendar_interval: month
  - match: { hits.total.value: 4 }
  - length: { aggregations.histo.buckets: 195 }
  - match: { aggregations.histo.buckets.0.key_as_string: "2000-01-01T00:00:00.000Z" }
  - match: { aggregations.histo.buckets.0.doc_count: 2 }
  - match: { profile.shards.0.aggregations.0.type: DateHistogramAggregator }
  - match: { profile.shards.0.aggregations.0.description: histo }
  - match: { profile.shards.0.aggregations.0.breakdown.collect_count: 4 }
  - match: { profile.shards.0.aggregations.0.debug.total_buckets: 3 }

---
"date_histogram with extended_bounds and offset and unmapped":
  - skip:
      version: " - 7.10.99"
      reason:  fixed in 7.11

  - do:
      indices.create:
        index: test_nested
        body:
          mappings:
            properties:
              foo:
                type: nested

  - do:
      bulk:
        index: test_nested
        refresh: true
        body:
            - '{"index": {}}'
            - '{"foo": {"date": "2016-01-02"}}'
            - '{"index": {}}'
            - '{"foo": {"date": "2016-01-03"}}'

  - do:
      indices.create:
        index: test_unmapped

  - do:
      search:
        index: test_*
        body:
          size: 0
          aggs:
            foo:
              nested:
                path: foo
              aggs:
                histo:
                  date_histogram:
                    field: foo.date
                    calendar_interval: day
                    offset: 1h
                    extended_bounds:
                      min: "2016-01-01"
                      max: "2016-01-04"
  - match: { hits.total.value: 2 }
  - length: { aggregations.foo.histo.buckets: 4 }
  - match: { aggregations.foo.histo.buckets.0.key_as_string: "2016-01-01T01:00:00.000Z" }
  - match: { aggregations.foo.histo.buckets.0.doc_count: 1 }
  - match: { aggregations.foo.histo.buckets.1.key_as_string: "2016-01-02T01:00:00.000Z" }
  - match: { aggregations.foo.histo.buckets.1.doc_count: 1 }
  - match: { aggregations.foo.histo.buckets.2.key_as_string: "2016-01-03T01:00:00.000Z" }
  - match: { aggregations.foo.histo.buckets.2.doc_count: 0 }
  - match: { aggregations.foo.histo.buckets.3.key_as_string: "2016-01-04T01:00:00.000Z" }
  - match: { aggregations.foo.histo.buckets.3.doc_count: 0 }

---
"Tiny tiny tiny range":
  - skip:
      version: " - 7.12.99"
      reason:  fixed in 7.13.0

  - do:
      bulk:
        index: test_1
        refresh: true
        body:
            - '{"index": {}}'
            - '{"number": 1}'
            - '{"index": {}}'
            - '{"number": 2}'

  - do:
      catch: '/Trying to create too many buckets. Must be less than or equal to: \[65536\]/'
      search:
        index: test_1
        body:
          size: 0
          aggs:
            histo:
              histogram:
                field: number
                interval: 5e-10

---
"Tiny tiny tiny date_range":
  - skip:
      version: " - 7.13.99"
      reason:  fixed in 7.14.0

  - do:
      bulk:
        index: test_1
        refresh: true
        body:
            - '{"index": {}}'
            - '{"date": "2018-01-01T00:00:00Z"}'
            - '{"index": {}}'
            - '{"date": "2019-01-01T00:00:00Z"}'
            - '{"index": {}}'
            - '{"date": "2020-01-01T00:00:00Z"}'
            - '{"index": {}}'
            - '{"date": "2021-01-01T00:00:00Z"}'

  - do:
      catch: '/Trying to create too many buckets. Must be less than or equal to: \[65536\]/'
      search:
        index: test_1
        body:
          size: 0
          aggs:
            histo:
              date_histogram:
                field: date
                fixed_interval: 1s

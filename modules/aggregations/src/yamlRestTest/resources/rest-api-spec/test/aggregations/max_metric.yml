setup:
  - do:
      indices.create:
          index: test_1
          body:
            mappings:
              properties:
                int_field:
                   type : integer
                double_field:
                   type : double
                string_field:
                   type: keyword

  - do:
      indices.create:
        index: date_test_1
        body: {}

  - do:
      indices.create:
        index: date_test_2
        body:
          mappings:
            properties:
              date_field:
                type : date

  - do:
       bulk:
         refresh: true
         body:
           - index:
               _index: test_1
               _id:    "1"
           - int_field: 1
             double_field: 1.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "2"
           - int_field: 51
             double_field: 51.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "3"
           - int_field: 101
             double_field: 101.0
             string_field: foo
           - index:
               _index: test_1
               _id:    "4"
           - int_field: 151
             double_field: 151.0
             string_field: foo
           - index:
               _index: date_test_2
               _id: "5"
           - date_field: "2021-05-01T00:00:00.000Z"
---
"Basic test":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          aggs:
            the_int_max:
              max:
                field: int_field
            the_double_max:
              max:
                field: double_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_int_max.value: 151.0 }
  - match: { aggregations.the_double_max.value: 151.0 }

---
"Only aggs test":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          size: 0
          aggs:
            the_int_max:
              max:
                field: int_field
            the_double_max:
              max:
                field: double_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 0 }
  - match: { aggregations.the_int_max.value: 151.0 }
  - match: { aggregations.the_double_max.value: 151.0 }

---
"Filtered test":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          query:
            constant_score:
              filter:
                range:
                  int_field:
                    lte: 60
          aggs:
            the_int_max:
              max:
                field: int_field
            the_double_max:
              max:
                field: double_field

  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { aggregations.the_int_max.value: 51.0 }
  - match: { aggregations.the_double_max.value: 51.0 }


---
"Missing field with missing param":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          aggs:
            the_missing_max:
              max:
                field: foo
                missing: 1

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_missing_max.value: 1 }

---
"Missing field without missing param":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          aggs:
            the_missing_max:
              max:
                field: foo

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - is_false: aggregations.the_missing_max.value

---
"Metadata test":

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          aggs:
            the_int_max:
              meta:
                foo: bar
              max:
                field: int_field

  - match: { hits.total: 4 }
  - length: { hits.hits: 4 }
  - match: { aggregations.the_int_max.value: 151.0 }
  - match: { aggregations.the_int_max.meta.foo: "bar" }

---
"Aggregating wrong datatype test":

  - do:
      catch: bad_request
      search:
        rest_total_hits_as_int: true
        index: test_1
        body:
          aggs:
            the_string_avg:
              avg:
                field: string_field

---
"Merging results with unmapped fields":
  - skip:
      version: " - 8.4.99"
      reason: Fixed in 8.5.0

  - do:
     search:
       index: [date_test_1, date_test_2]
       body:
         aggs:
           date_field_max:
             max:
               field: date_field

  - match: { aggregations.date_field_max.value: 1619827200000 }
  - match: { aggregations.date_field_max.value_as_string: "2021-05-01T00:00:00.000Z" }

---
"Counter field":
  - skip:
      version: " - 8.6.99"
      reason: "counter field support added in 8.7"

  - do:
      indices.create:
        index: myindex
        body:
          mappings:
            properties:
              counter_field:
                type : long
                time_series_metric: counter

  - do:
      bulk:
        refresh: true
        body:
          - index:
              _index: myindex
              _id:    "1"
          - counter_field: 2
          - index:
              _index: myindex
              _id:    "2"
          - counter_field: 4
  - do:
      search:
        rest_total_hits_as_int: true
        index: myindex
        body:
          aggs:
            the_counter_max:
              max:
                field: counter_field

  - match: { hits.total: 2 }
  - length: { hits.hits: 2 }
  - match: { aggregations.the_counter_max.value: 4 }

---
"Partially unmapped":

  - do:
      search:
        index: test_1,date_test_2
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_max:
              max:
                field: int_field

  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { aggregations.the_int_max.value: 151.0 }

---
"Partially unmapped with missing":

  - do:
      search:
        index: test_1,date_test_2
        rest_total_hits_as_int: true
        body:
          aggs:
            the_int_max:
              max:
                field: int_field
                missing: 100000

  - match: { hits.total: 5 }
  - length: { hits.hits: 5 }
  - match: { aggregations.the_int_max.value: 100000 }

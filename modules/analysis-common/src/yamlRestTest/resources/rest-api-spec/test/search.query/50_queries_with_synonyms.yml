---
"Test common terms query with stacked tokens":
  - skip:
      features: "warnings"

  - do:
      indices.create:
          index: test
          body:
            settings:
              analysis:
                filter:
                  syns:
                    type: synonym
                    synonyms: [ "quick,fast" ]
                analyzer:
                  syns:
                    tokenizer: standard
                    filter: [ "syns" ]
            mappings:
              properties:
                field1:
                  type: text
                  analyzer: syns
                field2:
                  type: text
                  analyzer: syns

  - do:
      index:
          index: test
          id: "3"
          body:
            field1: quick lazy huge brown pidgin
            field2: the quick lazy huge brown fox jumps over the tree

  - do:
      index:
          index: test
          id: "1"
          body:
            field1: the quick brown fox

  - do:
      index:
          index: test
          id: "2"
          body:
            field1: the quick lazy huge brown fox jumps over the tree
          refresh: true

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast brown
                cutoff_frequency: 3
                low_freq_operator: or
  - match: { hits.total: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }
  - match: { hits.hits.2._id: "3" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast brown
                cutoff_frequency: 3
                low_freq_operator: and
  - match: { hits.total: 2 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast brown
                cutoff_frequency: 3
  - match: { hits.total: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }
  - match: { hits.hits.2._id: "3" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast huge fox
                minimum_should_match:
                  low_freq: 3
  - match: { hits.total: 1 }
  - match: { hits.hits.0._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast lazy fox brown
                cutoff_frequency: 1
                minimum_should_match:
                  high_freq: 5
  - match: { hits.total: 2 }
  - match: { hits.hits.0._id: "2" }
  - match: { hits.hits.1._id: "1" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast lazy fox brown
                cutoff_frequency: 1
                minimum_should_match:
                  high_freq: 6
  - match: { hits.total: 1 }
  - match: { hits.hits.0._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the fast lazy fox brown
                cutoff_frequency: 1
  - match: { hits.total: 1 }
  - match: { hits.hits.0._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [common] used, replaced by [[match] query which can efficiently skip blocks of documents if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            common:
              field1:
                query: the quick brown
                cutoff_frequency: 3
  - match: { hits.total: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }
  - match: { hits.hits.2._id: "3" }

  - do:
      warnings:
        - 'Deprecated field [cutoff_frequency] used, replaced by [you can omit this option, the [match] query can skip block of documents efficiently if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              field1:
                query: the fast brown
                cutoff_frequency: 3
                operator: and
  - match: { hits.total: 2 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [cutoff_frequency] used, replaced by [you can omit this option, the [match] query can skip block of documents efficiently if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              field1:
                query: the fast brown
                cutoff_frequency: 3
                operator: or
  - match: { hits.total: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }
  - match: { hits.hits.2._id: "3" }

  - do:
      warnings:
        - 'Deprecated field [cutoff_frequency] used, replaced by [you can omit this option, the [match] query can skip block of documents efficiently if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              field1:
                query: the fast brown
                cutoff_frequency: 3
                minimum_should_match: 3
  - match: { hits.total: 2 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "2" }

  - do:
      warnings:
        - 'Deprecated field [cutoff_frequency] used, replaced by [you can omit this option, the [multi_match] query can skip block of documents efficiently if the total number of hits is not tracked]'
      search:
        rest_total_hits_as_int: true
        body:
          query:
            multi_match:
              query: the fast brown
              fields: [ "field1", "field2" ]
              cutoff_frequency: 3
              operator: and
  - match: { hits.total: 3 }
  - match: { hits.hits.0._id: "3" }
  - match: { hits.hits.1._id: "1" }
  - match: { hits.hits.2._id: "2" }

---
"Test match query with synonyms - see #3881 for extensive description of the issue":
  - do:
      indices.create:
          index: test
          body:
            settings:
              analysis:
                filter:
                  synonym:
                    type: synonym
                    synonyms: [ "quick,fast" ]
                analyzer:
                  index:
                    type: custom
                    tokenizer: standard
                    filter: lowercase
                  search:
                    rest_total_hits_as_int: true
                    type: custom
                    tokenizer: standard
                    filter: [ lowercase, synonym ]
            mappings:
              properties:
                text:
                  type: text
                  analyzer: index
                  search_analyzer: search

  - do:
      index:
          index: test
          id: "1"
          body:
            text: quick brown fox
          refresh: true

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              text:
                query: quick
                operator: and
  - match: { hits.total: 1 }

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              text:
                query: quick brown
                operator: and
  - match: { hits.total: 1 }

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              text:
                query: fast
                operator: and
  - match: { hits.total: 1 }

  - do:
      index:
          index: test
          id: "2"
          body:
            text: fast brown fox
          refresh: true

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              text:
                query: quick
                operator: and
  - match: { hits.total: 2 }

  - do:
      search:
        rest_total_hits_as_int: true
        body:
          query:
            match:
              text:
                query: quick brown
                operator: and
  - match: { hits.total: 2 }

---
setup:
  - do:
      ingest.put_pipeline:
        id: "ecs_namespace_pipeline"
        body:
          processors:
            - ecs_namespace: {}

---
teardown:
  - do:
      ingest.delete_pipeline:
        id: "ecs_namespace_pipeline"
        ignore: 404

---
"Test attributes namespacing":
  - do:
      index:
        index: ecs_namespacing_test
        id: "nested_and_flat_attributes"
        pipeline: "ecs_namespace_pipeline"
        body: {
          "agent.name": "agentNameValue",
          "agent": {
            "type": "agentTypeValue",
            "deep": {
              "nested": "nestedValue",
              "scalar-array": [
                "arrayValue1",
                "arrayValue2"
              ],
              "object-array": [
                {
                  "key1": "value1"
                },
                {
                  "key2": "value2"
                }
              ]
            },
            "scalar-array": [
              "arrayValue1",
              "arrayValue2"
            ]
          },
          "cloud.provider": "cloudProviderValue",
          "cloud": {
            "type": "cloudTypeValue"
          },
          "host.name": "hostNameValue",
          "host": {
            "type": "hostTypeValue"
          },
          "service.name": "serviceNameValue",
          "service": {
            "type": "serviceTypeValue",
            "deep": {
              "nested": "nestedValue",
              "scalar-array": [
                "arrayValue1",
                "arrayValue2"
              ],
              "object-array": [
                {
                  "key1": "value1"
                },
                {
                  "key2": "value2"
                }
              ]
            },
          }
        }

  - do:
      get:
        index: ecs_namespacing_test
        id: "nested_and_flat_attributes"
  - match: { _source.resource.attributes.agent\.name: "agentNameValue" }
  - match: { _source.resource.attributes.agent\.type: "agentTypeValue" }
  - match: { _source.resource.attributes.agent\.deep\.nested: "nestedValue" }
  - match: { _source.resource.attributes.agent\.deep\.scalar-array.0: "arrayValue1" }
  - match: { _source.resource.attributes.agent\.deep\.scalar-array.1: "arrayValue2" }
  - match: { _source.resource.attributes.agent\.deep\.object-array.0.key1: "value1" }
  - match: { _source.resource.attributes.agent\.deep\.object-array.1.key2: "value2" }
  - match: { _source.resource.attributes.cloud\.provider: "cloudProviderValue" }
  - match: { _source.resource.attributes.cloud\.type: "cloudTypeValue" }
  - match: { _source.resource.attributes.host\.name: "hostNameValue" }
  - match: { _source.resource.attributes.host\.type: "hostTypeValue" }
  - match: { _source.attributes.service\.name: "serviceNameValue" }
  - match: { _source.attributes.service\.type: "serviceTypeValue" }
  - match: { _source.attributes.service\.deep\.nested: "nestedValue" }
  - match: { _source.attributes.service\.deep\.scalar-array.0: "arrayValue1" }
  - match: { _source.attributes.service\.deep\.scalar-array.1: "arrayValue2" }
  - match: { _source.attributes.service\.deep\.object-array.0.key1: "value1" }
  - match: { _source.attributes.service\.deep\.object-array.1.key2: "value2" }
  - match: { _source.agent.name: null }
  - match: { _source.agent: null }
  - match: { _source.cloud.provider: null }
  - match: { _source.cloud: null }
  - match: { _source.host.name: null }
  - match: { _source.host: null }
  - match: { _source.service.name: null }
  - match: { _source.service: null }

---
"Test rename special keys":
  - do:
      index:
        index: ecs_namespacing_test
        id: "rename_special_keys"
        pipeline: "ecs_namespace_pipeline"
        body: {
          "span": {
            "id": "nestedSpanIdValue"
          },
          "span.id": "topLevelSpanIdValue",
          "log.level": "topLevelLogLevelValue",
          "trace": {
            "id": "traceIdValue"
          },
          "trace.id": "topLevelTraceIdValue",
          "message": "this is a message"
        }

  - do:
      get:
        index: ecs_namespacing_test
        id: "rename_special_keys"
  - match: { _source.span_id: "nestedSpanIdValue" }
  - match: { _source.severity_text: "topLevelLogLevelValue" }
  - match: { _source.trace_id: "traceIdValue" }
  - match: { _source.body.text: "this is a message" }
  - match: { _source.span: null }
  - match: { _source.span\.id: null }
  - match: { _source.log\.level: null }
  - match: { _source.trace: null }
  - match: { _source.trace\.id: null }
  - match: { _source.message: null }

---
"Test valid OTel document":
  - do:
      index:
        index: ecs_namespacing_test
        id: "valid_otel_document"
        pipeline: "ecs_namespace_pipeline"
        body: {
          "resource": {
            "attributes": {
              "foo": "bar"
            }
          },
          "scope": {
            "foo": "bar"
          },
          "attributes": {
            "foo": "bar"
          },
          "body": {
            "text": "a string",
            "structured": {}
          },
          "span_id": "spanIdValue",
          "trace_id": "traceIdValue",
          "severity_text": "severityTextValue",
          "foo": "bar"
        }

  - do:
      get:
        index: ecs_namespacing_test
        id: "valid_otel_document"
  - match: { _source.resource.attributes.foo: "bar" }
  - match: { _source.scope.foo: "bar" }
  - match: { _source.attributes.foo: "bar" }
  - match: { _source.body.text: "a string" }
  - match: { _source.body.structured: {} }
  - match: { _source.span_id: "spanIdValue" }
  - match: { _source.trace_id: "traceIdValue" }
  - match: { _source.severity_text: "severityTextValue" }
  - match: { _source.foo: "bar" }

---
"Test invalid body field":
  - do:
      index:
        index: ecs_namespacing_test
        id: "invalid_body_field"
        pipeline: "ecs_namespace_pipeline"
        body: {
          "resource": {},
          "scope": {
            "foo": "bar"
          },
          "body": {
            "text": 123,
            "structured": {
              "foo": "bar"
            }
          },
          "span_id": "spanIdValue",
          "trace_id": "traceIdValue",
          "severity_text": "severityTextValue",
          "foo": "bar"
        }

  - do:
      get:
        index: ecs_namespacing_test
        id: "invalid_body_field"
  - match: { _source.attributes.body\.text: 123 }
  - match: { _source.attributes.body\.structured\.foo: "bar" }
  - match: { _source.attributes.scope\.foo: "bar" }
  - match: { _source.attributes.span_id: "spanIdValue" }
  - match: { _source.attributes.trace_id: "traceIdValue" }
  - match: { _source.attributes.severity_text: "severityTextValue" }
  - match: { _source.attributes.foo: "bar" }
  - match: { _source.body: null }
  - match: { _source.scope: null }

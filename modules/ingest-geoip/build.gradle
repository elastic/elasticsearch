/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0 and the Server Side Public License, v 1; you may not use this file except
 * in compliance with, at your election, the Elastic License 2.0 or the Server
 * Side Public License, v 1.
 */

import org.elasticsearch.gradle.OS

apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.yaml-rest-compat-test'
apply plugin: 'elasticsearch.internal-cluster-test'

esplugin {
  description 'Ingest processor that uses lookup geo data based on IP addresses using the MaxMind geo database'
  classname 'org.elasticsearch.ingest.geoip.IngestGeoIpPlugin'

  bundleSpec.from("${project.buildDir}/ingest-geoip") {
    into '/'
  }
}

tasks.named('internalClusterTestTestingConventions').configure {
  baseClass 'org.elasticsearch.ingest.geoip.AbstractGeoIpIT'
  baseClass 'org.elasticsearch.test.ESTestCase'
}

dependencies {
  implementation('com.maxmind.geoip2:geoip2:4.2.0')
  // geoip2 dependencies:
  runtimeOnly("com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}")
  runtimeOnly("com.fasterxml.jackson.core:jackson-databind:${versions.jackson}")
  runtimeOnly("com.fasterxml.jackson.core:jackson-core:${versions.jackson}")
  implementation('com.maxmind.db:maxmind-db:3.1.0')

  testImplementation 'org.elasticsearch:geolite2-databases:20191119'
  internalClusterTestImplementation project(':modules:reindex')
  internalClusterTestImplementation project(':test:fixtures:geoip-fixture')
  yamlRestTestImplementation project(':test:fixtures:geoip-fixture')

  clusterModules project(':modules:reindex')
}

restResources {
  restApi {
    include '_common', 'indices', 'index', 'cluster', 'nodes', 'get', 'ingest'
  }
}

tasks.withType(JavaCompile).configureEach {
  options.compilerArgs << '-Xlint:-classfile'
}

if (OS.current() == OS.WINDOWS) {
  tasks.named("test").configure {
    // Windows cannot cleanup database files properly unless it loads everything on heap.
    // See https://github.com/maxmind/MaxMind-DB-Reader-java#file-lock-on-windows for more information
    systemProperty 'es.geoip.load_db_on_heap', 'true'
  }
}

tasks.named("internalClusterTest") {
  onlyIf("OS != windows") { OS.current() != OS.WINDOWS }
}

tasks.named("forbiddenPatterns").configure {
  exclude '**/*.mmdb'
}

tasks.named("dependencyLicenses").configure {
  mapping from: /geoip.*/, to: 'maxmind-geolite2-eula'
  mapping from: /maxmind-db.*/, to: 'maxmind-db-reader'
  mapping from: /jackson.*/, to: 'jackson'
  ignoreFile 'elastic-geoip-database-service-agreement-LICENSE.txt'
}

tasks.named("yamlRestTestV7CompatTransform").configure { task ->
  task.skipTestsByFilePattern("**/ingest_geoip/20_geoip_processor.yml", "from 8.0 yaml rest tests use geoip test fixture and default geoip are no longer packaged. In 7.x yaml tests used default databases which makes tests results very different, so skipping these tests")
  // task.skipTest("lang_mustache/50_multi_search_template/Multi-search template with errors", "xxx")
}

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

apply plugin: 'elasticsearch.internal-java-rest-test'
apply plugin: 'elasticsearch.internal-yaml-rest-test'

dependencies {
  javaRestTestImplementation project(':modules:ingest-geoip')
  javaRestTestImplementation project(':test:external-modules:test-multi-project')
  javaRestTestImplementation project(':test:fixtures:geoip-fixture')

  yamlRestTestImplementation(testArtifact(project(":modules:ingest-geoip"), "yamlRestTest"))  // includes yaml test code from ingest-geoip
  yamlRestTestImplementation project(':modules:ingest-geoip')
  yamlRestTestImplementation project(':test:external-modules:test-multi-project')
  yamlRestTestImplementation project(':test:fixtures:geoip-fixture')
  yamlRestTestImplementation project(':x-pack:qa:multi-project:yaml-test-framework')

  clusterModules project(':modules:ingest-geoip')
  clusterModules project(':modules:reindex')  // needed for database cleanup
  clusterModules project(':test:external-modules:test-multi-project')

  // includes yaml rest test artifacts from ingest-geoip module
  restTestConfig project(path: ':modules:ingest-geoip', configuration: "restTests")
}

tasks.withType(Test).configureEach {
  it.systemProperty "tests.multi_project.enabled", true
}

// Exclude multi-project tests from release build
tasks.named { it == "javaRestTest" || it == "yamlRestTest" }.configureEach {
  it.onlyIf("snapshot build") { buildParams.snapshotBuild }
}

restResources {
  restTests {
    // includes yaml rest test from ingest_geoip folder
    includeCore 'ingest_geoip'
  }
}

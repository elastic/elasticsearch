---
setup:
  - do:
      ingest.put_pipeline:
        id: "normalize_json_message"
        body:
          processors:
            - normalize_for_stream: {}

---
teardown:
  - do:
      ingest.delete_pipeline:
        id: "normalize_json_message"
        ignore: 404

---
"Test ECS JSON message normalization":
  - do:
      index:
        index: normalize_json_message_test
        id: "ECS-JSON-message"
        pipeline: "normalize_json_message"
        body:
          "@timestamp": "2023-10-01T12:00:00Z"
          agent:
            name: "agentNameValue"
            type: "agentTypeValue"
          message: |
            {
              "@timestamp": "2023-10-02T12:00:00Z",
              "log.level": "overriddenCloudRegion",
              "span": {
                "id": "spanIdValue"
              },
              "trace.id": "traceIdValue",
              "message": "This is the actual log message",
              "cloud": {
                "region": "overriddenCloudRegion"
              },
              "process": {
                "args": ["arg1", "arg2"]
              },
              "tags": ["tag1", "tag2"]
            }

  - do:
      get:
        index: normalize_json_message_test
        id: "ECS-JSON-message"
  - match: { _source.@timestamp: "2023-10-02T12:00:00Z" }
  - match: { _source.resource.attributes.agent\.name: "agentNameValue" }
  - match: { _source.resource.attributes.agent\.type: "agentTypeValue" }
  - match: { _source.resource.attributes.cloud\.region: "agentTypeValue" }
  - match: { _source.resource.attributes.process\.args.0: "arg1" }
  - match: { _source.resource.attributes.process\.args.1: "arg2" }
  - match: { _source.body.text: "This is the actual log message" }
  - match: { _source.attributes.tags.0: "tag1" }
  - match: { _source.attributes.tags.1: "tag2" }

---
"Test non-ECS JSON message normalization":
  - do:
      index:
        index: normalize_json_message_test
        id: "non-ECS-JSON-message"
        pipeline: "normalize_json_message"
        body:
          "@timestamp": "2023-10-01T12:00:00Z"
          agent:
            name: "agentNameValue"
            type: "agentTypeValue"
          message: |
            {
              "message": "This is the actual log message",
              "nested": {
                "child": "nestedValue",
                "next-level": {
                  "grandchild": "deepValue"
                },
                "array": ["value1", "value2"]
              },
              "cloud.region": "cloudRegionValue"
            }

  - do:
      get:
        index: normalize_json_message_test
        id: "non-ECS-JSON-message"
  - match: { _source.@timestamp: "2023-10-01T12:00:00Z" }
  - match: { _source.resource.attributes.agent\.name: "agentNameValue" }
  - match: { _source.resource.attributes.agent\.type: "agentTypeValue" }
  - match: { _source.resource.body.structured.message: "This is the actual log message" }
  - match: { _source.resource.body.structured.nested.child: "nestedValue" }
  - match: { _source.resource.body.structured.nested.next-level.grandchild: "deepValue" }
  - match: { _source.resource.body.structured.nested.array.0: "value1" }
  - match: { _source.resource.body.structured.nested.array.1: "value2" }
  - match: { _source.resource.body.structured.cloud\.region: "cloudRegionValue" }

setup:
  - requires:
      capabilities:
        - method: POST
          path: /_search
          capabilities: [ rank_vectors_script_access ]
      test_runner_features: capabilities
      reason: "Support for rank vector field script access capability required"
  - skip:
      features: headers

  - do:
      indices.create:
        index: test-index
        body:
          settings:
            number_of_shards: 1
          mappings:
            properties:
              vector:
                 type: rank_vectors
                 dims: 5
              byte_vector:
                 type: rank_vectors
                 dims: 5
                 element_type: byte
              bit_vector:
                type: rank_vectors
                dims: 40
                element_type: bit
  - do:
      index:
        index: test-index
        id: "1"
        body:
          vector: [[230.0, 300.33, -34.8988, 15.555, -200.0],  [-0.5, 100.0, -13, 14.8, -156.0]]
          byte_vector: [[8, 5, -15, 1, -7], [-1, 115, -3, 4, -128]]
          bit_vector: [[8, 5, -15, 1, -7], [-1, 115, -3, 4, -128]]

  - do:
      index:
        index: test-index
        id: "3"
        body:
          vector: [[0.5, 111.3, -13.0, 14.8, -156.0]]
          byte_vector: [[2, 18, -5, 0, -124]]
          bit_vector: [[2, 18, -5, 0, -124]]

  - do:
      indices.refresh: {}
---
"Test vector magnitude equality":
  - skip:
      features: close_to

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['vector'].magnitudes[0]"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "1"}
  - close_to: {hits.hits.0._score: {value: 429.6021, error: 0.01}}

  - match: {hits.hits.1._id: "3"}
  - close_to: {hits.hits.1._score: {value: 192.6447, error: 0.01}}

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['byte_vector'].magnitudes[0]"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "3"}
  - close_to: {hits.hits.0._score: {value: 125.41531, error: 0.01}}

  - match: {hits.hits.1._id: "1"}
  - close_to: {hits.hits.1._score: {value: 19.07878, error: 0.01}}

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['bit_vector'].magnitudes[0]"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "1"}
  - close_to: {hits.hits.0._score: {value: 3.872983, error: 0.01}}

  - match: {hits.hits.1._id: "3"}
  - close_to: {hits.hits.1._score: {value: 3.464101, error: 0.01}}
---
"Test vector value scoring":
  - skip:
      features: close_to

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['vector'].vectorValues.next()[0];"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "1"}
  - close_to: {hits.hits.0._score: {value: 230, error: 0.01}}

  - match: {hits.hits.1._id: "3"}
  - close_to: {hits.hits.1._score: {value: 0.5, error: 0.01}}

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['byte_vector'].vectorValues.next()[0];"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "1"}
  - close_to: {hits.hits.0._score: {value: 8, error: 0.01}}

  - match: {hits.hits.1._id: "3"}
  - close_to: {hits.hits.1._score: {value: 2, error: 0.01}}

  - do:
      headers:
        Content-Type: application/json
      search:
        rest_total_hits_as_int: true
        body:
          query:
            script_score:
              query: {match_all: {} }
              script:
                source: "doc['bit_vector'].vectorValues.next()[0];"

  - match: {hits.total: 2}

  - match: {hits.hits.0._id: "1"}
  - close_to: {hits.hits.0._score: {value: 8, error: 0.01}}

  - match: {hits.hits.1._id: "3"}
  - close_to: {hits.hits.1._score: {value: 2, error: 0.01}}

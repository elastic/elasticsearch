---
setup:
  - do:
      indices.create:
        index: locations
        body:
          settings:
            number_of_shards: 1
            number_of_replicas: 0
          mappings:
            dynamic: false
            properties:
              timestamp:
                type: date

  - do:
      bulk:
        index: locations
        refresh: true
        body: |
          {"index":{}}
          {"timestamp": "1998-04-30T14:30:17-05:00", "location" : {"lat": 13.5, "lon" : 34.89}}
          {"index":{}}
          {"timestamp": "1998-04-30T14:30:20-05:00"}
          {"index":{}}
          {"timestamp": "1998-04-30T14:30:27-05:00", "location" : [{"lat": 13.0, "lon" : 34.0}, {"lat": 14.0, "lon" : 35.0}]}
          {"index":{}}
          {"timestamp": "1998-04-30T14:30:53-05:00", "location" : "-7.9, 120.78"}
          {"index":{}}
          {"timestamp": "1998-04-30T14:30:55-05:00", "location" : ["-8, 120", "-7, 121.0"]}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:12-05:00", "location" : [-173.45, 45.78]}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:18-05:00", "location" : [[-174.45, 46.78], [0.0, 1.0]]}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:19-05:00", "location" : "POINT(45.6 32.45)"}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:20-05:00", "location" : ["POINT(46.5 33.45)", "POINT(45.4 32.75)"]}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:22-05:00", "location" : {"lat": -63.24, "lon" : 31.0}}
          {"index":{}}
          {"timestamp": "1998-04-30T14:31:27-05:00", "location" : {"lat": 0.0, "lon" : 0.0}}

---
"fetch fields from source":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          sort: timestamp
          fields: [location]
  - match: {hits.total.value: 11}
  - match: {hits.hits.0.fields.location: [{type: Point, coordinates: [34.89, 13.5]}] }

---
"exists query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            exists:
              field: location
  - match: {hits.total.value: 10}

---
"geo bounding box query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_bounding_box:
              location:
                top_left:
                  lat: 10
                  lon: -10
                bottom_right:
                  lat: -10
                  lon: 10
  - match: {hits.total.value: 2}

---
"geo shape intersects query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_shape:
              location:
                shape:
                  type: "envelope"
                  coordinates: [ [ -10, 10 ], [ 10, -10 ] ]
  - match: {hits.total.value: 2}

---
"geo shape within query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_shape:
              location:
                shape:
                  type: "envelope"
                  coordinates: [ [ -10, 10 ], [ 10, -10 ] ]
                relation: within
  - match: {hits.total.value: 1}

---
"geo shape disjoint query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_shape:
              location:
                shape:
                  type: "envelope"
                  coordinates: [ [ -10, 10 ], [ 10, -10 ] ]
                relation: disjoint
  - match: {hits.total.value: 8}

---
"geo shape contains query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_shape:
              location:
                shape:
                  type: "envelope"
                  coordinates: [ [ -10, 10 ], [ 10, -10 ] ]
                relation: contains
  - match: {hits.total.value: 0}

---
"geo distance query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            geo_distance:
              distance: "2000km"
              location:
                lat: 0
                lon: 0
  - match: {hits.total.value: 2}

---
"bounds agg":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          aggs:
            bounds:
              geo_bounds:
                field: "location"
                wrap_longitude: false
  - match: {hits.total.value: 11}
  - match: {aggregations.bounds.bounds.top_left.lat: 46.77999998442829 }
  - match: {aggregations.bounds.bounds.top_left.lon: -174.45000001229346 }
  - match: {aggregations.bounds.bounds.bottom_right.lat: -63.240000014193356 }
  - match: {aggregations.bounds.bounds.bottom_right.lon: 120.99999999627471 }

---
"geo_distance sort":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          sort:
            _geo_distance:
              location:
                lat: 0.0
                lon: 0.0
  - match: {hits.total.value: 11}
  - match: {hits.hits.0._source.location.lat: 0.0 }
  - match: {hits.hits.0._source.location.lon: 0.0 }
  - match: {hits.hits.1._source.location.0.0: -174.45 }
  - match: {hits.hits.1._source.location.0.1: 46.78 }
  - match: {hits.hits.1._source.location.1.0: 0.0 }
  - match: {hits.hits.1._source.location.1.1: 1.0 }
  - match: {hits.hits.2._source.location.0.lat: 13.0 }
  - match: {hits.hits.2._source.location.0.lon: 34.0 }
  - match: {hits.hits.2._source.location.1.lat: 14.0 }
  - match: {hits.hits.2._source.location.1.lon: 35.0 }
  - match: {hits.hits.3._source.location.lat: 13.5 }
  - match: {hits.hits.3._source.location.lon: 34.89 }
  - match: {hits.hits.4._source.location.0: "POINT(46.5 33.45)" }
  - match: {hits.hits.4._source.location.1: "POINT(45.4 32.75)" }

---
"distance_feature query":
  - do:
      search:
        index: locations
        body:
          runtime_mappings:
            location:
              type: geo_point
          query:
            bool:
              should:
                distance_feature:
                  field: "location"
                  pivot: "1000km"
                  origin: [0.0, 0.0]
  - match: {hits.total.value: 10}
  - match: {hits.hits.0._source.location.lat: 0.0 }
  - match: {hits.hits.0._source.location.lon: 0.0 }
  - match: {hits.hits.1._source.location.0.0: -174.45 }
  - match: {hits.hits.1._source.location.0.1: 46.78 }
  - match: {hits.hits.1._source.location.1.0: 0.0 }
  - match: {hits.hits.1._source.location.1.1: 1.0 }
  - match: {hits.hits.2._source.location.0.lat: 13.0 }
  - match: {hits.hits.2._source.location.0.lon: 34.0 }
  - match: {hits.hits.2._source.location.1.lat: 14.0 }
  - match: {hits.hits.2._source.location.1.lon: 35.0 }
  - match: {hits.hits.3._source.location.lat: 13.5 }
  - match: {hits.hits.3._source.location.lon: 34.89 }
  - match: {hits.hits.4._source.location.0: "POINT(46.5 33.45)" }
  - match: {hits.hits.4._source.location.1: "POINT(45.4 32.75)" }


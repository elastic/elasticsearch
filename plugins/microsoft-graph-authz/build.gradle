/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

plugins {
  id "elasticsearch.internal-java-rest-test"
}

esplugin {
  name = "microsoft-graph-authz"
  description = "Microsoft Graph Delegated Authorization Realm Plugin"
  classname = "org.elasticsearch.xpack.security.authz.microsoft.MicrosoftGraphAuthzPlugin"
  extendedPlugins = ["x-pack-security"]
}

def patched = Attribute.of('patched', Boolean)

configurations {
  compileClasspath {
    attributes {
      attribute(patched, true)
    }
  }
  runtimeClasspath {
    attributes {
      attribute(patched, true)
    }
  }
  testCompileClasspath {
    attributes {
      attribute(patched, true)
    }
  }
  testRuntimeClasspath {
    attributes {
      attribute(patched, true)
    }
  }
}

dependencies {
  compileOnly project(":x-pack:plugin:core")

  implementation "com.microsoft.graph:microsoft-graph:6.36.0"
  implementation "com.microsoft.graph:microsoft-graph-core:3.6.1"
  implementation project(path: "kiota-merged", configuration: 'shadow')
  implementation "com.azure:azure-identity:1.15.4"
  implementation "com.azure:azure-core:1.55.3"
  implementation "com.azure:azure-json:1.5.0"
  implementation "com.azure:azure-xml:1.2.0"
  implementation "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
  implementation "com.fasterxml.jackson.core:jackson-databind:${versions.jackson}"
  implementation "com.fasterxml.jackson.core:jackson-annotations:${versions.jackson}"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${versions.jackson}"
  implementation "org.reactivestreams:reactive-streams:1.0.4"
  implementation "io.projectreactor:reactor-core:3.7.5"
  compileOnly "org.slf4j:slf4j-api:${versions.slf4j}"
  runtimeOnly "com.microsoft.azure:msal4j:1.19.1"
  runtimeOnly "com.microsoft.azure:msal4j-persistence-extension:1.3.0"
  runtimeOnly "net.java.dev.jna:jna:${versions.jna}"
  runtimeOnly "net.java.dev.jna:jna-platform:${versions.jna}"
  runtimeOnly "io.opentelemetry:opentelemetry-api:1.50.0"
  runtimeOnly "io.opentelemetry:opentelemetry-context:1.50.0"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:1.6.20"
  implementation "com.squareup.okhttp3:okhttp:4.11.0"
  runtimeOnly "com.squareup.okio:okio:3.2.0"
  runtimeOnly "com.squareup.okio:okio-jvm:3.2.0"
  runtimeOnly "io.github.std-uritemplate:std-uritemplate:2.0.0"
  runtimeOnly "com.azure:azure-core-http-okhttp:1.12.10"
  implementation "com.google.code.gson:gson:2.10"

  testRuntimeOnly "net.minidev:json-smart:2.5.2"
  testRuntimeOnly "com.nimbusds:oauth2-oidc-sdk:11.22.2"

  attributesSchema {
    attribute(patched)
  }
  artifactTypes.getByName("jar") {
    attributes.attribute(patched, false)
  }
  registerTransform(org.elasticsearch.gradle.internal.dependencies.patches.azurecore.AzureCoreClassPatcher) {
    from.attribute(patched, false)
    to.attribute(patched, true)
  }
}

tasks.named("javadoc").configure { enabled = false }

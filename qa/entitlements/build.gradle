/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

apply plugin: 'elasticsearch.base-internal-es-plugin'
apply plugin: 'elasticsearch.internal-java-rest-test'
// Necessary to use tests in Serverless
apply plugin: 'elasticsearch.internal-test-artifact'

esplugin {
  name 'entitlement-qa'
  description 'A test module that triggers entitlement checks'
  classname 'org.elasticsearch.test.entitlements.EntitlementsCheckPlugin'
}

//configurations {
//  agentJar {
//    canBeConsumed = false
//  }
//}

dependencies {
  clusterPlugins project(':qa:entitlements')
  //agentJar(project(path: ":distribution:tools:entitlement-agent", configuration: 'entitlementAgentJar'))
//  runtimeOnly(project(":libs:entitlement"))
//  runtimeOnly(project(":libs:entitlement:agent"))
//  runtimeOnly(project(":libs:entitlement:bridge"))
}

tasks.register('copyAgent', Copy) {
  into "build/agent/libs"
  from configurations.named("runtimeClasspath")
}

tasks.named('build') {
  dependsOn(copyAgent)
}

tasks.named('javaRestTest') {
  usesDefaultDistribution()
  systemProperty "tests.security.manager", "false"
}

tasks.named("javadoc").configure {
  // There seems to be some problem generating javadoc on a QA project that has a module definition
  enabled = false
}


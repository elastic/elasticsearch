---
"Get simple field caps from remote cluster":
  - do:
        indices.create:
          index: field_caps_index_2
          body:
              mappings:
                properties:
                  text:
                    type:     text
                  keyword:
                    type:     keyword
                  number:
                    type:     double
                  geo:
                    type:     geo_point
                  object:
                    type: object
                    properties:
                      nested1 :
                        type : text
                        index: true
                      nested2:
                        type: float
                        doc_values: true

  - do:
      field_caps:
        index: 'field_caps_index_2,my_remote_cluster:field_*'
        fields: [text, keyword, number, geo]

  - match: {fields.text.text.searchable:                true}
  - match: {fields.text.text.aggregatable:              false}
  - is_false: fields.text.text.indices
  - is_false: fields.text.text.non_searchable_indices
  - is_false: fields.text.text.non_aggregatable_indices
  - match: {fields.keyword.keyword.searchable:          true}
  - match: {fields.keyword.keyword.aggregatable:        true}
  - is_false: fields.text.keyword.indices
  - is_false: fields.text.keyword.non_searchable_indices
  - is_false: fields.text.keyword.non_aggregatable_indices
  - match: {fields.number.double.searchable:            true}
  - match: {fields.number.double.aggregatable:          true}
  - match: {fields.number.double.indices:               ["field_caps_index_2", "my_remote_cluster:field_caps_index_1"]}
  - is_false: fields.number.double.non_searchable_indices
  - is_false: fields.number.double.non_aggregatable_indices
  - match: {fields.number.long.searchable:              true}
  - match: {fields.number.long.aggregatable:            true}
  - match: {fields.number.long.indices:                 ["my_remote_cluster:field_caps_index_3"]}
  - is_false: fields.number.long.non_searchable_indices
  - is_false: fields.number.long.non_aggregatable_indices
  - match: {fields.geo.geo_point.searchable:            true}
  - match: {fields.geo.geo_point.aggregatable:          true}
  - match: {fields.geo.geo_point.indices:               ["field_caps_index_2", "my_remote_cluster:field_caps_index_1"]}
  - is_false: fields.geo.geo_point.non_searchable_indices
  - is_false: fields.geo.geo_point.non_aggregatable_indices
  - match: {fields.geo.keyword.searchable:              true}
  - match: {fields.geo.keyword.aggregatable:            true}
  - match: {fields.geo.keyword.indices:                 ["my_remote_cluster:field_caps_index_3"]}
  - is_false: fields.geo.keyword.non_searchable_indices
  - is_false: fields.geo.keyword.on_aggregatable_indices

  - do:
      catch: missing
      field_caps:
        index: 'my_remote_cluster:some_index_that_doesnt_exist'
        fields: [number]
  - match: { error.type: "index_not_found_exception" }
  - match: { error.reason: "no such index [some_index_that_doesnt_exist]" }

  - do:
      field_caps:
        index: 'my_remote_cluster:field_caps_index_1'
        fields: [number]
  - match: {fields.number.double.searchable:            true}
  - match: {fields.number.double.aggregatable:          true}

  # make sure runtime_mappings section gets propagated
  - do:
      field_caps:
        index: 'my_remote_cluster:field_caps_index_1'
        fields: [number]
        body:
          runtime_mappings:
            number:
              type: keyword
  - match: {fields.number.keyword.searchable:           true}
  - match: {fields.number.keyword.aggregatable:         true}
  - match: {fields.number.keyword.type:                 keyword}

  - do:
      catch: bad_request
      field_caps:
        index: 'my_remote_cluster:field_caps_index_1'
        fields: [number]
        body:
          runtime_mappings:
            day_of_week:
              type: keyword
              script:
                source: "bad syntax"

  - match: { error.type: "script_exception" }
  - match: { error.reason: "compile error" }
  - match: { error.script : "bad syntax" }
  - match: { error.lang : "painless" }

---
"Get field caps from remote cluster with index filter":
  - skip:
      version: " - 7.8.99"
      reason: Index filter support was added in 7.9

  - do:
      indices.create:
        index: field_caps_index_4
        body:
          mappings:
            properties:
              text:
                type:     text
              keyword:
                type:     keyword
              number:
                type:     double
              geo:
                type:     geo_point
  - do:
      index:
        index:  field_caps_index_4
        body:   { created_at: "2017-01-02" }

  - do:
      indices.refresh:
        index: [field_caps_index_4]

  - do:
      field_caps:
        index: 'field_caps_index_4,my_remote_cluster:field_*'
        fields: [number]
        body: { index_filter: { range: { created_at: { lt: "2018" } } } }

  - match: {indices:                                    ["field_caps_index_4","my_remote_cluster:field_caps_index_1"]}
  - length: {fields.number:                             1}
  - match: {fields.number.double.searchable:            true}
  - match: {fields.number.double.aggregatable:          true}

  - do:
      field_caps:
        index: 'field_caps_index_4,my_remote_cluster:field_*'
        fields: [number]
        body: { index_filter: { range: { created_at: { gt: "2019" } } } }

  - match: {indices:                                    ["my_remote_cluster:field_caps_index_3"]}
  - length: {fields.number:                             1}
  - match: {fields.number.long.searchable:              true}
  - match: {fields.number.long.aggregatable:            true}

---
"Field caps with with include_empty_fields false":
  - skip:
      version: " - 8.12.99"
      reason: include_empty_fields has been added in 8.13.0
  - do:
        indices.create:
          index: field_caps_index_5
          body:
            mappings:
              properties:
                number:
                  type: double
                empty-baz:
                  type: text

  - do:
      index:
        index:  field_caps_index_5
        body:   { number: "42", unmapped-bar: "bar" }

  - do:
      indices.refresh:
        index: [field_caps_index_5]
  - do:
      field_caps:
        include_empty_fields: false
        index: 'field_caps_index_5,my_remote_cluster:field_*'
        fields: '*'

  - is_true: fields.number
  - is_false: fields.empty-baz
  - is_true: fields.unmapped-bar
  - is_true: fields._index

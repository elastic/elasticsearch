/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */

import org.elasticsearch.gradle.internal.info.BuildParams
import org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask

apply plugin: 'elasticsearch.internal-java-rest-test'
apply plugin: 'elasticsearch.internal-test-artifact-base'
apply plugin: 'elasticsearch.bwc-test'

testArtifacts {
  registerTestArtifactFromSourceSet(sourceSets.javaRestTest)
}

buildParams.bwcVersions.withWireCompatible { bwcVersion, baseName ->
  tasks.register(bwcTaskName(bwcVersion), StandaloneRestIntegTestTask) {
    usesBwcDistribution(bwcVersion)
    systemProperty("tests.old_cluster_version", bwcVersion)
  }
}

tasks.withType(Test).configureEach {
  // CI doesn't like it when there's multiple clusters running at once
  maxParallelForks = 1
}

tasks.named("v8.5.3#bwcTest").configure { task ->
  // There is no sensible and reliable way to test the health endpoint in a cluster with a mix of 8.5.3 nodes, which serve it at _internal/_health,
  // and 8.last nodes, which serve it at _health_report. So we exclude these tests.
  task.exclude("**/HealthNodeUpgradeIT.class")
}

tasks.named("v8.6.2#bwcTest").configure { task ->
  // There is no sensible and reliable way to test the health endpoint in a cluster with a mix of 8.6.2 nodes, which serve it at _internal/_health,
  // and 8.last nodes, which serve it at _health_report. So we exclude these tests.
  task.exclude("**/HealthNodeUpgradeIT.class")
}

setup:
  - requires:
      cluster_features: "gte_v8.12.0"
      reason: 'ingest simulate added in 8.12'

---
"Test ingest simulate with reroute":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline-1"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "my-pipeline-1-ran",
                  "value": true
                }
              },
              {
                "reroute": {
                  "destination": "index-2-a"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-final-pipeline-1"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "my-final-pipeline-1-ran",
                  "value": true
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      indices.put_template:
        name: my-template-1
        body:
          index_patterns: index-1-*
          settings:
            default_pipeline: "my-pipeline-1"
            final_pipeline: "my-final-pipeline-1"

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline-2"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "my-pipeline-2-ran",
                  "value": true
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-final-pipeline-2"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "my-final-pipeline-2-ran",
                  "value": true
                }
              },
              {
                "uppercase": {
                  "field": "foo"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      indices.put_template:
        name: my-template-2
        body:
          index_patterns: index-2-*
          settings:
            default_pipeline: "my-pipeline-2"
            final_pipeline: "my-final-pipeline-2"

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index-1-a",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index-1-a",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                ]
              }
            }
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "index-2-a" }
  - match: { docs.0.doc._source.foo: "BAR" }
  - match: { docs.0.doc._source.my-pipeline-1-ran: true }
  - match: { docs.0.doc._source.my-final-pipeline-1-ran: null }
  - match: { docs.0.doc._source.my-pipeline-2-ran: true }
  - match: { docs.0.doc._source.my-final-pipeline-2-ran: true }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline-1", "my-pipeline-2", "my-final-pipeline-2"] }
  - match: { docs.0.doc._index: "index-2-a" }
  - match: { docs.1.doc._source.foo: "RAB" }
  - match: { docs.0.doc._source.my-pipeline-1-ran: true }
  - match: { docs.0.doc._source.my-final-pipeline-1-ran: null }
  - match: { docs.0.doc._source.my-pipeline-2-ran: true }
  - match: { docs.0.doc._source.my-final-pipeline-2-ran: true }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline-1", "my-pipeline-2", "my-final-pipeline-2"] }

---
"Test ingest simulate with errors":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
              {
                "uppercase": {
                  "field": "field1"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      indices.create:
        index: index
        body:
          settings:
            default_pipeline: "my-pipeline"
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index",
                "_source": {
                  "field1": true
                }
              },
              {
                "_index": "index",
                "_source": {
                  "field1": "bar"
                }
              }
            ]
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "index" }
  - match: { docs.0.doc.error.type: "illegal_argument_exception" }
  - match: { docs.0.doc.executed_pipelines: null }
  - match: { docs.1.doc._index: "index" }
  - match: { docs.1.doc._source.field1: "BAR" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline"] }

---
"Test ingest simulate with reroute and mapping validation from templates":

  - skip:
      features:
        - headers
        - allowed_warnings

  - requires:
      cluster_features: ["simulate.mapping.validation.templates"]
      reason: "ingest simulate index mapping validation added in 8.16"

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "reroute-pipeline"
        body:  >
          {
            "processors": [
              {
                "reroute": {
                  "destination": "second-index"
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      allowed_warnings:
        - "index template [first-index-template] has index patterns [first-index*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [first-index-template] will take precedence during new index creation"
      indices.put_index_template:
        name: first-index-template
        body:
          index_patterns: first-index*
          template:
            settings:
              default_pipeline: "reroute-pipeline"
            mappings:
              dynamic: strict
              properties:
                foo:
                  type: text

  - do:
      allowed_warnings:
        - "index template [second-index-template] has index patterns [second-index*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [second-index-template] will take precedence during new index creation"
      indices.put_index_template:
        name: second-index-template
        body:
          index_patterns: second-index*
          template:
            mappings:
              dynamic: strict
              properties:
                bar:
                  type: text

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "first-index",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "first-index",
                "_id": "id",
                "_source": {
                  "bar": "foo"
                }
              }
            ]
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "second-index" }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.error.type: "strict_dynamic_mapping_exception" }
  - match: { docs.0.doc.error.reason: "[1:8] mapping set to strict, dynamic introduction of [foo] within [_doc] is not allowed" }
  - match: { docs.1.doc._index: "second-index" }
  - match: { docs.1.doc._source.bar: "foo" }
  - not_exists: docs.1.doc.error

---
"Test ingest simulate with template substitutions for component templates":

  - skip:
      features:
        - headers
        - allowed_warnings

  - requires:
      cluster_features: ["simulate.component.template.substitutions"]
      reason: "ingest simulate component template substitutions added in 8.16"

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "foo-pipeline"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "foo",
                  "value": true
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "bar-pipeline"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "bar",
                  "value": true
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      cluster.put_component_template:
        name: mappings_template
        body:
          template:
            mappings:
              dynamic: strict
              properties:
                foo:
                  type: keyword

  - do:
      cluster.put_component_template:
        name: settings_template
        body:
          template:
            settings:
              index:
                default_pipeline: "foo_pipeline"

  - do:
      allowed_warnings:
        - "index template [test-composable-1] has index patterns [tsdb_templated_*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [test-composable-1] will take precedence during new index creation"
      indices.put_index_template:
        name: test-composable-1
        body:
          index_patterns:
            - foo*
          composed_of:
            - mappings_template
            - settings_template

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        index: foo-1
        body: >
          {
            "docs": [
              {
                "_id": "asdf",
                "_source": {
                  "foo": "FOO",
                  "other": "other"
                }
              }
            ],
            "component_template_substitutions": {
              "mappings_template": {
                "template": {
                  "mappings": {
                    "dynamic": "true",
                    "properties": {
                      "foo": {
                        "type": "keyword"
                      }
                    }
                  }
                }
              },
              "settings_template": {
                "template": {
                  "settings": {
                    "index": {
                      "default_pipeline": "bar-pipeline"
                    }
                  }
                }
              }
            }
          }
  - length: { docs: 1 }
  - match: { docs.0.doc._index: "foo-1" }
  - match: { docs.0.doc._source.other: "other" }
  - match: { docs.0.doc._source.bar: true }
  - match: { docs.0.doc._source.foo: "FOO" }
  - match: { docs.0.doc.executed_pipelines: ["bar-pipeline"] }
  - not_exists: docs.0.doc.error

  - do:
      indices.create:
        index: foo-1
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        index: foo-1
        body: >
          {
            "docs": [
              {
                "_id": "asdf",
                "_source": {
                  "foo": "FOO",
                  "other": "other"
                }
              }
            ],
            "component_template_substitutions": {
              "mappings_template": {
                "template": {
                  "mappings": {
                    "dynamic": "true",
                    "properties": {
                      "foo": {
                        "type": "keyword"
                      }
                    }
                  }
                }
              },
              "settings_template": {
                "template": {
                  "settings": {
                    "index": {
                      "default_pipeline": "bar-pipeline"
                    }
                  }
                }
              }
            }
          }
  - length: { docs: 1 }
  - match: { docs.0.doc._index: "foo-1" }
  - match: { docs.0.doc._source.other: "other" }
  - match: { docs.0.doc._source.bar: true }
  - match: { docs.0.doc._source.foo: "FOO" }
  - match: { docs.0.doc.executed_pipelines: ["bar-pipeline"] }
  - not_exists: docs.0.doc.error

---
"Test ingest simulate with template substitutions for component templates removing pipelines":

  - skip:
      features:
        - headers
        - allowed_warnings

  - requires:
      cluster_features: ["simulate.component.template.substitutions"]
      reason: "ingest simulate component template substitutions added in 8.16"

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "foo-pipeline"
        body:  >
          {
            "processors": [
              {
                "set": {
                  "field": "foo",
                  "value": true
                }
              }
            ]
          }
  - match: { acknowledged: true }

  - do:
      cluster.put_component_template:
        name: settings_template
        body:
          template:
            settings:
              index:
                default_pipeline: "foo_pipeline"

  - do:
      allowed_warnings:
        - "index template [test-composable-1] has index patterns [tsdb_templated_*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [test-composable-1] will take precedence during new index creation"
      indices.put_index_template:
        name: test-composable-1
        body:
          index_patterns:
            - foo*
          composed_of:
            - settings_template

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        index: foo-1
        body: >
          {
            "docs": [
              {
                "_id": "asdf",
                "_source": {
                  "foo": "FOO"
                }
              }
            ],
            "component_template_substitutions": {
              "settings_template": {
                "template": {
                  "settings": {
                    "index": {
                      "default_pipeline": null
                    }
                  }
                }
              }
            }
          }
  - length: { docs: 1 }
  - match: { docs.0.doc._index: "foo-1" }
  - match: { docs.0.doc._source.foo: "FOO" }
  - match: { docs.0.doc.executed_pipelines: [] }
  - not_exists: docs.0.doc.error

  - do:
      indices.create:
        index: foo-1
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        index: foo-1
        body: >
          {
            "docs": [
              {
                "_id": "asdf",
                "_source": {
                  "foo": "FOO"
                }
              }
            ],
            "component_template_substitutions": {
              "settings_template": {
                "template": {
                  "settings": {
                    "index": {
                      "default_pipeline": null
                    }
                  }
                }
              }
            }
          }
  - length: { docs: 1 }
  - match: { docs.0.doc._index: "foo-1" }
  - match: { docs.0.doc._source.foo: "FOO" }
  - match: { docs.0.doc.executed_pipelines: [] }
  - not_exists: docs.0.doc.error

---
setup:
  - skip:
      version: " - 8.12.99"
      reason: "API added in in 8.1.0 but modified in 8.13 (node_version field removed)"
---
teardown:
  - do:
      _internal.delete_desired_nodes: {}
---
"Test update desired nodes":
  - skip:
      reason: "contains is a newly added assertion"
      features: contains
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: 8.5, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { name: "instance-000187" } }, processors: 8.5, memory: "64gb", storage: "128gb" }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 2
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: 8.5, memory: "64gb", storage: "128gb" }
            - { settings: { "node.name": "instance-000188" }, processors: 16.0, memory: "128gb", storage: "1tb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 2 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { name: "instance-000187" } }, processors: 8.5, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { name: "instance-000188" } }, processors: 16.0, memory: "128gb", storage: "1tb" } }
---
"Test update desired nodes with node_version generates a warning":
  - skip:
      reason: "contains is a newly added assertion"
      features: ["contains", "allowed_warnings"]
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
            nodes:
              - { settings: { "node.name": "instance-000187" }, processors: 8.5, memory: "64gb", storage: "128gb", node_version: $es_version }
      allowed_warnings:
        - "[version removal] Specifying node_version in desired nodes requests is deprecated."
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { name: "instance-000187" } }, processors: 8.5, memory: "64gb", storage: "128gb", node_version: $es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 2
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: 8.5, memory: "64gb", storage: "128gb", node_version: $es_version }
            - { settings: { "node.name": "instance-000188" }, processors: 16.0, memory: "128gb", storage: "1tb", node_version: $es_version }
      allowed_warnings:
        - "[version removal] Specifying node_version in desired nodes requests is deprecated."
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 2 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { name: "instance-000187" } }, processors: 8.5, memory: "64gb", storage: "128gb", node_version: $es_version } }
  - contains: { nodes: { settings: { node: { name: "instance-000188" } }, processors: 16.0, memory: "128gb", storage: "1tb", node_version: $es_version } }
---
"Test update move to a new history id":
  - skip:
      reason: "contains is a newly added assertion"
      features: contains
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" }

  - do:
      _internal.update_desired_nodes:
        history_id: "new_history"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000188" }, processors: 16, memory: "128gb", storage: "1tb" }
  - match: { replaced_existing_history_id: true }

  - do:
      _internal.get_desired_nodes: {}
  - match: { history_id: "new_history" }
  - match: { version: 1 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { external_id: "instance-000188" } }, processors: 16.0, memory: "128gb", storage: "1tb" } }
---
"Test delete desired nodes":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" }

  - do:
      _internal.delete_desired_nodes: {}

  - do:
      catch: missing
      _internal.get_desired_nodes: {}
  - match: { status: 404 }
---
"Test delete desired nodes with node_version generates a warning":
  - skip:
      features: allowed_warnings
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb", node_version: $es_version }
      allowed_warnings:
        - "[version removal] Specifying node_version in desired nodes requests is deprecated."
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb", node_version: $es_version }

  - do:
      _internal.delete_desired_nodes: {}

  - do:
      catch: missing
      _internal.get_desired_nodes: {}
  - match: { status: 404 }
---
"Test update desired nodes is idempotent":
  - skip:
      reason: "contains is a newly added assertion"
      features: contains
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000188" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 1 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { external_id: "instance-000188" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000188" }, processors: 8.0, memory: "64gb", storage: "128gb" }

  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 1 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { external_id: "instance-000188" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
---
"Test update desired nodes is idempotent with different order":
  - skip:
      features: contains
      reason: "Uses contains feature"
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000188" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 1 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { external_id: "instance-000188" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000188" }, processors: 8.0, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }

  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}

  - match: { history_id: "test" }
  - match: { version: 1 }
  - length: { nodes: 2 }
  - contains: { nodes: { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
  - contains: { nodes: { settings: { node: { external_id: "instance-000188" } }, processors: 8.0, memory: "64gb", storage: "128gb" } }
---
"Test going backwards within the same history is forbidden":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 2
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      catch: conflict
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187", "http.tcp.keep_idle": 100 }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 409 }
  - match: { error.type: version_conflict_exception }
  - match: { error.reason: "version [1] has been superseded by version [2] for history [test]" }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 2
        nodes:
          - { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" }
---
"Test using the same version with different definition is forbidden":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 64.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: illegal_argument_exception }
  - match: { error.reason: "Desired nodes with history [test] and version [1] already exists with a different definition" }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { external_id: "instance-000187" } }, processors: 8.0, memory: "64gb", storage: "128gb" }
---
"Test external_id or node.name is required":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
  - match: { error.caused_by.caused_by.reason: "[node.name] or [node.external_id] is missing or empty" }
---
"Test external_id must have content":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "  " }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
  - match: { error.caused_by.caused_by.reason: "[node.name] or [node.external_id] is missing or empty" }
---
"Test duplicated external ids are not allowed":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187"}, processors: 8.0, memory: "64gb", storage: "128gb" }
            - { settings: { "node.external_id": "instance-000187"}, processors: 16.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: illegal_argument_exception }
  - match: { error.reason: "Some nodes contain the same setting value [instance-000187] for [node.external_id]" }
---
"Test version must be a number":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: "asa"
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187"}, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: illegal_argument_exception }
  - match: { error.reason: "Failed to parse long parameter [version] with value [asa]" }
---
"Test version must be positive":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: -1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187"}, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: action_request_validation_exception }
  - match: { error.reason: "Validation Failed: 1: version must be positive;" }
---
"Test history_id must be present":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "    "
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: action_request_validation_exception }
  - match: { error.reason: "Validation Failed: 1: historyID should not be empty;" }
---
"Test at least one node must be sent":
  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes: []
  - match: { status: 400 }
  - match: { error.type: action_request_validation_exception }
  - match: { error.reason: "Validation Failed: 1: nodes must contain at least one master node;" }
---
"Test at least one master node is present ":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.external_id": "instance-000187", "node.roles": "data_hot" }, processors: 8.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: action_request_validation_exception }
  - match: { error.reason: "Validation Failed: 1: nodes must contain at least one master node;" }
---
"Test node settings are required":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { processors: 64.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node settings can not be null":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: null, processors: 64.0, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node processors are required":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: {}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node memory is required":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: {}, processors: 8.0, storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node memory can not be null":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: {}, processors: 8.0, memory: null, storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node storage is required":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: {}, processors: 8.0, memory: "64gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node storage can not be null":
  - do:
      cluster.state: {}

  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: {}, processors: 8, memory: "64gb", storage: null }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test update desired nodes using processors range field":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 16.0, max: 20.0}, memory: "64gb", storage: "128gb" }
  - match: { replaced_existing_history_id: false }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { name: "instance-000187" } }, processors_range: {min: 16.0, max: 20.0}, memory: "64gb", storage: "128gb" }
---
"Test processors min and max are required":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: { }, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors min is required":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {max: 8.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors max is not required":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 8.0}, memory: "64gb", storage: "128gb" }

  - do:
      _internal.get_desired_nodes: {}
  - match:
      $body:
        history_id: "test"
        version: 1
        nodes:
          - { settings: { node: { name: "instance-000187" } }, processors_range: {min: 8.0}, memory: "64gb", storage: "128gb" }
---
"Test min processors should be less than or equal to max processors":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 8.0, max: 1.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors reject NaN":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: NaN, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors reject positive infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: Infinity, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors reject negative infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: -Infinity, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range min reject NaN":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: NaN, max: 1.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range min reject positive infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: Infinity, max: 1.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range min reject negative infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: -Infinity, max: 1.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range min rejects 0.0":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 0.0, max: 1.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range max reject NaN":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 1.0, max: NaN}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range max reject positive infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 1.0, max: Infinity}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range max reject negative infinity number":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 1.0, max: -Infinity}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors range max rejects 0.0":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors_range: {min: 1.0, max: 0.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test processors and processors range are exclusive":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187" }, processors: 1.0, processors_range: {min: 1.0, max: 2.0}, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }
---
"Test node roles are validated":
  - do:
      cluster.state: {}

  # Get master node id
  - set: { master_node: master }

  - do:
      nodes.info: {}
  - set: { nodes.$master.version: es_version }

  - do:
      catch: bad_request
      _internal.update_desired_nodes:
        history_id: "test"
        version: 1
        body:
          nodes:
            - { settings: { "node.name": "instance-000187", "node.roles": "unknown,other" }, processors: 8.5, memory: "64gb", storage: "128gb" }
  - match: { status: 400 }
  - match: { error.type: x_content_parse_exception }

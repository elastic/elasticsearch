---
"Refresh":



 - do:
      indices.create:
          index:    test_1
          body:
              settings:
                  refresh_interval: -1
                  number_of_shards: 5
                  number_of_routing_shards: 5
                  number_of_replicas: 0
                  # make sure that we don't have shard relocations; otherwise search can be executed by a relocated shard
                  routing.rebalance.enable: none
 - do:
      cluster.health:
          wait_for_status: green

 - do:
      index:
          index:   test_1
          id:      "1"
          body:    { foo: bar }
          refresh: true

# If you wonder why this document get 3 as an id instead of 2, it is because the
# current routing algorithm would route 1 and 2 to the same shard while we need
# them to be different for this test to pass
 - do:
      index:
          index:   test_1
          id:      "3"
          body:    { foo: bar }
          refresh: true
 - is_true: forced_refresh

 - do:
      search:
          rest_total_hits_as_int: true
          index:   test_1
          body:
            query:   { terms: { _id: [1,3] }}

 - match: { hits.total: 2 }

 - do:
      delete:
          index:   test_1
          id:      "1"

 - do:
      search:
          rest_total_hits_as_int: true
          index:   test_1
          body:
            query:   { terms: { _id: [1,3] }}

 - match: { hits.total: 2 }

 - do:
      delete:
          index:   test_1
          id:      "3"
          refresh: true

# If a replica shard where doc 1 is located gets initialized at this point, doc 1
# won't be found by the following search as the shard gets automatically refreshed
# right before getting started. This is why this test only works with 0 replicas.

 - do:
      search:
          rest_total_hits_as_int: true
          index:   test_1
          body:
            query:   { terms: { _id: [1,3] }}

 - match: { hits.total: 1 }

---
"When refresh url parameter is an empty string that means \"refresh immediately\"":



 - do:
      index:
          index:   test_1
          id:      "1"
          body:    { foo: bar }
          refresh: true
 - is_true: forced_refresh

 - do:
      search:
          rest_total_hits_as_int: true
          index:   test_1
          body:
            query:   { term: { _id: "1" }}
 - match: { hits.total: 1 }

 - do:
      delete:
          index:   test_1
          id:      "1"
          refresh: ""

 - do:
      search:
          rest_total_hits_as_int: true
          index:   test_1
          body:
            query:   { term: { _id: "1" }}
 - match: { hits.total: 0 }

---
"refresh=wait_for waits until changes are visible in search":



 - do:
      index:
          index:   delete_50_refresh_1
          id:      delete_50_refresh_id1
          body:    { foo: bar }
          refresh: true
 - is_true: forced_refresh

 - do:
      search:
          rest_total_hits_as_int: true
          index:   delete_50_refresh_1
          body:
            query:   { term: { _id: delete_50_refresh_id1 }}
 - match: { hits.total: 1 }

 - do:
     delete:
         index:   delete_50_refresh_1
         id:      delete_50_refresh_id1
         refresh: wait_for
 - is_false: forced_refresh

 - do:
      search:
          rest_total_hits_as_int: true
          index:   delete_50_refresh_1
          body:
            query:   { term: { _id: delete_50_refresh_id1 }}
 - match: { hits.total: 0 }

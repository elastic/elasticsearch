---
"cluster health test drilling down into a feature":
  - requires:
      cluster_features: "gte_v8.7.0"
      reason: "the API path changed in 8.7"

  - do:
      health_report:
        feature: master_is_stable

  - is_true: cluster_name
  - match:   { indicators.master_is_stable.status: "green" }
  - match:   { indicators.master_is_stable.symptom: "The cluster has a stable master node" }
  - is_true: indicators.master_is_stable.details.current_master
  - is_true: indicators.master_is_stable.details.recent_masters

  - do:
      health_report:
        feature: master_is_stable
        verbose: false

  - is_true: cluster_name
  - match:   { indicators.master_is_stable.status: "green" }
  - match:   { indicators.master_is_stable.symptom: "The cluster has a stable master node" }
  - is_false: indicators.master_is_stable.details
---
"cluster health test for shard capacity settings":
  - requires:
      cluster_features: [ "health.shard_capacity.unhealthy_threshold_settings" ]
      reason: "these relevant settings are added in 9.3"
  - do:
        health_report:
            feature: shards_capacity
  - is_true: cluster_name
  - match:   { indicators.shards_capacity.status: "green" }

  # set very large threshold to force the indicator to go yellow
  - do:
      cluster.put_settings:
        body:
          persistent:
            health.shard_capacity.unhealthy_threshold.yellow: 100000000
        flat_settings: true
  - match:  { persistent: { health.shard_capacity.unhealthy_threshold.yellow: "100000000" } }

  - do:
      health_report:
        feature: shards_capacity
  - is_true: cluster_name
  - match:  { indicators.shards_capacity.status: "yellow" }

  # set very large threshold to force the indicator to go red
  - do:
      cluster.put_settings:
        body:
          persistent:
            health.shard_capacity.unhealthy_threshold.red: 90000000
        flat_settings: true
  - match:  { persistent: { health.shard_capacity.unhealthy_threshold.red: "90000000" } }

  - do:
      health_report:
        feature: shards_capacity
  - is_true: cluster_name
  - match:  { indicators.shards_capacity.status: "red" }

  # set back to default
  - do:
      cluster.put_settings:
        body:
          persistent:
            health.shard_capacity.unhealthy_threshold.yellow: 10
            health.shard_capacity.unhealthy_threshold.red: 5
        flat_settings: true
  - match:  { acknowledged: true }

  - do:
      health_report:
        feature: shards_capacity
  - is_true: cluster_name
  - match:   { indicators.shards_capacity.status: "green" }

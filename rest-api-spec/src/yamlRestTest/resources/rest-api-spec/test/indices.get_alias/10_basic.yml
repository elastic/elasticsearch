---
setup:
  - skip:
      features: headers

  - do:
      indices.create:
        index: test_index
        body:
          aliases:
            test_alias: {}
            test_blias: {}

  - do:
      indices.create:
        index: test_index_2
        body:
          aliases:
            test_alias: {}
            test_blias: {}

  - do:
      security.put_role:
        name: "get_alias_test_role"
        body: >
          {
            "cluster": [],
            "indices": [
              {
                "names": ["test*", "myindex", "non-existent", "another-non-existent", "foo"],
                "privileges": ["all"]
              }
            ]
          }

  - do:
      security.put_user:
        username: "test_user"
        body: >
          {
            "password" : "x-pack-test-password",
            "roles" : [ "get_alias_test_role" ],
            "full_name" : "Get Alias Test User"
          }

---
"Get all aliases via /_alias":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: test_index_3

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias: { }

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_blias: {}}
  - match: {test_index_3.aliases: {}}

---
"Get aliases via /_alias/_all":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: test_index_3

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        name: _all

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_blias: {}}
  - is_false: test_index_3

---
"Get aliases via /_alias/*":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: test_index_3

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        name: '*'

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_blias: {}}
  - is_false: test_index_3

---
"Get all aliases via /{index}/_alias/":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - is_false: test_index_2

---
"Get aliases via /_all/_alias/":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: myindex

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: _all

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_blias: {}}
  - match: {myindex.aliases: {}}

---
"Get aliases via /*/_alias/":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: myindex

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: "*"

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_blias: {}}
  - match: {myindex.aliases: {}}

---
"Get and index with no aliases via /{index}/_alias/":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.create:
        index: myindex

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: myindex

  - match: {myindex.aliases: {}}

---
"Get specific alias via /{index}/_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index
        name:  test_alias

  - match: {test_index.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2

---
"Get aliases via /{index}/_alias/_all":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index
        name: _all

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - is_false: test_index_2

---
"Get aliases via /{index}/_alias/*":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index
        name: '*'

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - is_false: test_index_2

---
"Get aliases via /{index}/_alias/prefix*":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index
        name: 'test_a*'

  - match: {test_index.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2

---
"Get aliases via /{index}/_alias/name,name":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index
        name: 'test_alias,test_blias'

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index.aliases.test_blias: {}}
  - is_false: test_index_2

---
"Get aliases via /_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        name: test_alias

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2.aliases.test_blias

---
"Get aliases via /_all/_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: _all
        name: test_alias

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2.aliases.test_blias

---
"Get aliases via /*/_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: '*'
        name: test_alias

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2.aliases.test_blias

---
"Get aliases via /*suf/_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: '*2'
        name: test_alias

  - match: {test_index_2.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_alias
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2.aliases.test_blias

---
"Get aliases via /name,name/_alias/{name}":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        index: test_index,test_index_2
        name: test_alias

  - match: {test_index.aliases.test_alias: {}}
  - match: {test_index_2.aliases.test_alias: {}}
  - is_false: test_index.aliases.test_blias
  - is_false: test_index_2.aliases.test_blias


---
"Non-existent alias on an existing index returns 404":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      catch: missing
      indices.get_alias:
        index: test_index
        name: non-existent

  - match: { 'status': 404}
  - match: { 'error': 'alias [non-existent] missing' }

---
"Existent and non-existent alias returns 404 and the existing alias":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      catch: missing
      indices.get_alias:
        index: test_index
        name: test_alias,non-existent

  - match: { 'status': 404 }
  - match: { 'error': 'alias [non-existent] missing' }
  - match: { test_index.aliases.test_alias: { } }

---
"Existent and non-existent aliases returns 404 and the existing alias":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      catch: missing
      indices.get_alias:
        index: test_index
        name: test_alias,non-existent,another-non-existent

  - match: { 'status': 404 }
  - match: { 'error': 'aliases [another-non-existent,non-existent] missing' }
  - match: { test_index.aliases.test_alias: { } }

---
"Getting alias on an non-existent index should return 404":
  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      catch: missing
      indices.get_alias:
        index: non-existent
        name: foo

---
"Get alias against closed indices":
  - skip:
      features: ["allowed_warnings"]

  - transform_and_set: { login_credentials: "#base64Encode(test_user:x-pack-test-password)" }

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.close:
        index: test_index_2

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        name: test_alias

  - is_true: test_index
  - is_true: test_index_2

  - do:
      headers:
        Authorization: Basic ${login_credentials}
      indices.get_alias:
        name: test_alias
        expand_wildcards: open

  - is_true: test_index
  - is_false: test_index_2

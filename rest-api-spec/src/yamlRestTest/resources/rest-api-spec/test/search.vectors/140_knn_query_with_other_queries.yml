# test how knn query interact with other queries
setup:
  - skip:
      version: ' - 8.11.99'
      reason: 'knn as query added in 8.12'
      features: close_to

  - do:
      indices.create:
        index: my_index
        body:
          settings:
            number_of_shards: 1
          mappings:
            dynamic: false
            properties:
              my_vector:
                type: dense_vector
                dims: 4
                index : true
                similarity : l2_norm
                index_options:
                  type: hnsw
                  m: 16
                  ef_construction: 200
              my_name:
                type: keyword
                store: true
          aliases:
            my_alias:
              filter:
                term:
                  my_name: v2
            my_alias1:
              filter:
                term:
                  my_name: v1

  - do:
      bulk:
        refresh: true
        index: my_index
        body:
          - '{"index": {"_id": "1"}}'
          - '{"my_vector": [1, 1, 1, 1], "my_name": "v1"}'
          - '{"index": {"_id": "2"}}'
          - '{"my_vector": [1, 1, 1, 2], "my_name": "v2"}'
          - '{"index": {"_id": "3"}}'
          - '{"my_vector": [1, 1, 1, 3], "my_name": "v1"}'
          - '{"index": {"_id": "4"}}'
          - '{"my_vector": [1, 1, 1, 4], "my_name": "v2"}'
          - '{"index": {"_id": "5"}}'
          - '{"my_vector": [1, 1, 1, 5], "my_name": "v1"}'
          - '{"index": {"_id": "6"}}'
          - '{"my_vector": [1, 1, 1, 6], "my_name": "v2"}'
          - '{"index": {"_id": "7"}}'
          - '{"my_vector": [1, 1, 1, 7], "my_name": "v1"}'
          - '{"index": {"_id": "8"}}'
          - '{"my_vector": [1, 1, 1, 8], "my_name": "v2"}'
          - '{"index": {"_id": "9"}}'
          - '{"my_vector": [1, 1, 1, 9], "my_name": "v1"}'
          - '{"index": {"_id": "10"}}'
          - '{"my_vector": [1, 1, 1, 10], "my_name": "v2"}'

---
"Function score query with knn query":
  # find top 5 knn docs, then boost docs with name v1 by 10 and docs with name v2 by 100
  - do:
      search:
        index: my_index
        body:
          size: 3
          fields: [ my_name ]
          query:
            function_score:
              query:
                knn:
                  field: my_vector
                  query_vector: [ 1, 1, 1, 1 ]
                  num_candidates: 5
              functions:
                - filter: { match: { my_name: v1 } }
                  weight: 10
                - filter: { match: { my_name: v2 } }
                  weight: 100
              boost_mode: multiply

  - match: { hits.total.value: 5 } # collector sees num_candidates docs
  - length: { hits.hits: 3 }
  - match: { hits.hits.0._id: "2" }
  - match: { hits.hits.0.fields.my_name.0: v2 }
  - close_to: { hits.hits.0._score: { value: 50.0, error: 0.001 } }
  - match: { hits.hits.1._id: "1" }
  - match: { hits.hits.1.fields.my_name.0: v1 }
  - close_to: { hits.hits.1._score: { value: 10.0, error: 0.001 } }
  - match: { hits.hits.2._id: "4" }
  - match: { hits.hits.2.fields.my_name.0: v2 }
  - close_to: { hits.hits.2._score: { value: 10.0, error: 0.001 } }

---
"dis_max query with knn query":
  - do:
      search:
        index: my_index
        body:
          size: 10
          fields: [ my_name ]
          query:
            dis_max:
              queries:
                - knn: { field: my_vector, query_vector: [ 1, 1, 1, 1 ], num_candidates: 5 }
                - match: { my_name: v2 }
              tie_breaker: 0.8

  - match: { hits.total.value: 8 } # 5 knn results + extra results from match query
  - match: { hits.hits.0._id: "2" }
  - match: { hits.hits.0.fields.my_name.0: v2 }
  - match: { hits.hits.1._id: "1" }
  - match: { hits.hits.1.fields.my_name.0: v1 }
  - match: { hits.hits.2._id: "4" }
  - match: { hits.hits.2.fields.my_name.0: v2 }
  - match: { hits.hits.3._id: "6" }
  - match: { hits.hits.3.fields.my_name.0: v2 }
  - match: { hits.hits.4._id: "8" }
  - match: { hits.hits.4.fields.my_name.0: v2 }
  - match: { hits.hits.5._id: "10" }
  - match: { hits.hits.5.fields.my_name.0: v2 }
  - match: { hits.hits.6._id: "3" }
  - match: { hits.hits.6.fields.my_name.0: v1 }
  - match: { hits.hits.7._id: "5" }
  - match: { hits.hits.7.fields.my_name.0: v1 }

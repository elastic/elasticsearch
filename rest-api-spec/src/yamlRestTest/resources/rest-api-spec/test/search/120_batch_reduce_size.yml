setup:
  - do:
      indices.create:
          index: test_1
          body:
            settings:
              number_of_shards: 5
              number_of_replicas: 0
            mappings:
              properties:
                str:
                   type: keyword

---
"batched_reduce_size lower limit":
  - do:
      catch:      /batchedReduceSize must be >= 2/
      search:
        rest_total_hits_as_int: true
        index: test_1
        batched_reduce_size: 1


---
"batched_reduce_size 2 with 5 shards":
  - do:
      index:
        index: test_1
        id: "1"
        body: { "str" : "abc" }

  - do:
      index:
        index: test_1
        id: "2"
        body: { "str": "abc" }

  - do:
      index:
        index: test_1
        id: "3"
        body: { "str": "bcd" }
  - do:
      indices.refresh: {}

  - do:
      search:
        rest_total_hits_as_int: true
        batched_reduce_size: 2
        body: { "size" : 0, "aggs" : { "str_terms" : { "terms" : { "field" : "str" } } } }

  - match: { num_reduce_phases: 4 }
  - match: { hits.total: 3 }
  - length: { aggregations.str_terms.buckets: 2 }
  - match: { aggregations.str_terms.buckets.0.key: "abc" }
  - is_false: aggregations.str_terms.buckets.0.key_as_string
  - match: { aggregations.str_terms.buckets.0.doc_count: 2 }
  - match: { aggregations.str_terms.buckets.1.key: "bcd" }
  - is_false: aggregations.str_terms.buckets.1.key_as_string
  - match: { aggregations.str_terms.buckets.1.doc_count: 1 }

setup:
  - requires:
      cluster_features: "gte_v8.12.0"
      reason: 'ingest simulate added in 8.12'

---
"Test no pipelines":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index-2",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ]
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "index-1" }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.executed_pipelines: [] }
  - match: { docs.1.doc._index: "index-2" }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: [] }

---
"Test existing index with pipelines":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-final-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      indices.create:
        index:  index
        body:
          settings:
            default_pipeline: "my-pipeline"
            final_pipeline: "my-final-pipeline"

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                ]
              }
            }
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }

---
"Test mapping validation":

  - skip:
      features: headers

  - requires:
      cluster_features: ["simulate.mapping.validation"]
      reason: "ingest simulate index mapping validation added in 8.16"

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-final-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      indices.create:
        index:  strict_index
        body:
          settings:
            default_pipeline: "my-pipeline"
            final_pipeline: "my-final-pipeline"
            number_of_shards: 2
            number_of_replicas: 0
          mappings:
            dynamic: strict
            properties:
              foo:
                type: text

  - do:
      indices.create:
        index:  lenient_index
        body:
          settings:
            default_pipeline: "my-pipeline"
            final_pipeline: "my-final-pipeline"
            number_of_shards: 2
            number_of_replicas: 0
          mappings:
            dynamic: true
            properties:
              foo:
                type: text

  - do:
      cluster.health:
        index: lenient_index
        wait_for_status: green

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "strict_index",
                "_id": "id",
                "_source": {
                  "foob": "bar"
                }
              },
              {
                "_index": "strict_index",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                ]
              }
            }
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._source.foob: "bar" }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - match: { docs.0.doc.error.type: "strict_dynamic_mapping_exception" }
  - match: { docs.0.doc.error.reason: "[1:9] mapping set to strict, dynamic introduction of [foob] within [_doc] is not allowed" }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - not_exists: docs.1.doc.error

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "lenient_index",
                "_id": "id",
                "_source": {
                  "foob": "bar"
                }
              },
              {
                "_index": "lenient_index",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                ]
              }
            }
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._source.foob: "bar" }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - not_exists: docs.0.doc.error
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - not_exists: docs.1.doc.error

---
"Test index templates with pipelines":

  - skip:
      features: [headers, allowed_warnings]

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-final-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      allowed_warnings:
        - "index template [my-template] has index patterns [index-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template
        body:
          index_patterns: index-*
          template:
            settings:
              default_pipeline: "my-pipeline"
              final_pipeline: "my-final-pipeline"

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                ]
              }
            }
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "index-1" }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }
  - match: { docs.1.doc._index: "index-1" }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline", "my-final-pipeline"] }

---
"Test bad pipeline substitution":

  - skip:
      features: [headers, allowed_warnings]

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      allowed_warnings:
        - "index template [my-template] has index patterns [index-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [my-template] will take precedence during new index creation"
      indices.put_index_template:
        name: my-template
        body:
          index_patterns: index-*
          template:
            settings:
              default_pipeline: "my-pipeline"

  - do:
      catch: "request"
      headers:
        Content-Type: application/json
      simulate.ingest:
        body: >
          {
            "docs": [
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ],
            "pipeline_substitutions": {
              "my-pipeline": {
                "processors": [
                  {
                    "non-existent-processor": {
                    }
                  }
                ]
              }
            }
          }
  - match: { status: 500 }

---
"Test index in path":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        index: "test-index"
        body: >
          {
            "docs": [
              {
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ]
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "test-index" }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.executed_pipelines: [] }
  - match: { docs.1.doc._index: "test-index" }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: [] }

---
"Test pipeline in query param":

  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      ingest.put_pipeline:
        id: "my-pipeline"
        body:  >
          {
            "processors": [
            ]
          }
  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      simulate.ingest:
        pipeline: "my-pipeline"
        body: >
          {
            "docs": [
              {
                "_index": "index-1",
                "_id": "id",
                "_source": {
                  "foo": "bar"
                }
              },
              {
                "_index": "index-2",
                "_id": "id",
                "_source": {
                  "foo": "rab"
                }
              }
            ]
          }
  - length: { docs: 2 }
  - match: { docs.0.doc._index: "index-1" }
  - match: { docs.0.doc._source.foo: "bar" }
  - match: { docs.0.doc.executed_pipelines: ["my-pipeline"] }
  - match: { docs.1.doc._index: "index-2" }
  - match: { docs.1.doc._source.foo: "rab" }
  - match: { docs.1.doc.executed_pipelines: ["my-pipeline"] }

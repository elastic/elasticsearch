setup:
  - requires:
      cluster_features: ["gte_v8.16.0"]
      reason: Lenient handling of updateable synonyms by default is introduced in 8.16.0
---
"Load index with an invalid synonym rule":
  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar, baz"

  - do:
      indices.create:
        index: test_index
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 0
            analysis:
              filter:
                my_synonym_filter:
                  type: synonym
                  synonyms_set: set1
                  updateable: true
                my_stop_filter:
                  type: stop
                  stopwords: ["baz"]
              analyzer:
                my_analyzer:
                  type: custom
                  tokenizer: whitespace
                  filter: [ lowercase, my_stop_filter, my_synonym_filter ]
          mappings:
            properties:
              my_field:
                type: text
                search_analyzer: my_analyzer

  - match: { acknowledged: true }
  - match: { shards_acknowledged: true }

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

---
"Reload index with invalid synonym rule":
  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar"

  - do:
      indices.create:
        index: test_index
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 0
            analysis:
              filter:
                my_synonym_filter:
                  type: synonym
                  synonyms_set: set1
                  updateable: true
                my_stop_filter:
                  type: stop
                  stopwords: ["baz"]
              analyzer:
                my_analyzer:
                  type: custom
                  tokenizer: whitespace
                  filter: [ lowercase, my_stop_filter, my_synonym_filter ]
          mappings:
            properties:
              my_field:
                type: text
                search_analyzer: my_analyzer

  - match: { acknowledged: true }
  - match: { shards_acknowledged: true }

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar, baz"

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

  - do:
      indices.close:
        index: test_index

  - match: { acknowledged: true }
  - length: { indices: 1 }

  - do:
      indices.open:
        index: test_index
        wait_for_active_shards: all

  - match: { acknowledged: true }
  - match: { shards_acknowledged: true }

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

---
"Load index with an invalid synonym rule with lenient set to false":
  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar, baz"

  - do:
      indices.create:
        index: test_index
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 0
            analysis:
              filter:
                my_synonym_filter:
                  type: synonym
                  synonyms_set: set1
                  updateable: true
                  lenient: false
                my_stop_filter:
                  type: stop
                  stopwords: ["baz"]
              analyzer:
                my_analyzer:
                  type: custom
                  tokenizer: whitespace
                  filter: [ lowercase, my_stop_filter, my_synonym_filter ]
          mappings:
            properties:
              my_field:
                type: text
                search_analyzer: my_analyzer

  - match: { acknowledged: true }
  - match: { shards_acknowledged: false }

  - do:
      indices.stats: { index: test_index }

  - length: { indices: 0 }

---
"Reload index with an invalid synonym rule with lenient set to false":
  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar"

  - do:
      indices.create:
        index: test_index
        body:
          settings:
            index:
              number_of_shards: 1
              number_of_replicas: 0
            analysis:
              filter:
                my_synonym_filter:
                  type: synonym
                  synonyms_set: set1
                  updateable: true
                  lenient: false
                my_stop_filter:
                  type: stop
                  stopwords: [ "baz" ]
              analyzer:
                my_analyzer:
                  type: custom
                  tokenizer: whitespace
                  filter: [ lowercase, my_stop_filter, my_synonym_filter ]
          mappings:
            properties:
              my_field:
                type: text
                search_analyzer: my_analyzer

  - match: { acknowledged: true }
  - match: { shards_acknowledged: true }

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

  - do:
      synonyms.put_synonym:
        id: set1
        body:
          synonyms_set:
            synonyms: "foo => bar, baz"

  - do:
      indices.stats: { index: test_index }

  - match: { indices.test_index.health: "green" }

  - do:
      indices.analyze:
        index: test_index
        body:
          analyzer: my_analyzer
          text: foo

  - length: { tokens: 1 }
  - match: { tokens.0.token: bar }

  - do:
      indices.close:
        index: test_index

  - match: { acknowledged: true }
  - length: { indices: 1 }

  - do:
      indices.open:
        index: test_index
        wait_for_active_shards: all

  - match: { acknowledged: true }
  - match: { shards_acknowledged: false }

  - do:
      indices.stats: { index: test_index }

  - length: { indices: 0 }

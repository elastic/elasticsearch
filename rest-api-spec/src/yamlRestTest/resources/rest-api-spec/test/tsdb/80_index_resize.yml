---
setup:
  - skip:
      version: " - 8.1.99,8.7.00 - 8.12.99"
      reason: _tsid hashing introduced in 8.13
      features: "arbitrary_key"

  # Force allocating all shards to a single node so that we can shrink later.
  # In production you can move the shards to the single node after they've been
  # built but that is very difficult during testing, especially during multi
  # version tests.

  - do:
      nodes.info:
        node_id: data:true
  - set:
      nodes._arbitrary_key_: node_id

  - do:
      indices.create:
          index: test
          body:
            settings:
              index:
                mode: time_series
                routing_path: [metricset, k8s.pod.uid]
                time_series:
                  start_time: 2021-04-28T00:00:00Z
                  end_time: 2021-04-29T00:00:00Z
                number_of_shards: 3
                number_of_replicas: 0
                # ensure everything is allocated on the same data node for shrink
                routing.allocation.include._id: $node_id
            mappings:
              properties:
                "@timestamp":
                  type: date
                metricset:
                  type: keyword
                  time_series_dimension: true
                k8s:
                  properties:
                    pod:
                      properties:
                        uid:
                          type: keyword
                          time_series_dimension: true
                        name:
                          type: keyword
                        ip:
                          type: ip
                        network:
                          properties:
                            tx:
                              type: long
                            rx:
                              type: long
  - do:
      bulk:
        refresh: true
        index: test
        body:
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:04.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.1", "network": {"tx": 2001818691, "rx": 802133794}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:24.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.1", "network": {"tx": 2005177954, "rx": 801479970}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:44.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.1", "network": {"tx": 2006223737, "rx": 802337279}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:51:04.467Z", "metricset": "pod", "k8s": {"pod": {"name": "cat", "uid":"947e4ced-1786-4e53-9e0c-5c447e959507", "ip": "10.10.55.2", "network": {"tx": 2012916202, "rx": 803685721}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:03.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.3", "network": {"tx": 1434521831, "rx": 530575198}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:23.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.3", "network": {"tx": 1434577921, "rx": 530600088}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:53.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.3", "network": {"tx": 1434587694, "rx": 530604797}}}}'
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:51:03.142Z", "metricset": "pod", "k8s": {"pod": {"name": "dog", "uid":"df3145b3-0563-4d3b-a0f7-897eb2876ea9", "ip": "10.10.55.3", "network": {"tx": 1434595272, "rx": 530605511}}}}'

  - do:
      indices.put_settings:
        index: test
        body:
          index.blocks.write: true

---
split:
  - skip:
      version: " - 8.1.99"
      reason: tsdb indexing changed in 8.2.0

  - do:
      catch: /index-split is not supported because the destination index \[test\] is in time series mode/
      indices.split:
        index: test
        target: test_split
        body:
          settings:
            index.number_of_replicas: 0
            index.number_of_shards: 6

---
shrink:
  - skip:
      version: " - 8.12.99"
      reason: _tsid hashing introduced in 8.13

  - do:
      indices.shrink:
        index: test
        target: test_shrink
        body:
          settings:
            index.number_of_shards: 1

  - do:
      search:
        index: test_shrink
        body:
          fields:
            - field: _tsid
          query:
            query_string:
              query: '+@timestamp:"2021-04-28T18:51:04.467Z" +k8s.pod.name:cat'

  - match: {hits.total.value: 1}
  - match: {hits.hits.0.fields._tsid: ["KCjEJ9R_BgO8TRX2QOd6dpR12oDh--qoyNZRQPy43y34Qdy2dpsyG0o"]}

---
clone:
  - skip:
      version: " - 8.12.99"
      reason: _tsid hashing introduced in 8.13

  - do:
      indices.clone:
        index: test
        target: test_clone

  - do:
      search:
        index: test_clone
        body:
          fields:
            - field: _tsid
          query:
            query_string:
              query: '+@timestamp:"2021-04-28T18:51:04.467Z" +k8s.pod.name:cat'

  - match: {hits.total.value: 1}
  - match: {hits.hits.0.fields._tsid: ["KCjEJ9R_BgO8TRX2QOd6dpR12oDh--qoyNZRQPy43y34Qdy2dpsyG0o"]}

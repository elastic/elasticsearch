import org.elasticsearch.gradle.internal.dependencies.rules.ExcludeTransitivesRule
import org.elasticsearch.gradle.internal.toolchain.AdoptiumJdkToolchainResolver
import org.elasticsearch.gradle.internal.toolchain.ArchivedOracleJdkToolchainResolver
import org.elasticsearch.gradle.internal.toolchain.OracleOpenJdkToolchainResolver

pluginManagement {
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  includeBuild "build-conventions"
  includeBuild "build-tools"
  includeBuild "build-tools-internal"
}

plugins {
  id "com.gradle.develocity" version "4.0.1"
  id 'elasticsearch.java-toolchain'
}

enableFeaturePreview "STABLE_CONFIGURATION_CACHE"

rootProject.name = "elasticsearch"

dependencyResolutionManagement {
  versionCatalogs {
    buildLibs {
      from(files("gradle/build.versions.toml"))
    }
  }
}

dependencyResolutionManagement {
  components {
    withModule("co.elastic.logging:log4j2-ecs-layout", ExcludeTransitivesRule)
    withModule("com.azure:azure-core", ExcludeTransitivesRule)
    withModule("com.azure:azure-core-http-netty", ExcludeTransitivesRule)
    withModule("com.azure:azure-core-http-okhttp", ExcludeTransitivesRule)
    withModule("com.azure:azure-identity", ExcludeTransitivesRule)
    withModule("com.azure:azure-storage-blob", ExcludeTransitivesRule)
    withModule("com.azure:azure-storage-blob-batch", ExcludeTransitivesRule)
    withModule("com.azure:azure-storage-common", ExcludeTransitivesRule)
    withModule("com.azure:azure-storage-internal-avro", ExcludeTransitivesRule)
    withModule("com.carrotsearch.randomizedtesting:randomizedtesting-runner", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.core:jackson-annotations", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.core:jackson-core", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.dataformat:jackson-dataformat-cbor", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.dataformat:jackson-dataformat-smile", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.dataformat:jackson-dataformat-xml", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.datatype:jackson-datatype-jsr310", ExcludeTransitivesRule)
    withModule("com.fasterxml.jackson.module:jackson-module-jaxb-annotations", ExcludeTransitivesRule)
    withModule("com.fasterxml.woodstox:woodstox-core", ExcludeTransitivesRule)
    withModule("com.google.api-client:google-api-client", ExcludeTransitivesRule)
    withModule("com.google.api.grpc:proto-google-cloud-storage-v2", ExcludeTransitivesRule)
    withModule("com.google.api.grpc:proto-google-common-protos", ExcludeTransitivesRule)
    withModule("com.google.api.grpc:proto-google-iam-v1", ExcludeTransitivesRule)
    withModule("com.google.api:api-common", ExcludeTransitivesRule)
    withModule("com.google.api:gax", ExcludeTransitivesRule)
    withModule("com.google.api:gax-httpjson", ExcludeTransitivesRule)
    withModule("com.google.apis:google-api-services-storage", ExcludeTransitivesRule)
    withModule("com.google.auth:google-auth-library-oauth2-http", ExcludeTransitivesRule)
    withModule("com.google.cloud:google-cloud-core", ExcludeTransitivesRule)
    withModule("com.google.cloud:google-cloud-core-http", ExcludeTransitivesRule)
    withModule("com.google.cloud:google-cloud-storage", ExcludeTransitivesRule)
    withModule("com.google.code.gson:gson", ExcludeTransitivesRule)
    withModule("com.google.guava:guava", ExcludeTransitivesRule)
    withModule("com.google.http-client:google-http-client", ExcludeTransitivesRule)
    withModule("com.google.http-client:google-http-client-appengine", ExcludeTransitivesRule)
    withModule("com.google.http-client:google-http-client-gson", ExcludeTransitivesRule)
    withModule("com.google.http-client:google-http-client-jackson2", ExcludeTransitivesRule)
    withModule("com.google.jimfs:jimfs", ExcludeTransitivesRule)
    withModule("com.google.oauth-client:google-oauth-client", ExcludeTransitivesRule)
    withModule("com.google.protobuf:protobuf-java-util", ExcludeTransitivesRule)
    withModule("com.googlecode.owasp-java-html-sanitizer:owasp-java-html-sanitizer", ExcludeTransitivesRule)
    withModule("com.maxmind.geoip2:geoip2", ExcludeTransitivesRule)
    withModule("com.microsoft.azure:azure-core", ExcludeTransitivesRule)
    withModule("com.microsoft.azure:azure-svc-mgmt-compute", ExcludeTransitivesRule)
    withModule("com.microsoft.azure:msal4j", ExcludeTransitivesRule)
    withModule("com.microsoft.azure:msal4j-persistence-extension", ExcludeTransitivesRule)
    withModule("com.microsoft.graph:microsoft-graph", ExcludeTransitivesRule)
    withModule("com.microsoft.graph:microsoft-graph-core", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-abstractions", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-authentication-azure", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-http-okHttp", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-serialization-form", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-serialization-json", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-serialization-multipart", ExcludeTransitivesRule)
    withModule("com.microsoft.kiota:microsoft-kiota-serialization-text", ExcludeTransitivesRule)
    withModule("com.networknt:json-schema-validator", ExcludeTransitivesRule)
    withModule("com.nimbusds:oauth2-oidc-sdk", ExcludeTransitivesRule)
    withModule("com.squareup.okhttp3:okhttp", ExcludeTransitivesRule)
    withModule("com.squareup.okio:okio", ExcludeTransitivesRule)
    withModule("com.squareup.okio:okio-jvm", ExcludeTransitivesRule)
    withModule("com.sun.mail:jakarta.mail", ExcludeTransitivesRule)
    withModule("com.sun.xml.bind:jaxb-impl", ExcludeTransitivesRule)
    withModule("com.wdtinc:mapbox-vector-tile", ExcludeTransitivesRule)
    withModule("io.dropwizard.metrics:metrics-core", ExcludeTransitivesRule)
    withModule("io.grpc:grpc-api", ExcludeTransitivesRule)
    withModule("io.netty:netty-buffer", ExcludeTransitivesRule)
    withModule("io.netty:netty-codec", ExcludeTransitivesRule)
    withModule("io.netty:netty-codec-dns", ExcludeTransitivesRule)
    withModule("io.netty:netty-codec-http", ExcludeTransitivesRule)
    withModule("io.netty:netty-codec-http2", ExcludeTransitivesRule)
    withModule("io.netty:netty-codec-socks", ExcludeTransitivesRule)
    withModule("io.netty:netty-handler", ExcludeTransitivesRule)
    withModule("io.netty:netty-handler-proxy", ExcludeTransitivesRule)
    withModule("io.netty:netty-resolver", ExcludeTransitivesRule)
    withModule("io.netty:netty-resolver-dns", ExcludeTransitivesRule)
    withModule("io.netty:netty-transport", ExcludeTransitivesRule)
    withModule("io.netty:netty-transport-classes-epoll", ExcludeTransitivesRule)
    withModule("io.netty:netty-transport-native-unix-common", ExcludeTransitivesRule)
    withModule("io.opencensus:opencensus-api", ExcludeTransitivesRule)
    withModule("io.opencensus:opencensus-contrib-http-util", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-api", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-context", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-exporter-common", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-exporter-otlp", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-exporter-otlp-common", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-exporter-sender-jdk", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-sdk", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-sdk-common", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-sdk-metrics", ExcludeTransitivesRule)
    withModule("io.opentelemetry:opentelemetry-semconv", ExcludeTransitivesRule)
    withModule("io.projectreactor.netty:reactor-netty-core", ExcludeTransitivesRule)
    withModule("io.projectreactor.netty:reactor-netty-http", ExcludeTransitivesRule)
    withModule("io.projectreactor:reactor-core", ExcludeTransitivesRule)
    withModule("io.sgr:s2-geometry-library-java", ExcludeTransitivesRule)
    withModule("jakarta.xml.bind:jakarta.xml.bind-api", ExcludeTransitivesRule)
    withModule("javax.mail:mail", ExcludeTransitivesRule)
    withModule("javax.xml.bind:jaxb-api", ExcludeTransitivesRule)
    withModule("junit:junit", ExcludeTransitivesRule)
    withModule("net.java.dev.jna:jna-platform", ExcludeTransitivesRule)
    withModule("net.minidev:accessors-smart", ExcludeTransitivesRule)
    withModule("net.minidev:json-smart", ExcludeTransitivesRule)
    withModule("net.sf.ehcache:ehcache", ExcludeTransitivesRule)
    withModule("net.shibboleth.utilities:java-support", ExcludeTransitivesRule)
    withModule("org.apache.arrow:arrow-format", ExcludeTransitivesRule)
    withModule("org.apache.arrow:arrow-memory-core", ExcludeTransitivesRule)
    withModule("org.apache.arrow:arrow-vector", ExcludeTransitivesRule)
    withModule("org.apache.commons:commons-compress", ExcludeTransitivesRule)
    withModule("org.apache.commons:commons-text", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-asn1-api", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-asn1-ber", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-client-api", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-codec-core", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-codec-standalone", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-extras-aci", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-extras-codec-api", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-extras-sp", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-extras-util", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-model", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-net-mina", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-ldap-schema-data", ExcludeTransitivesRule)
    withModule("org.apache.directory.api:api-util", ExcludeTransitivesRule)
    withModule("org.apache.directory.jdbm:apacheds-jdbm1", ExcludeTransitivesRule)
    withModule("org.apache.directory.mavibot:mavibot", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-core-annotations", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-core-api", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-i18n", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-interceptor-kerberos", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-jdbm-partition", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-kerberos-codec", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-ldif-partition", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-mavibot-partition", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-protocol-kerberos", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-protocol-ldap", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-protocol-shared", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-server-annotations", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-test-framework", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:apacheds-xdbm-partition", ExcludeTransitivesRule)
    withModule("org.apache.directory.server:ldap-client-test", ExcludeTransitivesRule)
    withModule("org.apache.hadoop:hadoop-client-api", ExcludeTransitivesRule)
    withModule("org.apache.hadoop:hadoop-client-runtime", ExcludeTransitivesRule)
    withModule("org.apache.hadoop:hadoop-common", ExcludeTransitivesRule)
    withModule("org.apache.hadoop:hadoop-hdfs", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents.client5:httpclient5", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents:fluent-hc", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents:httpasyncclient", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents:httpclient", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents:httpclient-cache", ExcludeTransitivesRule)
    withModule("org.apache.httpcomponents:httpcore-nio", ExcludeTransitivesRule)
    withModule("org.apache.james:apache-mime4j-core", ExcludeTransitivesRule)
    withModule("org.apache.james:apache-mime4j-dom", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-admin", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-client", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-common", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-identity", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-server", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-simplekdc", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerb-util", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerby-config", ExcludeTransitivesRule)
    withModule("org.apache.kerby:kerby-pkix", ExcludeTransitivesRule)
    withModule("org.apache.kerby:ldap-backend", ExcludeTransitivesRule)
    withModule("org.apache.kerby:token-provider", ExcludeTransitivesRule)
    withModule("org.apache.logging.log4j:log4j-1.2-api", ExcludeTransitivesRule)
    withModule("org.apache.logging.log4j:log4j-core", ExcludeTransitivesRule)
    withModule("org.apache.logging.log4j:log4j-jcl", ExcludeTransitivesRule)
    withModule("org.apache.logging.log4j:log4j-slf4j-impl", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-common", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-icu", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-kuromoji", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-morfologik", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-nori", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-phonetic", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-smartcn", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-analysis-stempel", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-backward-codecs", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-expressions", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-facet", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-grouping", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-highlighter", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-join", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-memory", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-misc", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-queries", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-queryparser", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-sandbox", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-spatial-extras", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-spatial3d", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-suggest", ExcludeTransitivesRule)
    withModule("org.apache.lucene:lucene-test-framework", ExcludeTransitivesRule)
    withModule("org.apache.mina:mina-core", ExcludeTransitivesRule)
    withModule("org.apache.pdfbox:fontbox", ExcludeTransitivesRule)
    withModule("org.apache.pdfbox:pdfbox", ExcludeTransitivesRule)
    withModule("org.apache.pdfbox:pdfbox-io", ExcludeTransitivesRule)
    withModule("org.apache.poi:poi", ExcludeTransitivesRule)
    withModule("org.apache.poi:poi-ooxml", ExcludeTransitivesRule)
    withModule("org.apache.poi:poi-scratchpad", ExcludeTransitivesRule)
    withModule("org.apache.santuario:xmlsec", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-core", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-langdetect-tika", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-apple-module", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-microsoft-module", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-miscoffice-module", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-pdf-module", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-text-module", ExcludeTransitivesRule)
    withModule("org.apache.tika:tika-parser-xmp-commons", ExcludeTransitivesRule)
    withModule("org.apache.xmlbeans:xmlbeans", ExcludeTransitivesRule)
    withModule("org.bouncycastle:bcpg-fips", ExcludeTransitivesRule)
    withModule("org.bouncycastle:bcpkix-jdk18on", ExcludeTransitivesRule)
    withModule("org.bouncycastle:bcutil-jdk18on", ExcludeTransitivesRule)
    withModule("org.carrot2:morfologik-stemming", ExcludeTransitivesRule)
    withModule("org.jetbrains.kotlin:kotlin-stdlib", ExcludeTransitivesRule)
    withModule("org.jruby.joni:joni", ExcludeTransitivesRule)
    withModule("org.junit.jupiter:junit-jupiter", ExcludeTransitivesRule)
    withModule("org.mockito:mockito-core", ExcludeTransitivesRule)
    withModule("org.mockito:mockito-subclass", ExcludeTransitivesRule)
    withModule("org.openjdk.jmh:jmh-core", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-core", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-messaging-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-messaging-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-profile-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-profile-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-saml-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-saml-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-security-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-security-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-soap-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-soap-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-storage-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-storage-impl", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-xmlsec-api", ExcludeTransitivesRule)
    withModule("org.opensaml:opensaml-xmlsec-impl", ExcludeTransitivesRule)
    withModule("org.orbisgis:cts", ExcludeTransitivesRule)
    withModule("org.orbisgis:h2gis", ExcludeTransitivesRule)
    withModule("org.orbisgis:h2gis-utilities", ExcludeTransitivesRule)
    withModule("org.ow2.asm:asm-analysis", ExcludeTransitivesRule)
    withModule("org.ow2.asm:asm-commons", ExcludeTransitivesRule)
    withModule("org.ow2.asm:asm-tree", ExcludeTransitivesRule)
    withModule("org.ow2.asm:asm-util", ExcludeTransitivesRule)
    withModule("org.reactivestreams:reactive-streams-tck", ExcludeTransitivesRule)
    withModule("org.slf4j:jcl-over-slf4j", ExcludeTransitivesRule)
    withModule("org.slf4j:slf4j-nop", ExcludeTransitivesRule)
    withModule("org.slf4j:slf4j-simple", ExcludeTransitivesRule)
    withModule("org.subethamail:subethasmtp", ExcludeTransitivesRule)
    withModule("org.testcontainers:testcontainers", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:apache-client", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:arns", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:auth", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:aws-core", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:aws-json-protocol", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:aws-query-protocol", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:aws-xml-protocol", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:checksums", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:checksums-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:ec2", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:endpoints-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:http-auth", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:http-auth-aws", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:http-auth-aws-eventstream", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:http-auth-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:http-client-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:identity-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:imds", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:json-utils", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:metrics-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:netty-nio-client", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:profiles", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:protocol-core", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:regions", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:retries", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:retries-spi", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:s3", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:sdk-core", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:services", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:sts", ExcludeTransitivesRule)
    withModule("software.amazon.awssdk:utils", ExcludeTransitivesRule)
  }
}

toolchainManagement {
  jvm {
    javaRepositories {
      repository('bundledOracleOpendJdk') {
        resolverClass = OracleOpenJdkToolchainResolver
      }
      repository('adoptiumJdks') {
        resolverClass = AdoptiumJdkToolchainResolver
      }
      repository('archivedOracleJdks') {
        resolverClass = ArchivedOracleJdkToolchainResolver
      }
    }
  }
}

List projects = [
  'rest-api-spec',
  'docs',
  'client:rest',
  'client:sniffer',
  'client:test',
  'client:client-benchmark-noop-api-plugin',
  'client:benchmark',
  'benchmarks',
  'distribution:archives:integ-test-zip',
  'distribution:archives:windows-zip',
  'distribution:archives:darwin-tar',
  'distribution:archives:darwin-aarch64-tar',
  'distribution:archives:linux-aarch64-tar',
  'distribution:archives:linux-tar',
  'distribution:docker',
  'distribution:docker:cloud-ess-docker-export',
  'distribution:docker:cloud-ess-docker-aarch64-export',
  'distribution:docker:docker-aarch64-export',
  'distribution:docker:docker-export',
  'distribution:docker:ironbank-docker-aarch64-export',
  'distribution:docker:ironbank-docker-export',
  'distribution:docker:wolfi-docker-aarch64-export',
  'distribution:docker:wolfi-docker-export',
  'distribution:docker:cloud-ess-fips-docker-export',
  'distribution:docker:cloud-ess-fips-docker-aarch64-export',
  'distribution:packages:aarch64-deb',
  'distribution:packages:deb',
  'distribution:packages:aarch64-rpm',
  'distribution:packages:rpm',
  'distribution:bwc:major1',
  'distribution:bwc:major2',
  'distribution:bwc:major3',
  'distribution:bwc:major4',
  'distribution:bwc:minor1',
  'distribution:bwc:minor2',
  'distribution:bwc:minor3',
  'distribution:bwc:minor4',
  'distribution:bwc:main',
  'distribution:tools:java-version-checker',
  'distribution:tools:cli-launcher',
  'distribution:tools:server-cli',
  'distribution:tools:windows-service-cli',
  'distribution:tools:plugin-cli',
  'distribution:tools:keystore-cli',
  'distribution:tools:geoip-cli',
  'distribution:tools:ansi-console',
  'server',
  'test:framework',
  'test:fixtures:aws-ec2-fixture',
  'test:fixtures:aws-fixture-utils',
  'test:fixtures:aws-sts-fixture',
  'test:fixtures:azure-fixture',
  'test:fixtures:ec2-imds-fixture',
  'test:fixtures:gcs-fixture',
  'test:fixtures:hdfs-fixture',
  'test:fixtures:krb5kdc-fixture',
  'test:fixtures:minio-fixture',
  'test:fixtures:old-elasticsearch',
  'test:fixtures:s3-fixture',
  'test:fixtures:testcontainer-utils',
  'test:fixtures:geoip-fixture',
  'test:fixtures:url-fixture',
  'test:logger-usage',
  'test:test-clusters',
  'test:x-content',
  'test:yaml-rest-runner',
  'test:metadata-extractor',
  'test:immutable-collections-patch'
]

/**
 * Iterates over sub directories, looking for build.gradle, and adds a project if found
 * for that dir with the given path prefix. Note that this requires each level
 * of the dir hierarchy to have a build.gradle. Otherwise we would have to iterate
 * all files/directories in the source tree to find all projects.
 */
void addSubProjects(String path, File dir) {
  if (dir.isDirectory() == false) return;
  if (dir.name == 'buildSrc') return;
  if (new File(dir, 'build.gradle').exists() == false) return;
  if (new File(dir, 'settings.gradle').exists()) return;
  if (findProject(dir) != null) return;

  final String projectName = "${path}:${dir.name}"

  // This project has a problem with availability of Docker images after
  // release. Disabling individual tasks is tricky because it uses test
  // fixtures, so instead just skip the project entirely until we can
  // work out a way forward.
  if (projectName.equals(":qa:apm")) {
    return
  }

  include projectName
  if (path.isEmpty() || path.startsWith(':example-plugins')) {
    project(projectName).projectDir = dir
  }
  for (File subdir : dir.listFiles()) {
    addSubProjects(projectName, subdir)
  }
}

addSubProjects('', new File(rootProject.projectDir, 'libs'))
addSubProjects('', new File(rootProject.projectDir, 'modules'))
addSubProjects('', new File(rootProject.projectDir, 'plugins'))
addSubProjects('', new File(rootProject.projectDir, 'qa'))
addSubProjects('test', new File(rootProject.projectDir, 'test/external-modules'))
addSubProjects('', new File(rootProject.projectDir, 'x-pack'))
addSubProjects('', new File(rootProject.projectDir, 'x-pack/libs'))
addSubProjects('', new File(rootProject.projectDir, 'x-pack/extras/plugins'))

include projects.toArray(new String[0])

project(":libs:native:libraries").name = "native-libraries"

project(":test:external-modules").children.each { testProject ->
  testProject.name = "test-${testProject.name}"
}

// look for extra plugins for elasticsearch
File extraProjects = new File(rootProject.projectDir.parentFile, "${rootProject.projectDir.name}-extra")
if (extraProjects.exists()) {
  for (File extraProjectDir : extraProjects.listFiles()) {
    addSubProjects('', extraProjectDir)
  }
}

include 'qa:vector'

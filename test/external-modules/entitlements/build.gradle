/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the "Elastic License
 * 2.0", the "GNU Affero General Public License v3.0 only", and the "Server Side
 * Public License v 1"; you may not use this file except in compliance with, at
 * your election, the "Elastic License 2.0", the "GNU Affero General Public
 * License v3.0 only", or the "Server Side Public License, v 1".
 */
import org.elasticsearch.gradle.internal.info.BuildParams

apply plugin: 'elasticsearch.internal-java-rest-test'
// Necessary to use tests in Serverless
apply plugin: 'elasticsearch.internal-test-artifact'

group = 'org.elasticsearch.plugin'

esplugin {
  description 'A test module that triggers entitlement checks'
  classname 'org.elasticsearch.test.entitlements.EntitlementsCheckPlugin'
}

configurations {
  agentJar {
    canBeConsumed = false
  }
}

dependencies {
  agentJar(project(path: ":distribution:tools:entitlement-agent", configuration: 'entitlementAgentJar'))
  runtimeOnly(project(":distribution:tools:entitlement-runtime"))
  runtimeOnly(project(":distribution:tools:entitlement-agent"))
}

tasks.register('copyAgent', Copy) {
  into "build/agent/libs"
  from configurations.named("runtimeClasspath")
}

tasks.named('build') {
  dependsOn(copyToLib)
}

tasks.named('javaRestTest') {
  usesDefaultDistribution()
  systemProperty "tests.security.manager", "false"
  print(configurations.agentJar)
  it.onlyIf("snapshot build") { BuildParams.isSnapshotBuild() }
}

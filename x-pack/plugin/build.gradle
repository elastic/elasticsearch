import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.VersionProperties
import org.elasticsearch.gradle.internal.info.BuildParams
import org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask
import org.elasticsearch.gradle.util.GradleUtils

apply plugin: 'elasticsearch.internal-yaml-rest-test'
apply plugin: 'elasticsearch.yaml-rest-compat-test'
apply plugin: 'elasticsearch.validate-rest-spec'
apply plugin: 'elasticsearch.internal-test-artifact'

base {
  archivesName = 'x-pack'
}

dependencies {
  testImplementation project(xpackModule('core'))
  testImplementation(testArtifact(project(xpackModule('core'))))
  testImplementation(testArtifact(project(":x-pack:plugin:security:qa:service-account"), "javaRestTest"))
  testImplementation project(':test:yaml-rest-runner')
}

// let the yamlRestTests see the classpath of test
GradleUtils.extendSourceSet(project, "test", "yamlRestTest", tasks.named("yamlRestTest"))
GradleUtils.extendSourceSet(project, "test", "yamlRestCompatTest")

restResources {
  restApi {
    include '*'
  }
}

artifacts {
  restXpackTests(new File(projectDir, "src/yamlRestTest/resources/rest-api-spec/test"))
}

def restTestBlacklist = []
// TODO: fix this rest test to not depend on a hardcoded port!
restTestBlacklist.addAll(['getting_started/10_monitor_cluster_health/*'])
if (BuildParams.isSnapshotBuild() == false) {
  // these tests attempt to install basic/internal licenses signed against the dev/public.key
  // Since there is no infrastructure in place (anytime soon) to generate licenses using the production
  // private key, these tests are blacklisted in non-snapshot test runs
  restTestBlacklist.addAll(['xpack/15_basic/*', 'license/20_put_license/*', 'license/30_enterprise_license/*'])

  // TODO: Remove the following when the following features are released. These tests include new privileges only available under feature flags
  //  which require snapshot builds:
  // * Data Stream Lifecycle. manage_data_stream_lifecycle privilege is only available with dlm_feature_flag_enabled set
  // We disable these tests for snapshot builds to maintain release build coverage.
  restTestBlacklist.add('privileges/11_builtin/Test get builtin privileges')
}

tasks.withType(StandaloneRestIntegTestTask).configureEach {
  usesDefaultDistribution()
}

tasks.named("yamlRestTest").configure {
  systemProperty 'tests.rest.blacklist', restTestBlacklist.join(',')
}

tasks.register('enforceApiSpecsConvention').configure {
  def mainApiSpecs = fileTree('src/test/resources/rest-api-spec/api')
  doLast {
    if (mainApiSpecs.files) {
      throw new GradleException("There are REST specs in src/test source set. These should be moved to the :rest-api-spec project.")
    }
  }
}

tasks.register('enforceYamlTestConvention').configure {
  def mainYamlFiles = fileTree('src/test/resources/rest-api-spec/test')
  doLast {
    if (mainYamlFiles.files) {
      throw new GradleException("There are YAML tests in src/test source set. These should be moved to src/yamlRestTest.")
    }
  }
}

tasks.named("precommit").configure {
  dependsOn 'enforceYamlTestConvention', 'enforceApiSpecsConvention'
}


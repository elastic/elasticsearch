---
"Downsample index with pipeline":
  - skip:
      version: " - 8.4.99"
      reason: "rollup renamed to downsample in 8.5.0"

  - do:
      ingest.put_pipeline:
        id: "pipeline"
        body: >
          {
            "processors": [
             {
               "set" : {
                 "field" : "field",
                 "value": 42
               }
              }
            ]
          }

  - do:
      indices.create:
        index: test
        body:
          settings:
            number_of_shards: 1
            index:
              default_pipeline: "pipeline"
              final_pipeline: "pipeline"
              mode: time_series
              routing_path: [metricset, k8s.pod.uid]
              time_series:
                start_time: 2021-04-28T00:00:00Z
                end_time: 2021-04-29T00:00:00Z
          mappings:
            properties:
              "@timestamp":
                type: date
              metricset:
                type: keyword
                time_series_dimension: true
              value:
                type: double
                time_series_metric: gauge
  - do:
      bulk:
        refresh: true
        index: test
        body:
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:04.467Z", "metricset": "pod", "value": 10}'

  - do:
      search:
        index: test
        body:
          query:
            match_all: {}

  - match: { hits.total.value: 1 }
  - match: { hits.hits.0._source.field: 42 }

  - do:
      indices.put_settings:
        index: test
        body:
          index.blocks.write: true

  - do:
      indices.downsample:
        index: test
        target_index: test-downsample
        body: >
          {
            "fixed_interval": "1h"
          }

  - do:
      indices.get_settings:
        index: test

  - match: { test.settings.index.default_pipeline: "pipeline" }
  - match: { test.settings.index.final_pipeline: "pipeline" }

  - do:
      indices.get_settings:
        index: test-downsample

  - match: { test-downsample.settings.index.default_pipeline: null }
  - match: { test-downsample.settings.index.final_pipeline: null }

---
"Downsample datastream with tier preference":
  - skip:
      version: " - 8.12.99"
      reason: _tsid hashing introduced in 8.13
      features: allowed_warnings

  - do:
      allowed_warnings:
        - "index template [downsampling-template] has index patterns [test-datastream-*] matching patterns from existing older templates [global] with patterns (global => [*]); this template [downsampling-template] will take precedence during new index creation"
      indices.put_index_template:
        name: downsampling-template
        body:
          index_patterns: ["test-datastream-*"]
          template:
            settings:
              index:
                mode: time_series
                hidden: false
                routing:
                  allocation:
                    include:
                      _tier_preference: "data_warm"
                lifecycle:
                  name: dummy-lifecycle
            mappings:
              properties:
                "@timestamp":
                  type: date
                metricset:
                  type: keyword
                  time_series_dimension: true
                value:
                  type: double
                  time_series_metric: gauge
          data_stream: {}

  - do:
      indices.create_data_stream:
        name: test-datastream-downsampling
  - is_true: acknowledged

  - do:
      bulk:
        refresh: true
        index: test-datastream-downsampling
        body:
          - '{"index": {}}'
          - '{"@timestamp": "2021-04-28T18:50:04.467Z", "metricset": "pod", "value": 10}'

  - do:
      indices.get_data_stream:
        name: test-datastream-downsampling
  - set: { data_streams.0.indices.0.index_name: datastream-backing-index }

  - do:
      indices.get_settings:
        index: $datastream-backing-index
  - match: { .$datastream-backing-index.settings.index.routing.allocation.include._tier_preference: "data_warm" }
  - match: { .$datastream-backing-index.settings.index.lifecycle.name: "dummy-lifecycle" }

  - do:
      indices.put_settings:
        index: $datastream-backing-index
        body:
          index.blocks.write: true
  - is_true: acknowledged

  - do:
      indices.downsample:
        index: $datastream-backing-index
        target_index: downsample-index
        body: >
          {
            "fixed_interval": "1h"
          }
  - is_true: acknowledged

  - do:
      indices.get_settings:
        index: downsample-index
  - match: { downsample-index.settings.index.routing.allocation.include._tier_preference: "data_warm" }
    # NOTE: copied only if index is managed through ILM
  - match: { downsample-index.settings.index.lifecycle.name: null }

---
teardown:
  - do:
      ingest.delete_pipeline:
        id: "pipeline"
        ignore: 404

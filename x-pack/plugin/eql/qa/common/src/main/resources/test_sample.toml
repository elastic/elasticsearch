# Test syntax:
#
# each test starts with a [[queries]] tag and has a set of mandatory attributes:
#
# - name: string, the test name, reported in the logs in case of failure
# - query: string, the query to execute
# - expected_event_ids: the expected result of the query. Can be one of the following:
#    - an array of event IDs, (eg [1, 2, 3]): the expected event IDs returned by the query
#    - an array of arrays of event IDs (eg. [[1, 2, 3], [1, 4, 5]]): each array of IDs is a possible valid result for the query;
#      this is useful when the query is not deterministic, ie. it can return different valid results based on how the documents are indexed.
#    - an empty array [], if the query is expected to return no results
#   If the query returns multiple samples, the expected_event_ids will contain a flattened list of IDs for all the events
#   in the returned samples, eg. if the query resturns sample1=[event1(id=1), event2(id=2)] and sample2=[event3(id=3), event4(id=4)],
#   the expected_event_ids will be [1, 2, 3, 4]
# - join_keys: array, a set of join keys returned in the results. This is flattened sequence of composite join keys for all the events returned
#   eg. if the test returns two events (e1, e2) with two join keys each (eg. e1 with [joinkey1, joinkey2] and e2 with [joinkey3, joinkey4],
#   the expected join_keys value will be [joinkey1, joinkey2, joinkey3, joinkey4]
#
# in addition, the spec syntax accepts the following optional attributes (currently ignored):
# - note: string
# - description: string
# - tags: array of strings
#
# Strings can be delimited by single or double quotes. Triple single quotes can be used for multi-line strings

[[queries]]
name = "anyRulesWithOneDifferentNameKey"
query = '''
  sample by host
    [any where uptime > 0]   by os
    [any where port > 100]   by op_sys
    [any where bool == true] by os
'''
# non-deterministic, can return any of the following
expected_event_ids  = [
    [17, 26, 16,
     13, 23, 110],
    [17, 26, 16,
     110, 23, 33]
]
join_keys = ["doom","redhat",
             "farcry","win10"]

[[queries]]
name = "complexFilters"
query = '''
  sample by host
    [any where uptime > 0 and host == "doom" and (uptime > 15 or bool == true)] by os
    [any where port > 100 and ip == "10.0.0.5" or op_sys : "REDHAT"] by op_sys
    [any where bool == true] by os
'''
expected_event_ids  = [17,26,16]
join_keys = ["doom","redhat"]


[[queries]]
name = "anyRulesWithORFilters"
query = '''
  sample by bool, host
    [any where uptime > 0 or bool == false]
    [any where port > 10000 or bool == false]
'''
expected_event_ids  = [13,23,
                       17,16]
join_keys = ["false","farcry",
             "true","doom"]


[[queries]]
name = "failureEventTypeWithORFilters"
query = '''
  sample by bool, host
    [failure where uptime > 0 or bool == false]
    [any where port > 10000 or bool == false]
'''
expected_event_ids  = [17,16]
join_keys = ["true","doom"]


[[queries]]
name = "alertEventTypeRulesWithORFilters"
query = '''
  sample by bool, host
    [alert where uptime > 0 or bool == false]
    [alert where port > 10000 or bool == false]
'''
expected_event_ids  = [13,23]
join_keys = ["false","farcry"]


[[queries]]
name = "ipAsKey"
query = '''
  sample by host
    [any where bool == true] by host_ip
    [any where uptime > 0] by ip
    [any where port > 100] by ip
'''
expected_event_ids  = [36,28,11]
join_keys = ["doom","10.0.0.1"]


[[queries]]
name = "keywordAsKey"
query = '''
   sample by missing_keyword
     [success where true] by host
     [failure where host == "doom"] by host
'''
expected_event_ids  = [18,37]
join_keys = ["test","doom"]


[[queries]]
name = "simpleIpAsKey"
query = '''
  sample
    [success where true] by ip
    [alert where startsWith~(os,"win")] by host_ip
'''
expected_event_ids  = [28,31]
join_keys = ["10.0.0.1"]


[[queries]]
name = "customDateFormatAsKey_SameIndexResults"
query = '''
  sample by @timestamp_pretty
    [alert where true]
    [failure where true]
'''
expected_event_ids  = [15,17]
join_keys = ["1671235200000"]


[[queries]]
name = "customDateFormatsAsKey_DifferentIndicesResults"
query = '''
  sample by @timestamp_pretty
    [alert where true]
    [failure where op_sys == "redhat"]
'''
expected_event_ids  = [15,27]
join_keys = ["1671235200000"]


[[queries]]
name = "customDateFormatsAsKey_DifferentKeyNames"
query = '''
  sample
    [success where stringContains~(os,"10")] by date
    [failure where os == "redhat"] by @timestamp_pretty
'''
expected_event_ids  = [38,17]
join_keys = ["1671235200000"]


[[queries]]
name = "nullValueAsJoinKey"
query = '''
  sample by missing_keyword
    [alert where missing_keyword == null and id == 110]
    [alert where bool == false]
'''
expected_event_ids  = []
join_keys = []


[[queries]]
name = "optionalFieldAsKeyAndFirstFilter"
query = '''
  sample by ?x
    [failure where ?x == null and id == 17]
    [failure where id == 27]
    [any where id == 37]
'''
expected_event_ids  = [17,27,37]
join_keys = ["null"]


[[queries]]
name = "optionalFieldAsKeyAndSecondFilter"
query = '''
  sample by ?x
    [any where id == 11]
    [any where ?x == null]
'''
expected_event_ids  = [11,12]
join_keys = ["null"]


[[queries]]
name = "optionalFieldAsQueryKeys"
query = '''
  sample by ?x
    [success where id == 18] by ?y
    [failure where id == 17] by ?z
'''
expected_event_ids  = [18,17]
join_keys = ["null","null"]


[[queries]]
name = "optionalFieldAsKeyAndMultipleConditions"
query = '''
  sample by ?x, ?y
    [failure where (?x == null or ?y == null) and id == 17]
    [success where (?y == null and ?x == null) and id == 18]
'''
expected_event_ids  = [17,18]
join_keys = ["null","null"]




[[queries]]
name = "optionalFieldAsQueryKeysOnly"
query = '''
  sample by host
    [success where id == 38] by ?z
    [success where ?x == ?y and id == 28] by ?y
    [alert where id == 11] by ?x
'''
expected_event_ids  = [38,28,11]
join_keys = ["doom","null"]


# This one is noteworthy because "os" is present in two indices (sample1 and sample3) but it's missing in a third one (sample2), where
# the corresponding field is named "op_sys".
# The result shows join keys with "null" but also with non-null values.
[[queries]]
name = "allKeysOptional"
query = '''
  sample by ?host, ?os
    [success where true]
    [alert where true]
'''
# this test is not completely deterministic, it can return any of the following event id combinations
expected_event_ids  = [
    [29, 24,
     28, 21,
     18, 11],
    [29, 24,
     28, 26,
     18, 11]
]
join_keys = ["GTA","null",
             "doom","null",
             "doom","win10"]


[[queries]]
name = "oneKeyOptional_1"
query = '''
  sample by ?host, os
    [success where true]
    [alert where true]
'''
expected_event_ids  = [18,11]
join_keys = ["doom","win10"]


[[queries]]
name = "oneKeyOptional_2"
query = '''
  sample by host, ?os
    [success where true]
    [alert where true and id == 21 or id == 24 or id == 11]
'''
expected_event_ids  = [29,24,
                       28,21,
                       18,11]
join_keys = ["GTA","null",
             "doom","null",
             "doom","win10"]


[[queries]]
name = "noOptionalKeys"
query = '''
  sample by host, os
    [success where true]
    [alert where true]
'''
expected_event_ids  = [18,11]
join_keys = ["doom","win10"]


[[queries]]
name = "size0"
size = 0
query = '''
  sample by host, ?os
    [success where true]
    [alert where true and id == 21 or id == 24 or id == 11]
'''
expected_event_ids  = []
join_keys = []


[[queries]]
name = "size2"
size = 2
query = '''
  sample by host, ?os
    [success where true]
    [alert where true and id == 21 or id == 24 or id == 11]
'''
expected_event_ids  = [29,24,
    28,21]
join_keys = ["GTA","null",
    "doom","null"]


[[queries]]
name = "size3"
size = 3
query = '''
  sample by host, ?os
    [success where true]
    [alert where true and id == 21 or id == 24 or id == 11]
'''
expected_event_ids  = [29,24,
    28,21,
    18,11]
join_keys = ["GTA","null",
    "doom","null",
    "doom","win10"]


[[queries]]
name = "sizeBig"
size = 500
query = '''
  sample by host, ?os
    [success where true]
    [alert where true and id == 21 or id == 24 or id == 11]
'''
expected_event_ids  = [29,24,
    28,21,
    18,11]
join_keys = ["GTA","null",
    "doom","null",
    "doom","win10"]



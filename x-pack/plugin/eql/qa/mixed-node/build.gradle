apply plugin: 'elasticsearch.legacy-java-rest-test'
apply plugin: 'elasticsearch.bwc-test'

import org.elasticsearch.gradle.VersionProperties
import org.elasticsearch.gradle.internal.info.BuildParams
import org.elasticsearch.gradle.testclusters.StandaloneRestIntegTestTask

dependencies {
    javaRestTestImplementation project(':x-pack:qa')
    javaRestTestImplementation(project(xpackModule('ql:test-fixtures')))
    javaRestTestImplementation project(path: xpackModule('eql'), configuration: 'default')
}

tasks.named("javaRestTest").configure { enabled = false }

BuildParams.bwcVersions.withWireCompatible(v -> v.onOrAfter("7.10.0") &&
        v != VersionProperties.getElasticsearchVersion()) { bwcVersion, baseName ->
    def cluster = testClusters.register(baseName) {
        versions = [bwcVersion.toString(), project.version]
        numberOfNodes = 3
        testDistribution = 'DEFAULT'
        setting 'xpack.security.enabled', 'false'
        setting 'xpack.watcher.enabled', 'false'
        setting 'xpack.ml.enabled', 'false'
        setting 'xpack.eql.enabled', 'true'
        setting 'xpack.license.self_generated.type', 'trial'
        // for debugging purposes
        // setting 'logger.org.elasticsearch.xpack.eql.plugin.TransportEqlSearchAction', 'TRACE'
    }

    tasks.register("${baseName}#mixedClusterTest", StandaloneRestIntegTestTask) {
        useCluster cluster
        mustRunAfter("precommit")
        classpath = sourceSets.javaRestTest.runtimeClasspath
        testClassesDirs = sourceSets.javaRestTest.output.classesDirs
        doFirst {
            // Getting the endpoints causes a wait for the cluster
            println "Endpoints are: ${-> testClusters."${baseName}".allHttpSocketURI.join(",")}"
            println "Upgrading one node to create a mixed cluster"
            cluster.get().nextNodeToNextVersion()

            println "Upgrade complete, endpoints are: ${-> testClusters.named(baseName).get().allHttpSocketURI.join(",")}"
            nonInputProperties.systemProperty('tests.rest.cluster', cluster.map(c -> c.allHttpSocketURI.join(",")))
            nonInputProperties.systemProperty('tests.clustername', baseName)
        }
        systemProperty 'tests.bwc_nodes_version', bwcVersion.toString().replace('-SNAPSHOT', '')
        systemProperty 'tests.new_nodes_version', project.version.toString().replace('-SNAPSHOT', '')
        onlyIf("BWC tests disabled") { project.bwc_tests_enabled }
    }

    tasks.register(bwcTaskName(bwcVersion)) {
        dependsOn "${baseName}#mixedClusterTest"
    }
}

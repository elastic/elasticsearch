apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.string-templates'

dependencies {
  compileOnly project(':server')
  compileOnly project('ann')
  annotationProcessor project('gen')

  testImplementation project(':test:framework')
  testImplementation(project(xpackModule('ql')))
}

tasks.named("compileJava").configure {
  options.compilerArgs.addAll(["-s", "${projectDir}/src/main/generated"])
}

tasks.named('checkstyleMain').configure {
  source = "src/main/java"
  excludes = [ "**/*.java.st" ]
}

tasks.named("spotlessJava") { dependsOn stringTemplates }

spotless {
  java {
    /*
     * Generated files go here.
     */
    targetExclude "src/main/generated/**/*.java"
  }
}

def prop(Type, type, TYPE, BYTES, Array) {
  return [
    "Type" : Type,
    "type" : type,
    "TYPE" : TYPE,
    "BYTES" : BYTES,
    "Array" : Array,

    "int" : type == "int" ? "true" : "",
    "long" : type == "long" ? "true" : "",
    "double" : type == "double" ? "true" : "",
    "BytesRef" : type == "BytesRef" ? "true" : "",
    "boolean" : type == "boolean" ? "true" : "",
  ]
}

tasks.named('stringTemplates').configure {
  var intProperties      = prop("Int", "int", "INT", "Integer.BYTES", "IntArray")
  var longProperties     = prop("Long", "long", "LONG", "Long.BYTES", "LongArray")
  var doubleProperties   = prop("Double", "double", "DOUBLE", "Double.BYTES", "DoubleArray")
  var bytesRefProperties = prop("BytesRef", "BytesRef", "BYTES_REF", "org.apache.lucene.util.RamUsageEstimator.NUM_BYTES_OBJECT_REF", "")
  var booleanProperties  = prop("Boolean", "boolean", "BOOLEAN", "Byte.BYTES", "BitArray")
  // primitive vectors
  File vectorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-Vector.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  vectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntVector.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  vectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongVector.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  vectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleVector.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  vectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefVector.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  vectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanVector.java"
  }
  // array vector implementations
  File arrayVectorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-ArrayVector.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  arrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntArrayVector.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  arrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongArrayVector.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  arrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleArrayVector.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  arrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefArrayVector.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  arrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanArrayVector.java"
  }
  // BigArray vector implementations
  File bigArrayVectorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-BigArrayVector.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  bigArrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntBigArrayVector.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  bigArrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongBigArrayVector.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  bigArrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleBigArrayVector.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  bigArrayVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanBigArrayVector.java"
  }
  // constant vectors
  File constantVectorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-ConstantVector.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  constantVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/ConstantIntVector.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  constantVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/ConstantLongVector.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  constantVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/ConstantDoubleVector.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  constantVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/ConstantBytesRefVector.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  constantVectorInputFile
    it.outputFile = "org/elasticsearch/compute/data/ConstantBooleanVector.java"
  }
  // primitive blocks
  File blockInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-Block.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  blockInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntBlock.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  blockInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongBlock.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  blockInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleBlock.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  blockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefBlock.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  blockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanBlock.java"
  }
  // array blocks
  File arrayBlockInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-ArrayBlock.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  arrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntArrayBlock.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  arrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongArrayBlock.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  arrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleArrayBlock.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  arrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefArrayBlock.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  arrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanArrayBlock.java"
  }
  // BigArray block implementations
  File bigArrayBlockInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-BigArrayBlock.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  bigArrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntBigArrayBlock.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  bigArrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongBigArrayBlock.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  bigArrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleBigArrayBlock.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  bigArrayBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanBigArrayBlock.java"
  }
  // vector blocks
  File vectorBlockInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-VectorBlock.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  vectorBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntVectorBlock.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  vectorBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongVectorBlock.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  vectorBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleVectorBlock.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  vectorBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefVectorBlock.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  vectorBlockInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanVectorBlock.java"
  }
  // block builders
  File blockBuildersInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-BlockBuilder.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  blockBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntBlockBuilder.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  blockBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongBlockBuilder.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  blockBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleBlockBuilder.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  blockBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefBlockBuilder.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  blockBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanBlockBuilder.java"
  }
  // vector builders
  File vectorBuildersInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-VectorBuilder.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  vectorBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntVectorBuilder.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  vectorBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongVectorBuilder.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  vectorBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleVectorBuilder.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  vectorBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/BytesRefVectorBuilder.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  vectorBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanVectorBuilder.java"
  }
  File vectorFixedBuildersInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/data/X-VectorFixedBuilder.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  vectorFixedBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/IntVectorFixedBuilder.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  vectorFixedBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/LongVectorFixedBuilder.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  vectorFixedBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/DoubleVectorFixedBuilder.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  vectorFixedBuildersInputFile
    it.outputFile = "org/elasticsearch/compute/data/BooleanVectorFixedBuilder.java"
  }
  File stateInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/aggregation/X-State.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  stateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/IntState.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  stateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/LongState.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  stateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/DoubleState.java"
  }
  File arrayStateInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/aggregation/X-ArrayState.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  arrayStateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/IntArrayState.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  arrayStateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/LongArrayState.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  arrayStateInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/DoubleArrayState.java"
  }
  File valuesAggregatorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/aggregation/X-ValuesAggregator.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  valuesAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/ValuesIntAggregator.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  valuesAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/ValuesLongAggregator.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  valuesAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/ValuesDoubleAggregator.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  valuesAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/ValuesBytesRefAggregator.java"
  }

  File rateAggregatorInputFile = file("src/main/java/org/elasticsearch/compute/aggregation/X-RateAggregator.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  rateAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/RateIntAggregator.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  rateAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/RateLongAggregator.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  rateAggregatorInputFile
    it.outputFile = "org/elasticsearch/compute/aggregation/RateDoubleAggregator.java"
  }

  File multivalueDedupeInputFile = file("src/main/java/org/elasticsearch/compute/operator/X-MultivalueDedupe.java.st")
  template {
    it.properties = intProperties
    it.inputFile =  multivalueDedupeInputFile
    it.outputFile = "org/elasticsearch/compute/operator/MultivalueDedupeInt.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  multivalueDedupeInputFile
    it.outputFile = "org/elasticsearch/compute/operator/MultivalueDedupeLong.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  multivalueDedupeInputFile
    it.outputFile = "org/elasticsearch/compute/operator/MultivalueDedupeDouble.java"
  }
  template {
    it.properties = bytesRefProperties
    it.inputFile =  multivalueDedupeInputFile
    it.outputFile = "org/elasticsearch/compute/operator/MultivalueDedupeBytesRef.java"
  }
  File keyExtractorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/operator/topn/X-KeyExtractor.java.st")
  template {
    it.properties = bytesRefProperties
    it.inputFile =  keyExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/KeyExtractorForBytesRef.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  keyExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/KeyExtractorForBoolean.java"
  }
  template {
    it.properties = intProperties
    it.inputFile =  keyExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/KeyExtractorForInt.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  keyExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/KeyExtractorForLong.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  keyExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/KeyExtractorForDouble.java"
  }
  File valueExtractorInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/operator/topn/X-ValueExtractor.java.st")
  template {
    it.properties = bytesRefProperties
    it.inputFile =  valueExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ValueExtractorForBytesRef.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  valueExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ValueExtractorForBoolean.java"
  }
  template {
    it.properties = intProperties
    it.inputFile =  valueExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ValueExtractorForInt.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  valueExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ValueExtractorForLong.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  valueExtractorInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ValueExtractorForDouble.java"
  }
  File resultBuilderInputFile = new File("${projectDir}/src/main/java/org/elasticsearch/compute/operator/topn/X-ResultBuilder.java.st")
  template {
    it.properties = bytesRefProperties
    it.inputFile =  resultBuilderInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ResultBuilderForBytesRef.java"
  }
  template {
    it.properties = booleanProperties
    it.inputFile =  resultBuilderInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ResultBuilderForBoolean.java"
  }
  template {
    it.properties = intProperties
    it.inputFile =  resultBuilderInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ResultBuilderForInt.java"
  }
  template {
    it.properties = longProperties
    it.inputFile =  resultBuilderInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ResultBuilderForLong.java"
  }
  template {
    it.properties = doubleProperties
    it.inputFile =  resultBuilderInputFile
    it.outputFile = "org/elasticsearch/compute/operator/topn/ResultBuilderForDouble.java"
  }
}

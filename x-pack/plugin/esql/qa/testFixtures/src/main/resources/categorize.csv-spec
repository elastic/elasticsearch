standard aggs
required_capability: categorize_v2

FROM sample_data
  | STATS count=COUNT(),
          sum=SUM(event_duration),
          avg=AVG(event_duration),
          count_distinct=COUNT_DISTINCT(event_duration)
       BY category=CATEGORIZE(message)
  | SORT count DESC, category
;

count:long | sum:long |     avg:double     | count_distinct:long | category:keyword
         3 |  7971589 | 2657196.3333333335 |                   3 | .*?Connected.+?to.*?
         3 | 14027356 | 4675785.333333333  |                   3 | .*?Connection.+?error.*?
         1 |  1232382 | 1232382.0          |                   1 | .*?Disconnected.*?
;

values aggs
required_capability: categorize_v2

FROM sample_data
  | STATS values=MV_SORT(VALUES(message)),
          top=TOP(event_duration, 2, "DESC")
       BY category=CATEGORIZE(message)
  | SORT category
;

values:keyword                                                        |      top:long      | category:keyword
[Connected to 10.1.0.1, Connected to 10.1.0.2, Connected to 10.1.0.3] | [3450233, 2764889] | .*?Connected.+?to.*?
[Connection error]                                                    | [8268153, 5033755] | .*?Connection.+?error.*?
[Disconnected]                                                        |           1232382  | .*?Disconnected.*?
;

mv
required_capability: categorize_v2

FROM mv_sample_data
  | STATS COUNT(), SUM(event_duration) BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | SUM(event_duration):long | category:keyword
           7 |                 23231327 | .*?Banana.*?
           3 |                  7971589 | .*?Connected.+?to.*?
           3 |                 14027356 | .*?Connection.+?error.*?
           1 |                  1232382 | .*?Disconnected.*?
;

row mv
required_capability: categorize_v2

ROW message = ["connected to a", "connected to b", "disconnected"], str = ["a", "b", "c"]
  | STATS COUNT(), VALUES(str) BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | VALUES(str):keyword | category:keyword
           2 | [a, b, c]           | .*?connected.+?to.*?
           1 | [a, b, c]           | .*?disconnected.*?
;

with multiple indices
required_capability: categorize_v2
required_capability: union_types

FROM sample_data*
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:keyword
          12 | .*?Connected.+?to.*?
          12 | .*?Connection.+?error.*?
           4 | .*?Disconnected.*?
;

mv with many values
required_capability: categorize_v2

FROM employees
  | STATS COUNT() BY category=CATEGORIZE(job_positions)
  | SORT category
  | LIMIT 5
;

COUNT():long | category:keyword
           18 | .*?Accountant.*?
           13 | .*?Architect.*?
           11 | .*?Business.+?Analyst.*?
           13 | .*?Data.+?Scientist.*?
           10 | .*?Head.+?Human.+?Resources.*?
;

# Throws when calling AbstractCategorizeBlockHash.seenGroupIds() - Requires nulls support?
mv with many values-Ignore
required_capability: categorize_v2

FROM employees
  | STATS SUM(languages) BY category=CATEGORIZE(job_positions)
  | SORT category DESC
  | LIMIT 3
;

SUM(languages):integer | category:keyword
                    43 | .*?Accountant.*?
                    46 | .*?Architect.*?
                    35 | .*?Business.+?Analyst.*?
;

mv via eval
required_capability: categorize_v2

FROM sample_data
  | EVAL message = MV_APPEND(message, "Banana")
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:keyword
           7 | .*?Banana.*?
           3 | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?
;

mv via eval const
required_capability: categorize_v2

FROM sample_data
  | EVAL message = ["Banana", "Bread"]
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:keyword
           7 | .*?Banana.*?
           7 | .*?Bread.*?
;

mv via eval const without aliases
required_capability: categorize_v2

FROM sample_data
  | EVAL message = ["Banana", "Bread"]
  | STATS COUNT() BY CATEGORIZE(message)
  | SORT `CATEGORIZE(message)`
;

COUNT():long | CATEGORIZE(message):keyword
           7 | .*?Banana.*?
           7 | .*?Bread.*?
;

mv const in parameter
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY c = CATEGORIZE(["Banana", "Bread"])
  | SORT c
;

COUNT():long | c:keyword
           7 | .*?Banana.*?
           7 | .*?Bread.*?
;

agg alias shadowing
required_capability: categorize_v2

FROM sample_data
  | STATS c = COUNT() BY c = CATEGORIZE(["Banana", "Bread"])
  | SORT c
;

warning:Line 2:9: Field 'c' shadowed by field at line 2:24

c:keyword
.*?Banana.*?
.*?Bread.*?
;

chained aggregations using categorize
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(message)
  | STATS COUNT() BY category=CATEGORIZE(category)
  | SORT category
;

COUNT():long | category:keyword
           1 | .*?\.\*\?Connected\.\+\?to\.\*\?.*?
           1 | .*?\.\*\?Connection\.\+\?error\.\*\?.*?
           1 | .*?\.\*\?Disconnected\.\*\?.*?
;

stats without aggs
required_capability: categorize_v2

FROM sample_data
  | STATS BY category=CATEGORIZE(message)
  | SORT category
;

category:keyword
.*?Connected.+?to.*?
.*?Connection.+?error.*?
.*?Disconnected.*?
;

text field
required_capability: categorize_v2

FROM hosts
  | STATS COUNT() BY category=CATEGORIZE(host_group)
  | SORT category
;

COUNT():long | category:keyword
           2 | .*?DB.+?servers.*?
           2 | .*?Gateway.+?instances.*?
           5 | .*?Kubernetes.+?cluster.*?
;

on TO_UPPER
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(TO_UPPER(message))
  | SORT category
;

COUNT():long | category:keyword
           3 | .*?CONNECTED.+?TO.*?
           3 | .*?CONNECTION.+?ERROR.*?
           1 | .*?DISCONNECTED.*?
;

on CONCAT
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(CONCAT(message, " banana"))
  | SORT category
;

COUNT():long | category:keyword
           3 | .*?Connected.+?to.+?banana.*?
           3 | .*?Connection.+?error.+?banana.*?
           1 | .*?Disconnected.+?banana.*?
;

on CONCAT with unicode
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(CONCAT(message, " üëçüèΩüòä"))
  | SORT category
;

COUNT():long | category:keyword
           3 | .*?Connected.+?to.+?üëçüèΩüòä.*?
           3 | .*?Connection.+?error.+?üëçüèΩüòä.*?
           1 | .*?Disconnected.+?üëçüèΩüòä.*?
;

on REVERSE(CONCAT())
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(REVERSE(CONCAT(message, " üëçüèΩüòä")))
  | SORT category
;

COUNT():long | category:keyword
           1 | .*?üòäüëçüèΩ.+?detcennocsiD.*?
           3 | .*?üòäüëçüèΩ.+?ot.+?detcennoC.*?
           3 | .*?üòäüëçüèΩ.+?rorre.+?noitcennoC.*?
;

and then TO_LOWER
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(message)
  | EVAL category=TO_LOWER(category)
  | SORT category
;

COUNT():long | category:keyword
           3 | .*?connected.+?to.*?
           3 | .*?connection.+?error.*?
           1 | .*?disconnected.*?
;

# Throws NPE - Requires nulls support
on const empty string-Ignore
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE("")
  | SORT category
;

COUNT():long | category:keyword
           7 | .*?.*?
;

# Throws NPE - Requires nulls support
on const empty string from eval-Ignore
required_capability: categorize_v2

FROM sample_data
  | EVAL x = ""
  | STATS COUNT() BY category=CATEGORIZE(x)
  | SORT category
;

COUNT():long | category:keyword
           7 | .*?.*?
;

# Doesn't give the correct results - Requires nulls support
on null-Ignore
required_capability: categorize_v2

FROM sample_data
  | EVAL x = null
  | STATS COUNT() BY category=CATEGORIZE(x)
  | SORT category
;

COUNT():long | category:keyword
           7 | null
;

# Doesn't give the correct results - Requires nulls support
on null string-Ignore
required_capability: categorize_v2

FROM sample_data
  | EVAL x = null::string
  | STATS COUNT() BY category=CATEGORIZE(x)
  | SORT category
;

COUNT():long | category:keyword
           7 | null
;

filtering out all data
required_capability: categorize_v2

FROM sample_data
  | WHERE @timestamp < "2023-10-23T00:00:00Z"
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:keyword
;

filtering out all data with constant
required_capability: categorize_v2

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(message)
  | WHERE false
;

COUNT():long | category:keyword
;

drop output columns
required_capability: categorize_v2

FROM sample_data
  | STATS count=COUNT() BY category=CATEGORIZE(message)
  | EVAL x=1
  | DROP count, category
;

x:integer
1
1
1
;

category value processing
required_capability: categorize_v2

ROW message = ["connected to a", "connected to b", "disconnected"]
  | STATS COUNT() BY category=CATEGORIZE(message)
  | EVAL category = TO_UPPER(category)
  | SORT category
;

COUNT():long | category:keyword
           2 | .*?CONNECTED.+?TO.*?
           1 | .*?DISCONNECTED.*?
;

row aliases
required_capability: categorize_v2

ROW message = "connected to a"
  | EVAL x = message
  | STATS COUNT() BY category=CATEGORIZE(x)
  | EVAL y = category
  | SORT y
;

COUNT():long | category:keyword         | y:keyword
           1 | .*?connected.+?to.+?a.*? | .*?connected.+?to.+?a.*?
;

from aliases
required_capability: categorize_v2

FROM sample_data
  | EVAL x = message
  | STATS COUNT() BY category=CATEGORIZE(x)
  | EVAL y = category
  | SORT y
;

COUNT():long | category:keyword         | y:keyword
           3 | .*?Connected.+?to.*?     | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*? | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?       | .*?Disconnected.*?
;

row aliases with keep
required_capability: categorize_v2

ROW message = "connected to a"
  | EVAL x = message
  | KEEP x
  | STATS COUNT() BY category=CATEGORIZE(x)
  | EVAL y = category
  | KEEP `COUNT()`, y
  | SORT y
;

COUNT():long | y:keyword
           1 | .*?connected.+?to.+?a.*?
;

from aliases with keep
required_capability: categorize_v2

FROM sample_data
  | EVAL x = message
  | KEEP x
  | STATS COUNT() BY category=CATEGORIZE(x)
  | EVAL y = category
  | KEEP `COUNT()`, y
  | SORT y
;

COUNT():long | y:keyword
           3 | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?
;

row rename
required_capability: categorize_v2

ROW message = "connected to a"
  | RENAME message as x
  | STATS COUNT() BY category=CATEGORIZE(x)
  | RENAME category as y
  | SORT y
;

COUNT():long | y:keyword
           1 | .*?connected.+?to.+?a.*?
;

from rename
required_capability: categorize_v2

FROM sample_data
  | RENAME message as x
  | STATS COUNT() BY category=CATEGORIZE(x)
  | RENAME category as y
  | SORT y
;

COUNT():long | y:keyword
           3 | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?
;

row drop
required_capability: categorize_v2

ROW message = "connected to a"
  | STATS c = COUNT() BY category=CATEGORIZE(message)
  | DROP category
  | SORT c
;

c:long
1
;

from drop
required_capability: categorize_v2

FROM sample_data
  | STATS c = COUNT() BY category=CATEGORIZE(message)
  | DROP category
  | SORT c
;

c:long
1
3
3
;

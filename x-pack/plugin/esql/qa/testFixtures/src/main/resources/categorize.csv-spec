standard aggs
required_capability: categorize

FROM sample_data
  | STATS count=COUNT(),
          sum=SUM(event_duration),
          avg=AVG(event_duration),
          count_distinct=COUNT_DISTINCT(event_duration)
       BY category=CATEGORIZE(message)
  | SORT count DESC, category
;

count:long | sum:long |     avg:double     | count_distinct:long | category:category
         3 |  7971589 | 2657196.3333333335 |                   3 | .*?Connected.+?to.*?
         3 | 14027356 | 4675785.333333333  |                   3 | .*?Connection.+?error.*?
         1 |  1232382 | 1232382.0          |                   1 | .*?Disconnected.*?
;

values aggs
required_capability: categorize

FROM sample_data
  | STATS values=MV_SORT(VALUES(message)),
          top=TOP(event_duration, 2, "DESC")
       BY category=CATEGORIZE(message)
  | SORT category
;

values:keyword                                                        |      top:long      | category:category
[Connected to 10.1.0.1, Connected to 10.1.0.2, Connected to 10.1.0.3] | [3450233, 2764889] | .*?Connected.+?to.*?
[Connection error]                                                    | [8268153, 5033755] | .*?Connection.+?error.*?
[Disconnected]                                                        |           1232382  | .*?Disconnected.*?
;

mv
required_capability: categorize

FROM sample_data_mv
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:category
           7 | .*?Banana.*?
           3 | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?
;

row mv
required_capability: categorize

ROW message = ["connected to a", "connected to b", "disconnected"]
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:category
           2 | .*?connected.+?to.*?
           1 | .*?disconnected.*?
;

mv via eval
required_capability: categorize

FROM sample_data
  | EVAL message = MV_APPEND(message, "Banana")
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:category
           7 | .*?Banana.*?
           3 | .*?Connected.+?to.*?
           3 | .*?Connection.+?error.*?
           1 | .*?Disconnected.*?
;

mv via eval const
required_capability: categorize

FROM sample_data
  | EVAL message = ["Banana", "Bread"]
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:category
           7 | .*?Banana.*?
           7 | .*?Bread.*?
;

on TO_UPPER
required_capability: categorize

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(TO_UPPER(message))
  | SORT category
;

COUNT():long | category:category
           3 | .*?CONNECTED.+?TO.*?
           3 | .*?CONNECTION.+?ERROR.*?
           1 | .*?DISCONNECTED.*?
;

on CONCAT
required_capability: categorize

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(CONCAT(message, " banana"))
  | SORT category
;

COUNT():long | category:category
           3 | .*?Connected.+?to.+?banana.*?
           3 | .*?Connection.+?error.+?banana.*?
           1 | .*?Disconnected.+?banana.*?
;

on CONCAT with unicode
required_capability: categorize

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(CONCAT(message, " üëçüèΩüòä"))
  | SORT category
;

COUNT():long | category:category
           3 | .*?Connected.+?to.+?üëçüèΩüòä.*?
           3 | .*?Connection.+?error.+?üëçüèΩüòä.*?
           1 | .*?Disconnected.+?üëçüèΩüòä.*?
;

on REVERSE(CONCAT())
required_capability: categorize
# NOCOMIT needs fn_reverse_grapheme

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(REVERSE(CONCAT(message, " üëçüèΩüòä")))
  | SORT category
;

COUNT():long | category:category
           1 | .*?üòäüëçüèΩ.+?detcennocsiD.*?
           3 | .*?üòäüëçüèΩ.+?ot.+?detcennoC.*?
           3 | .*?üòäüëçüèΩ.+?rorre.+?noitcennoC.*?
;

and then TO_LOWER-Ignore
required_capability: categorize

FROM sample_data
  | STATS COUNT() BY category=CATEGORIZE(message)
  | EVAL category=TO_LOWER(category)
  | SORT category
;

COUNT():long | category:category
           3 | .*?connected.+?to.*?
           3 | .*?connection.+?error.*?
           1 | .*?disconnected.*?
;

on null
required_capability: categorize

FROM sample_data
  | EVAL x = null
  | STATS COUNT() BY category=CATEGORIZE(x)
  | SORT category
;

COUNT():long | category:category
;

on null string
required_capability: categorize

FROM sample_data
  | EVAL x = null::string
  | STATS COUNT() BY category=CATEGORIZE(x)
  | SORT category
;

COUNT():long | category:category
;

filtering out all data
required_capability: categorize

FROM sample_data
  | WHERE @timestamp < "2023-10-23T00:00:00Z"
  | STATS COUNT() BY category=CATEGORIZE(message)
  | SORT category
;

COUNT():long | category:category
;

drop output columns
required_capability: categorize

FROM sample_data
  | STATS count=COUNT() BY category=CATEGORIZE(message)
  | EVAL x=1
  | DROP count, category
;

x:integer
1
1
1
;

twoConditionsWithDefault
from employees
| sort emp_no
| eval type = case(
    languages <= 1, "monolingual",
    languages <= 2, "bilingual",
     "polyglot")
| keep emp_no, type
| limit 10;

emp_no:integer | type:keyword
10001          |bilingual      
10002          |polyglot       
10003          |polyglot       
10004          |polyglot       
10005          |monolingual    
10006          |polyglot       
10007          |polyglot       
10008          |bilingual      
10009          |monolingual    
10010          |polyglot       
;

singleCondition
from employees
| sort emp_no
| eval g = case(gender == "F", true)
| keep gender, g
| limit 10;

gender:keyword |g:boolean
M              |null           
F              |true           
M              |null           
M              |null           
M              |null           
F              |true           
F              |true           
M              |null           
F              |true           
null           |null           
;

conditionIsNull
from employees 
| sort emp_no
| eval g = case(
    gender == "F", 1,
    languages > 1, 2,
    3) 
| keep gender, languages, g 
| limit 25;

gender:keyword |languages:integer|g:integer
M              |2                |2              
F              |5                |1              
M              |4                |2              
M              |5                |2              
M              |1                |3              
F              |3                |1              
F              |4                |1              
M              |2                |2              
F              |1                |1              
null           |4                |2
null           |5                |2
null           |5                |2
null           |1                |3
null           |5                |2
null           |5                |2
null           |2                |2
null           |2                |2
null           |2                |2
null           |1                |3
M              |null             |3
M              |null             |3
M              |null             |3
F              |null             |1              
F              |null             |1              
M              |null             |3
;

nullValue
from employees
| sort emp_no
| eval g = case(gender == "F", 1 + null, 10)
| keep gender, g
| limit 5;

gender:keyword |g:integer
M              |10           
F              |null           
M              |10           
M              |10           
M              |10           
;

docsCaseSuccessRate
// tag::docsCaseSuccessRate[]
FROM sample_data
| EVAL successful = CASE(
    STARTS_WITH(message, "Connected to"), 1,
    message == "Connection error", 0
  )
| STATS success_rate = AVG(successful)
// end::docsCaseSuccessRate[]
;

// tag::docsCaseSuccessRate-result[]
success_rate:double
0.5
// end::docsCaseSuccessRate-result[]
;

docsCaseHourlyErrorRate
// tag::docsCaseHourlyErrorRate[]
FROM sample_data
| EVAL error = CASE(message LIKE "*error*", 1, 0)
| EVAL hour = DATE_TRUNC(1 hour, @timestamp)
| STATS error_rate = AVG(error) by hour
| SORT hour
// end::docsCaseHourlyErrorRate[]
;

// tag::docsCaseHourlyErrorRate-result[]
error_rate:double | hour:date
0.0            |2023-10-23T12:00:00.000Z
0.6            |2023-10-23T13:00:00.000Z
// end::docsCaseHourlyErrorRate-result[]
;


nullOnMultivaluesMathOperation
required_feature: esql.disable_nullable_opts

ROW a = 5, b = [ 1, 2 ]| EVAL sum = a + b| LIMIT 1 |  WHERE sum IS NULL;
warning:Line 1:37: evaluation of [a + b] failed, treating result as null. Only first 20 failures recorded.
warning:Line 1:37: java.lang.IllegalArgumentException: single-value function encountered multi-value

a:integer | b:integer | sum:integer
5         | [1, 2]    | null
;


notNullOnMultivaluesMathOperation
required_feature: esql.disable_nullable_opts

ROW a = 5, b = [ 1, 2 ]| EVAL sum = a + b| LIMIT 1 |  WHERE sum IS NOT NULL;
warning:Line 1:37: evaluation of [a + b] failed, treating result as null. Only first 20 failures recorded.
warning:Line 1:37: java.lang.IllegalArgumentException: single-value function encountered multi-value

a:integer | b:integer | sum:integer
;


nullOnMultivaluesComparisonOperation
required_feature: esql.disable_nullable_opts

ROW a = 5, b = [ 1, 2 ]| EVAL same = a == b| LIMIT 1 |  WHERE same IS NULL;

a:integer | b:integer | same:boolean
5         | [1, 2]    | null
;


notNullOnMultivaluesComparisonOperation
required_feature: esql.disable_nullable_opts

ROW a = 5, b = [ 1, 2 ]| EVAL same = a == b| LIMIT 1 |  WHERE same IS NOT NULL;

a:integer | b:integer | same:boolean
;


notNullOnMultivaluesComparisonOperationWithPartialMatch
required_feature: esql.disable_nullable_opts

ROW a = 5, b = [ 5, 2 ]| EVAL same = a == b| LIMIT 1 |  WHERE same IS NOT NULL;

a:integer | b:integer | same:boolean
;

###############################################
# Tests for DecayLinear function
#

intLinear
required_capability: decay_function

ROW value = 5, origin = 10, scale = 10 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.75
;

intExp
required_capability: decay_function

ROW value = 5, origin = 10, scale = 10 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0, "decay": 0.5, "type": "exp"}) 
| KEEP decay_result;

decay_result:double
0.7071067811865475
;

intGauss
required_capability: decay_function

ROW value = 5, origin = 10, scale = 10 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0, "decay": 0.5, "type": "gauss"}) 
| KEEP decay_result;

decay_result:double
0.8408964152537146
;

intLinearWithOffset
required_capability: decay_function

ROW value = 95, origin = 100, scale = 50 
| EVAL decay_result = decay(value, origin, scale, {"offset": 10, "decay": 0.3, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
1.0
;

intExpWithOffset
required_capability: decay_function

ROW value = 120, origin = 100, scale = 50 
| EVAL decay_result = decay(value, origin, scale, {"offset": 5, "decay": 0.3, "type": "exp"}) 
| KEEP decay_result;

decay_result:double
0.6968453019359488
;

intGaussWithOffset
required_capability: decay_function

ROW value = 120, origin = 100, scale = 50 
| EVAL decay_result = decay(value, origin, scale, {"offset": 5, "decay": 0.3, "type": "gauss"}) 
| KEEP decay_result;

decay_result:double
0.8973067049097825
;

intWithoutOptions
required_capability: decay_function

ROW value = 5, origin = 10, scale = 10 
| EVAL decay_result = decay(value, origin, scale) 
| KEEP decay_result;

decay_result:double
0.75
;

intOnlyWithOffset
required_capability: decay_function

ROW value = 5, origin = 10, scale = 10 
| EVAL decay_result = decay(value, origin, scale, {"offset": 100}) 
| KEEP decay_result;

decay_result:double
1.0
;

doubleLinear
required_capability: decay_function

ROW value = 5.0, origin = 10.0, scale = 10.0 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0.0, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.75
;

doubleExp
required_capability: decay_function

ROW value = 5.0, origin = 10.0, scale = 10.0 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0.0, "decay": 0.5, "type": "exp"}) 
| KEEP decay_result;

decay_result:double
0.7071067811865475
;

doubleGauss
required_capability: decay_function

ROW value = 5.0, origin = 10.0, scale = 10.0 
| EVAL decay_result = decay(value, origin, scale, {"offset": 0.0, "decay": 0.5, "type": "gauss"}) 
| KEEP decay_result;

decay_result:double
0.8408964152537146
;

longLinear
required_capability: decay_function

ROW value = 15::long, origin = 10::long, scale = 10::long
| EVAL decay_result = decay(value, origin, scale, {"offset": 10000000000, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
1.0
;

cartesianPointLinear1
required_capability: decay_function

ROW value = TO_CARTESIANPOINT("POINT(5 5)"), origin = TO_CARTESIANPOINT("POINT(0 0)"), scale = 10.0
| EVAL decay_result = decay(value, origin, scale, {"offset": 0.0, "decay": 0.25, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.46966991411008935
;

cartesianPointLinear2
required_capability: decay_function

ROW value = TO_CARTESIANPOINT("POINT(10 0)"), origin = TO_CARTESIANPOINT("POINT(0 0)"), scale = 10.0
| EVAL decay_result = ROUND(decay(value, origin, scale, {"offset": 0.0, "decay": 0.25, "type": "linear"}), 10) 
| KEEP decay_result;

decay_result:double
0.25
;

cartesianPointLinearWithOffset
required_capability: decay_function

ROW value = TO_CARTESIANPOINT("POINT(10 0)"), origin = TO_CARTESIANPOINT("POINT(0 0)"), scale = 10.0
| EVAL decay_result = ROUND(decay(value, origin, scale, {"offset": 5.0, "decay": 0.25, "type": "linear"}), 10) 
| KEEP decay_result;

decay_result:double
0.625
;


geoPointLinear
required_capability: decay_function

ROW value = TO_GEOPOINT("POINT(0 0)"), origin = TO_GEOPOINT("POINT(1 1)"), scale = "200km"
| EVAL decay_result = decay(value, origin, scale, {"offset": "0km", "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.606876005579706
;

datetimeLinear1
required_capability: decay_function

ROW value = TO_DATETIME("2023-01-01T00:00:00Z"), origin = TO_DATETIME("2023-01-01T00:00:00Z")
| EVAL decay_result = decay(value, origin, 24 hours, {"offset": 0 seconds, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
1.0
;

datetimeLinear2
required_capability: decay_function

ROW value = TO_DATETIME("2023-01-01T12:00:00Z"), origin = TO_DATETIME("2023-01-01T00:00:00Z")
| EVAL decay_result = decay(value, origin, 24 hours, {"offset": 0 seconds, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.75
;

dateNanosLinear1
required_capability: decay_function

ROW value = TO_DATE_NANOS("2023-01-01T00:00:00Z"), origin = TO_DATE_NANOS("2023-01-01T00:00:00Z")
| EVAL decay_result = decay(value, origin, 24 hours, {"offset": 0 seconds, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
1.0
;

dateNanosLinear2
required_capability: decay_function

ROW value = TO_DATE_NANOS("2023-01-01T12:00:00Z"), origin = TO_DATE_NANOS("2023-01-01T00:00:00Z")
| EVAL decay_result = decay(value, origin, 24 hours, {"offset": 0 seconds, "decay": 0.5, "type": "linear"}) 
| KEEP decay_result;

decay_result:double
0.75
;

retrieveDenseVectorData
required_capability: dense_vector_field_type

FROM dense_vector
| KEEP id, float_vector
| SORT id
;

id:l | float_vector:dense_vector
0    | [1.0, 2.0, 3.0]
1    | [4.0, 5.0, 6.0]
2    | [9.0, 8.0, 7.0]
3    | [0.054, 0.032, 0.012]
;

denseVectorWithEval
required_capability: dense_vector_field_type

FROM dense_vector
| EVAL v = float_vector
| KEEP id, v
| SORT id
;

id:l | v:dense_vector
0    | [1.0, 2.0, 3.0]
1    | [4.0, 5.0, 6.0]
2    | [9.0, 8.0, 7.0]
3    | [0.054, 0.032, 0.012]
;

denseVectorWithRenameAndDrop
required_capability: dense_vector_field_type

FROM dense_vector 
| EVAL v = float_vector 
| RENAME v AS new_vector 
| DROP float_vector, byte_vector, bit_vector
| SORT id
;

id:l | new_vector:dense_vector
0    | [1.0, 2.0, 3.0]
1    | [4.0, 5.0, 6.0]
2    | [9.0, 8.0, 7.0]
3    | [0.054, 0.032, 0.012]
;

convertIntsToDenseVector
required_capability: dense_vector_field_type
required_capability: to_dense_vector_function

// tag::to_dense_vector-ints[]
row ints = [1, 2, 3]
| eval vector = to_dense_vector(ints)
| keep vector
// end::to_dense_vector-ints[]
;

// tag::to_dense_vector-ints-result[]
vector:dense_vector
[1.0, 2.0, 3.0]
// end::to_dense_vector-ints-result[]
;

convertLongsToDenseVector
required_capability: dense_vector_field_type
required_capability: to_dense_vector_function

row longs = [5013792, 2147483647, 501379200000]
| eval vector = to_dense_vector(longs)
| keep vector
;

vector:dense_vector
[5013792.0, 2147483647.0, 501379200000.0]
;

convertDoublesToDenseVector
required_capability: dense_vector_field_type
required_capability: to_dense_vector_function

row doubles = [123.4, 567.8, 901.2]
| eval vector = to_dense_vector(doubles)
| keep vector
;

vector:dense_vector
[123.4, 567.8, 901.2]
;

convertHexStringToDenseVector
required_capability: dense_vector_field_type
required_capability: to_dense_vector_function

row hex_str = "0102030405060708090a0b0c0d0e0f"
| eval vector = to_dense_vector(hex_str)
| keep vector
;

vector:dense_vector
 [1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0]
;

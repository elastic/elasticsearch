//
// CSV spec for FORK command
//

simpleFork
required_capability: fork_v3

FROM employees
| FORK ( WHERE emp_no == 10001 )
       ( WHERE emp_no == 10002 )
| KEEP emp_no, _fork
| SORT emp_no
;

emp_no:integer | _fork:keyword
10001          | fork1
10002          | fork2
;

forkWithWhereSortAndLimit
required_capability: fork_v3

FROM employees
| FORK ( WHERE hire_date < "1985-03-01T00:00:00Z" | SORT first_name | LIMIT 5 )
       ( WHERE hire_date < "1988-03-01T00:00:00Z" | SORT first_name | LIMIT 5 )
| KEEP emp_no, first_name, _fork
| SORT emp_no, _fork
;

emp_no:integer | first_name:keyword | _fork:keyword
10002          | Bezalel            | fork2
10009          | Sumant             | fork1
10014          | Berni              | fork2
10048          | Florian            | fork1
10058          | Berhard            | fork2
10060          | Breannda           | fork2
10094          | Arumugam           | fork2
;

fiveFork
required_capability: fork_v3

FROM employees
| FORK ( WHERE emp_no == 10005 )
       ( WHERE emp_no == 10004 )
       ( WHERE emp_no == 10003 )
       ( WHERE emp_no == 10002 )
       ( WHERE emp_no == 10001 )
| KEEP  _fork, emp_no
| SORT _fork
;

_fork:keyword | emp_no:integer 
fork1         | 10005
fork2         | 10004
fork3         | 10003
fork4         | 10002
fork5         | 10001
;

forkWithWhereSortDescAndLimit
required_capability: fork_v3

FROM employees
| FORK ( WHERE hire_date < "1985-03-01T00:00:00Z" | SORT first_name DESC | LIMIT 2 )
       ( WHERE hire_date < "1988-03-01T00:00:00Z" | SORT first_name DESC NULLS LAST | LIMIT 2 )
| KEEP _fork, emp_no, first_name
| SORT _fork, first_name DESC
;

_fork:keyword | emp_no:integer | first_name:keyword 
fork1         | 10009          | Sumant            
fork1         | 10048          | Florian           
fork2         | 10081          | Zhongwei          
fork2         | 10087          | Xinglin
;

forkWithCommonPrefilter
required_capability: fork_v3

FROM employees
| WHERE emp_no > 10050
| FORK ( SORT emp_no ASC | LIMIT 2 )
       ( SORT emp_no DESC NULLS LAST | LIMIT 2 )
| KEEP _fork, emp_no
| SORT _fork, emp_no
;

_fork:keyword | emp_no:integer
fork1         | 10051
fork1         | 10052
fork2         | 10099
fork2         | 10100
;

forkWithSemanticSearchAndScore
required_capability: fork_v3
required_capability: semantic_text_field_caps
required_capability: metadata_score

FROM semantic_text METADATA _id, _score
| FORK ( WHERE semantic_text_field:"something" | SORT _score DESC | LIMIT 2)
       ( WHERE semantic_text_field:"something else" | SORT _score DESC | LIMIT 2)
| EVAL _score = round(_score, 4)
| SORT _fork, _score, _id
| KEEP _fork, _score, _id, semantic_text_field
;

_fork:keyword | _score:double         | _id:keyword | semantic_text_field:text
fork1         | 2.156063961865257E18  | 3           | be excellent to each other
fork1         | 5.603396578413904E18  | 2           | all we have to decide is what to do with the time that is given to us
fork2         | 2.3447541759648727E18 | 3           | be excellent to each other
fork2         | 6.093784261960139E18  | 2           | all we have to decide is what to do with the time that is given to us
;

forkWithEvals
required_capability: fork_v3

FROM employees
| FORK (WHERE emp_no == 10048 OR emp_no == 10081 | EVAL x = "abc" | EVAL y = 1)
       (WHERE emp_no == 10081 OR emp_no == 10087 | EVAL x = "def" | EVAL z = 2)
| KEEP _fork, emp_no, x, y, z
| SORT _fork, emp_no
;

_fork:keyword | emp_no:integer | x:keyword | y:integer | z:integer
fork1         | 10048          | abc       | 1         | null
fork1         | 10081          | abc       | 1         | null
fork2         | 10081          | def       | null      | 2
fork2         | 10087          | def       | null      | 2
;

forkWithStats
required_capability: fork_v3

FROM employees
| FORK (WHERE emp_no == 10048 OR emp_no == 10081)
       (WHERE emp_no == 10081 OR emp_no == 10087)
       (STATS x = COUNT(*), y = MAX(emp_no), z = MIN(emp_no))
       (STATS x = COUNT(*), y = MIN(emp_no))
| KEEP _fork, emp_no, x, y, z
| SORT _fork, emp_no
;

_fork:keyword | emp_no:integer | x:long | y:integer | z:integer
fork1         | 10048          | null   | null      | null
fork1         | 10081          | null   | null      | null
fork2         | 10081          | null   | null      | null
fork2         | 10087          | null   | null      | null
fork3         | null           | 100    | 10100     | 10001
fork4         | null           | 100    | 10001     | null
;

forkWithDissect
required_capability: fork_v3

FROM employees
| WHERE emp_no == 10048 OR emp_no == 10081
| FORK (EVAL a = CONCAT(first_name, " ", emp_no::keyword, " ", last_name)
        | DISSECT a "%{x} %{y} %{z}" )
       (EVAL b = CONCAT(last_name, " ", emp_no::keyword, " ", first_name)
        | DISSECT b "%{x} %{y} %{w}" )
| KEEP _fork, emp_no, x, y, z, w
| SORT _fork, emp_no
;

_fork:keyword | emp_no:integer | x:keyword | y:keyword | z:keyword | w:keyword
fork1         | 10048          | Florian   | 10048     | Syrotiuk  | null
fork1         | 10081          | Zhongwei  | 10081     | Rosen     | null
fork2         | 10048          | Syrotiuk  | 10048     | null      | Florian
fork2         | 10081          | Rosen     | 10081     | null      | Zhongwei
;

forkWithMixOfCommands
required_capability: fork_v3

FROM employees
| WHERE emp_no == 10048 OR emp_no == 10081
| FORK ( EVAL a = CONCAT(first_name, " ", emp_no::keyword, " ", last_name)
        | DISSECT a "%{x} %{y} %{z}"
        | EVAL y = y::keyword )
       ( STATS x = COUNT(*)::keyword, y = MAX(emp_no)::keyword, z = MIN(emp_no)::keyword )
       ( SORT emp_no ASC | LIMIT 2 | EVAL x = last_name )
       ( EVAL x = "abc" | EVAL y = "aaa" )
| KEEP _fork, emp_no, x, y, z, a
| SORT _fork, emp_no
;

_fork:keyword | emp_no:integer | x:keyword | y:keyword | z:keyword | a:keyword
fork1         | 10048          | Florian   | 10048     | Syrotiuk  | Florian 10048 Syrotiuk
fork1         | 10081          | Zhongwei  | 10081     | Rosen     | Zhongwei 10081 Rosen
fork2         | null           | 2         | 10081     | 10048     | null
fork3         | 10048          | Syrotiuk  | null      | null      | null
fork3         | 10081          | Rosen     | null      | null      | null
fork4         | 10048          | abc       | aaa       | null      | null
fork4         | 10081          | abc       | aaa       | null      | null
;

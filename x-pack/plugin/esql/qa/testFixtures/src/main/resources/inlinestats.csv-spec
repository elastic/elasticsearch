allFieldsReturned
required_capability: inline_stats

FROM hosts METADATA _index
| INLINE STATS c = COUNT(*) BY host_group
| SORT c
| LIMIT 1
;

  card:keyword | description:text  | host:keyword  |                                     ip0:ip                                      |        ip1:ip           |_index:keyword |     c:long    |  host_group:text
eth0           |epsilon gw instance|epsilon        |[fe80::cae2:65ff:fece:feb9, fe80::cae2:65ff:fece:fec0, fe80::cae2:65ff:fece:fec1]|fe80::cae2:65ff:fece:fec1|hosts          |1              |null
;

allFieldsReturnedNoIndex
required_capability: inline_stats

FROM hosts
| INLINE STATS c = COUNT(*) BY host_group
| SORT c
| LIMIT 1
;

  card:keyword | description:text  | host:keyword  |                                     ip0:ip                                      |        ip1:ip           |     c:long    |  host_group:text
eth0           |epsilon gw instance|epsilon        |[fe80::cae2:65ff:fece:feb9, fe80::cae2:65ff:fece:fec0, fe80::cae2:65ff:fece:fec1]|fe80::cae2:65ff:fece:fec1|1              |null
;

maxOfInt
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages
| INLINE STATS max_lang = MAX(languages) 
| WHERE max_lang == languages
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | languages:integer | max_lang:integer
         10002 |                 5 | 5
         10004 |                 5 | 5
         10011 |                 5 | 5
         10012 |                 5 | 5
         10014 |                 5 | 5
;

docsMaxWithoutBy
required_capability: inline_stats
// tag::max-salary-without-by[]
FROM employees
| KEEP emp_no, languages, salary
| INLINE STATS max_salary = MAX(salary) 
// end::max-salary-without-by[]
| SORT emp_no ASC
| LIMIT 5
;

// tag::max-salary-without-by-result[]
emp_no:integer | languages:integer | salary:integer | max_salary:integer
10001          |2                  |57305           |74999          
10002          |5                  |56371           |74999          
10003          |4                  |61805           |74999          
10004          |5                  |36174           |74999          
10005          |1                  |63528           |74999
// end::max-salary-without-by-result[]
;

docsMax
required_capability: inline_stats
// tag::max-salary[]
FROM employees
| KEEP emp_no, languages, salary
| INLINE STATS max_salary = MAX(salary) BY languages
// end::max-salary[]
| SORT emp_no ASC
| LIMIT 5
;

// tag::max-salary-result[]
emp_no:integer | salary:integer | max_salary:integer | languages:integer
10001          |57305           |73578               |2              
10002          |56371           |66817               |5              
10003          |61805           |74572               |4              
10004          |36174           |66817               |5              
10005          |63528           |73717               |1
// end::max-salary-result[]
;

docsMultiAggsMultiGroupings
required_capability: inline_stats
// tag::multi-agg-multi-grouping[]
FROM employees
| WHERE still_hired
| KEEP emp_no, languages, salary, hire_date
| EVAL tenure = DATE_DIFF("year", hire_date, now())
| DROP hire_date
| INLINE STATS avg_salary = AVG(salary), count = count(*) BY languages, tenure
// end::multi-agg-multi-grouping[]
| SORT emp_no
| LIMIT 5
;

// tag::multi-agg-multi-grouping-result[]
 emp_no:integer | salary:integer | avg_salary:double | count:long | languages:integer | tenure:integer
10001           |57305           |51130.5            |2           |2                  |39
10002           |56371           |40180.0            |3           |5                  |39
10004           |36174           |30749.0            |2           |5                  |38
10005           |63528           |63528.0            |1           |1                  |36
10007           |74572           |58644.0            |2           |4                  |36
// end::multi-agg-multi-grouping-result[]
;

docsInlinestatsWithWhere
required_capability: inline_stats
// tag::avg-salaries-where[]
FROM employees
| KEEP emp_no, salary
| INLINE STATS avg_lt_50 = ROUND(AVG(salary)) WHERE salary < 50000,
               avg_lt_60 = ROUND(AVG(salary)) WHERE salary >=50000 AND salary < 60000,
               avg_gt_60 = ROUND(AVG(salary)) WHERE salary >= 60000
// end::avg-salaries-where[]
| SORT emp_no
| LIMIT 5
;

// tag::avg-salaries-where-result[]
 emp_no:integer | salary:integer | avg_lt_50:double | avg_lt_60:double | avg_gt_60:double
10001           |57305           |38292.0           |54221.0           |67286.0
10002           |56371           |38292.0           |54221.0           |67286.0
10003           |61805           |38292.0           |54221.0           |67286.0
10004           |36174           |38292.0           |54221.0           |67286.0
10005           |63528           |38292.0           |54221.0           |67286.0
// end::avg-salaries-where-result[]
;

maxOfIntByKeyword
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender
| INLINE STATS max_lang = MAX(languages) BY gender 
| WHERE max_lang == languages
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | languages:integer | max_lang:integer | gender:keyword
         10002 |                 5 | 5                | F
         10004 |                 5 | 5                | M
         10011 |                 5 | 5                | null
         10012 |                 5 | 5                | null
         10014 |                 5 | 5                | null
;

// check that the `LIMIT 1` isn't pushed into the INLINE STATS's source
maxOfIntByKeywordLimit1Aggd
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender
// | SORT emp_no
| INLINE STATS max_lang = MAX(languages) BY gender
| LIMIT 1
| STATS v = VALUES(max_lang)
;

v:integer
5
;

simpleAvg
required_capability: inline_stats

FROM employees
| INLINE STATS a = AVG(salary)
| LIMIT 2
| KEEP a;

a:double
48248.55
48248.55
;

maxOfLongByKeyword
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, gender
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY gender 
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT emp_no ASC;

emp_no:integer | avg_worked_seconds:long | max_avg_worked_seconds:long | gender:keyword
         10007 |               393084805 | 393084805                   | F
         10015 |               390266432 | 390266432                   | null 
         10030 |               394597613 | 394597613                   | M 
;

maxOfLong
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, gender
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) 
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT emp_no ASC;

emp_no:integer | avg_worked_seconds:long | gender:keyword | max_avg_worked_seconds:long
         10030 |               394597613 | M              | 394597613
;

maxOfLongByCalculatedKeyword
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, last_name
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY SUBSTRING(last_name, 0, 1)
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT last_name ASC
| LIMIT 5
;

emp_no:integer | avg_worked_seconds:long | last_name:keyword | max_avg_worked_seconds:long | SUBSTRING(last_name, 0, 1):keyword
         10065 |               372660279 | Awdeh             | 372660279                   | A
         10074 |               382397583 | Bernatsky         | 382397583                   | B
         10044 |               387408356 | Casley            | 387408356                   | C
         10030 |               394597613 | Demeyer           | 394597613                   | D
         10087 |               305782871 | Eugenio           | 305782871                   | E
;

maxOfLongByCalculatedNamedKeyword
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, last_name
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY l = SUBSTRING(last_name, 0, 1)
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT last_name ASC
| LIMIT 5
;

emp_no:integer | avg_worked_seconds:long | last_name:keyword | max_avg_worked_seconds:long | l:keyword
         10065 |               372660279 | Awdeh             | 372660279                   | A
         10074 |               382397583 | Bernatsky         | 382397583                   | B
         10044 |               387408356 | Casley            | 387408356                   | C
         10030 |               394597613 | Demeyer           | 394597613                   | D
         10087 |               305782871 | Eugenio           | 305782871                   | E
;

maxOfLongByCalculatedDroppedKeyword
required_capability: inline_stats

FROM employees
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY l = SUBSTRING(last_name, 0, 1)
| WHERE max_avg_worked_seconds == avg_worked_seconds
| KEEP emp_no, avg_worked_seconds, last_name, max_avg_worked_seconds  
| SORT last_name ASC
| LIMIT 5
;

emp_no:integer | avg_worked_seconds:long | last_name:keyword | max_avg_worked_seconds:long
         10065 |               372660279 | Awdeh             | 372660279
         10074 |               382397583 | Bernatsky         | 382397583
         10044 |               387408356 | Casley            | 387408356
         10030 |               394597613 | Demeyer           | 394597613
         10087 |               305782871 | Eugenio           | 305782871
;

maxOfLongByEvaledKeyword
required_capability: inline_stats

FROM employees
| EVAL l = SUBSTRING(last_name, 0, 1)
| KEEP emp_no, avg_worked_seconds, l
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY l 
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT l ASC
| LIMIT 5
;

emp_no:integer | avg_worked_seconds:long | max_avg_worked_seconds:long | l:keyword
         10065 |               372660279 | 372660279                   | A
         10074 |               382397583 | 382397583                   | B
         10044 |               387408356 | 387408356                   | C
         10030 |               394597613 | 394597613                   | D
         10087 |               305782871 | 305782871                   | E
;

maxOfLongByInt
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, languages
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY languages
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT languages ASC;

emp_no:integer | avg_worked_seconds:long | max_avg_worked_seconds:long | languages:integer
         10044 |               387408356 | 387408356                   | 1
         10099 |               377713748 | 377713748                   | 2
         10030 |               394597613 | 394597613                   | 3
         10007 |               393084805 | 393084805                   | 4
         10015 |               390266432 | 390266432                   | 5
         10027 |               374037782 | 374037782                   | null
;

maxOfLongByIntDouble
required_capability: inline_stats

FROM employees
| KEEP emp_no, avg_worked_seconds, languages, height
| EVAL height=ROUND(height, 1)
| INLINE STATS max_avg_worked_seconds = MAX(avg_worked_seconds) BY languages, height
| WHERE max_avg_worked_seconds == avg_worked_seconds
| SORT languages, height ASC
| LIMIT 4;

emp_no:integer | avg_worked_seconds:long | max_avg_worked_seconds:long | languages:integer | height:double
         10083 |               331236443 | 331236443                   |                 1 |           1.4
         10084 |               359067056 | 359067056                   |                 1 |           1.5
         10033 |               208374744 | 208374744                   |                 1 |           1.6
         10086 |               328580163 | 328580163                   |                 1 |           1.7
;

two
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, avg_worked_seconds, gender
| INLINE STATS avg_avg_worked_seconds = AVG(avg_worked_seconds) BY languages
| WHERE avg_worked_seconds > avg_avg_worked_seconds
| INLINE STATS max_languages = MAX(languages) BY gender
| SORT emp_no ASC
| LIMIT 10;

emp_no:integer |avg_worked_seconds:long|avg_avg_worked_seconds:double|languages:integer|max_languages:integer|gender:keyword
10002          |328922887              |3.133013149047619E8          |5                |5                    |F              
10006          |372957040              |2.978159518235294E8          |3                |5                    |F              
10007          |393084805              |2.863684210555556E8          |4                |5                    |F
10010          |315236372              |2.863684210555556E8          |4                |5                    |null           
10012          |365510850              |3.133013149047619E8          |5                |5                    |null           
10015          |390266432              |3.133013149047619E8          |5                |5                    |null           
10018          |309604079              |3.0318626831578946E8         |2                |5                    |null           
10019          |342855721              |2.94833632E8                 |1                |5                    |null           
10020          |373309605              |3.181719481E8                |null             |5                    |M              
10023          |330870342              |3.181719481E8                |null             |5                    |F
;

three
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, avg_worked_seconds, gender
| INLINE STATS avg_avg_worked_seconds = AVG(avg_worked_seconds) BY languages
| WHERE avg_worked_seconds > avg_avg_worked_seconds
| INLINE STATS max_languages = MAX(languages) BY gender
| SORT emp_no ASC
| LIMIT 10
| INLINE STATS min(languages), max(languages) by gender
;

emp_no:integer |avg_worked_seconds:long|avg_avg_worked_seconds:double|languages:integer|max_languages:integer|min(languages):integer|max(languages):integer|gender:keyword
10002          |328922887              |3.133013149047619E8          |5                |5                    |3                     |5                     |F              
10006          |372957040              |2.978159518235294E8          |3                |5                    |3                     |5                     |F              
10007          |393084805              |2.863684210555556E8          |4                |5                    |3                     |5                     |F              
10010          |315236372              |2.863684210555556E8          |4                |5                    |1                     |5                     |null           
10012          |365510850              |3.133013149047619E8          |5                |5                    |1                     |5                     |null           
10015          |390266432              |3.133013149047619E8          |5                |5                    |1                     |5                     |null           
10018          |309604079              |3.0318626831578946E8         |2                |5                    |1                     |5                     |null           
10019          |342855721              |2.94833632E8                 |1                |5                    |1                     |5                     |null           
10020          |373309605              |3.181719481E8                |null             |5                    |null                  |null                  |M              
10023          |330870342              |3.181719481E8                |null             |5                    |3                     |5                     |F
;

// TODO: INLINE STATS unit test needed for this one
// https://github.com/elastic/elasticsearch/issues/113727
pushDownSort_To_LeftSideOnly-Ignore
required_capability: inline_stats

from employees
| sort emp_no
| inline stats avg = avg(salary) by languages
| limit 5
| keep emp_no, avg, languages, gender
;

 emp_no:integer| avg:double    |languages:integer|gender:keyword     
10001          |57305.0        |2                |M              
10002          |46272.5        |5                |F              
10003          |61805.0        |4                |M              
10004          |46272.5        |5                |M              
10005          |63528.0        |1                |M
;

byMultivaluedSimple
required_capability: inline_stats

FROM airports
| INLINE STATS min_scalerank=MIN(scalerank) BY type
| EVAL type=MV_SORT(type), min_scalerank=MV_SORT(min_scalerank)
| KEEP abbrev, type, scalerank, min_scalerank
| WHERE abbrev == "GWL"
;

abbrev:keyword |  type:keyword   | scalerank:integer | min_scalerank:integer
           GWL | [mid, military] | 9                 | [2, 4]
;

byMultivaluedMvExpand
required_capability: inline_stats

FROM airports
| KEEP abbrev, type, scalerank
| MV_EXPAND type
| INLINE STATS min_scalerank=MIN(scalerank) BY type
| SORT min_scalerank ASC
| WHERE abbrev == "GWL"
;

abbrev:keyword | scalerank:integer | min_scalerank:integer | type:keyword 
GWL            |9                  |2                      |mid            
GWL            |9                  |4                      |military
;

byMvExpand
required_capability: inline_stats

FROM airports
| MV_EXPAND type
| EVAL lat = ST_Y(location)
| INLINE STATS most_northern=MAX(lat), most_southern=MIN(lat) BY type
| WHERE lat == most_northern OR lat == most_southern
| SORT lat DESC
| KEEP type, name, location
;

 type:keyword |           name:text           | location:geo_point
          mid |             Svalbard Longyear | POINT (15.495229 78.246717)
        major |                Tromsø Langnes | POINT (18.9072624292132 69.6796790473478)
     military | Severomorsk-3 (Murmansk N.E.) | POINT (33.2903527616285 69.0168711826804)
    spaceport |           Baikonur Cosmodrome | POINT (63.307354423875 45.9635739403124)
        small |                       Dhamial | POINT (73.0320498392002 33.5614146278861)
        small |                      Sahnewal | POINT (75.9570722403652 30.8503598561702)
    spaceport |       Centre Spatial Guyanais | POINT (-52.7684296893452 5.23941001258035)
     military |         Santos Air Force Base | POINT (-46.3052704931003 -23.9237590410637)
        major |            Christchurch Int'l | POINT (172.538675565223 -43.4885486784104)
          mid |          Hermes Quijada Int'l | POINT (-67.7530268462675 -53.7814746058316)
;

mvMinMvExpand
required_capability: inline_stats

FROM airports
| EVAL original_type = type
| INLINE STATS min_scalerank=MIN(scalerank) BY type
| MV_EXPAND type
| EVAL mvMin_scalerank = MV_MIN(scalerank)
| WHERE scalerank == MV_MIN(scalerank)
| SORT abbrev DESC NULLS LAST, type
| LIMIT 7
;

abbrev:keyword |city:keyword   |city_location:geo_point |country:keyword|                 location:geo_point       | name:text           |scalerank:integer|original_type:keyword |min_scalerank:integer|type:keyword|mvMin_scalerank:integer
ZRH            |Zürich         |POINT (8.5411 47.3744)  |Switzerland    |POINT (8.56221279534765 47.4523895064915) |Zurich Int'l         |3                |major                 |2                    |major       |3              
ZNZ            |Zanzibar       |POINT (39.199 -6.165)   |Tanzania       |POINT (39.2223319841558 -6.21857034620282)|Zanzibar             |4                |mid                   |2                    |mid         |4              
ZLO            |Cihuatlán      |POINT (-104.5667 19.25) |Mexico         |POINT (-104.560095200097 19.1480860285854)|Playa de Oro Int'l   |7                |mid                   |2                    |mid         |7              
ZHHH           |Wuhan          |POINT (114.2881 30.5872)|China          |POINT (114.24694737615 30.6017141196702)  |Wang-Chia Tun Airbase|6                |[mid, military]       |[2, 4]               |mid         |6              
ZHHH           |Wuhan          |POINT (114.2881 30.5872)|China          |POINT (114.24694737615 30.6017141196702)  |Wang-Chia Tun Airbase|6                |[mid, military]       |[2, 4]               |military    |6              
ZGC            |Lanzhou        |POINT (103.8318 36.0617)|China          |POINT (103.615415363043 36.5078842461237) |Lanzhou Zhongchuan   |6                |mid                   |2                    |mid         |6              
ZAR            |Zaria          |POINT (7.7 11.0667)     |Nigeria        |POINT (7.68726764310577 11.1352958601071) |Zaria                |8                |mid                   |2                    |mid         |8              
;

afterStats
required_capability: inline_stats

FROM airports
| STATS count=COUNT(*) BY country
| INLINE STATS avg=AVG(count)
| WHERE count > avg * 3
| SORT count DESC, country ASC
;

count:long | country:keyword | avg:double
       129 |   United States | 4.455
        50 |           India | 4.455
        45 |          Mexico | 4.455
        41 |           China | 4.455
        37 |          Canada | 4.455
        31 |          Brazil | 4.455
        26 |          Russia | 4.455
        19 |            null | 4.455
        17 |       Australia | 4.455
        17 |  United Kingdom | 4.455
;

afterWhere
required_capability: inline_stats

FROM airports
| WHERE country != "United States"
| INLINE STATS count=COUNT(*) BY country
| SORT count DESC, abbrev ASC
| KEEP abbrev, country, count
| LIMIT 4
;

abbrev:keyword | country:keyword | count:long
           AGR |           India | 50
           AMD |           India | 50
           BBI |           India | 50
           BDQ |           India | 50
;

afterLookup
required_capability: inline_stats
required_capability: join_lookup_v12

FROM airports
| EVAL backup_scalerank = scalerank
| RENAME scalerank AS language_code
| LOOKUP JOIN languages_lookup ON language_code
| RENAME language_name as scalerank
| DROP language_code
| INLINE STATS count=COUNT(*) BY scalerank
| SORT abbrev DESC
| KEEP abbrev, *scalerank
| LIMIT 5
;

abbrev:keyword |backup_scalerank:integer| scalerank:keyword   
null           |8                       |null           
null           |8                       |null           
null           |8                       |null           
ZRH            |3                       |Spanish        
ZNZ            |4                       |German
;

afterEnrich
required_capability: inline_stats
required_capability: enrich_load

FROM airports
| KEEP abbrev, city
| WHERE abbrev NOT IN ("ADJ", "ATQ") // Skip airports in regions with right-to-left text which the test file isn't good with
| ENRICH city_names ON city WITH region
| WHERE MV_COUNT(region) == 1
| INLINE STATS COUNT(*) BY region
| SORT abbrev ASC
| WHERE `COUNT(*)` > 1
| LIMIT 3
;

abbrev:keyword | city:keyword | "COUNT(*)":long |       region:text 
           ALA |       Almaty | 2               |     Жетісу ауданы
           BXJ |       Almaty | 2               |     Жетісу ауданы
           FUK |      Fukuoka | 2               |             中央区
;

beforeStats
required_capability: inline_stats

FROM airports
| EVAL lat = ST_Y(location)
| INLINE STATS avg_lat=AVG(lat)
| STATS northern=COUNT(lat > avg_lat OR NULL), southern=COUNT(lat < avg_lat OR NULL)
;

northern:long | southern:long
          520 | 371
;

beforeKeepSort
required_capability: inline_stats

FROM employees
| INLINE STATS max_salary = MAX(salary) by languages
| KEEP emp_no, languages, max_salary
| SORT emp_no ASC
| LIMIT 3;

emp_no:integer | languages:integer | max_salary:integer
         10001 |                 2 | 73578
         10002 |                 5 | 66817
         10003 |                 4 | 74572
;

beforeKeepWhere
required_capability: inline_stats

FROM employees
| INLINE STATS max_salary = MAX(salary) by languages
| KEEP emp_no, languages, max_salary
| WHERE emp_no == 10003;

ignoreOrder:true
emp_no:integer | languages:integer | max_salary:integer
         10003 |                 4 | 74572
;

beforeEnrich
required_capability: inline_stats
required_capability: enrich_load

FROM airports
| KEEP abbrev, type, city
| INLINE STATS COUNT(*) BY type
| ENRICH city_names ON city WITH region
| WHERE MV_COUNT(region) == 1
| SORT abbrev ASC
| LIMIT 3
;

abbrev:keyword |city:keyword      |"COUNT(*)":long|type:keyword   | region:text
ABJ            |Abidjan           |499            |mid            |Abidjan               
ABV            |Abuja             |385            |major          |Municipal Area Council
ACA            |Acapulco de Juárez|385            |major          |Acapulco de Juárez
;

beforeAndAfterEnrich
required_capability: inline_stats
required_capability: enrich_load

FROM airports
| KEEP abbrev, type, city
| INLINE STATS COUNT(*) BY type
| ENRICH city_names ON city WITH region
| WHERE MV_COUNT(region) == 1
| INLINE STATS count_region=COUNT(*) BY region 
| SORT abbrev ASC
| WHERE STARTS_WITH(abbrev, "AL")
| LIMIT 5
;

abbrev:keyword | city:keyword  |"COUNT(*)":long|  type:keyword | count_region:long |        region:text        
ALA            |Almaty         |385            |major          |2                  |Жетісу ауданы     
ALB            |Colonie        |499            |mid            |1                  |Town of Colonie   
ALC            |Alicante       |385            |major          |1                  |Alacant / Alicante
ALG            |Algiers        |385            |major          |1                  |Alger             
ALL            |Albenga        |499            |mid            |1                  |Albenga
;

shadowing
required_capability: inline_stats

ROW left = "left", client_ip = "172.21.0.5", env = "env", right = "right"
| INLINE STATS env = VALUES(right) BY client_ip
;

left:keyword |  right:keyword | env:keyword | client_ip:keyword
left         | right          | right       | 172.21.0.5        
;

shadowingMulti
required_capability: inline_stats

ROW left = "left", airport = "Zurich Airport ZRH", city = "Zürich", middle = "middle", region = "North-East Switzerland", right = "right"
| INLINE STATS airport=VALUES(left), region=VALUES(left), city_boundary=VALUES(left) BY city
;

left:keyword | middle:keyword | right:keyword | airport:keyword | region:keyword | city_boundary:keyword | city:keyword 
left         | middle         | right         |            left |           left | left                  | Zürich
;

shadowingSelf
required_capability: inline_stats

ROW city = "Raleigh"
| INLINE STATS city = COUNT(city)
;

city:long
1
;

shadowingSelfBySelf
required_capability: inline_stats

ROW city = "Raleigh"
| INLINE STATS city = COUNT(city) BY city
;
warning:Line 2:16: Field 'city' shadowed by field at line 2:38

city:keyword
Raleigh
;

shadowingInternal
required_capability: inline_stats

ROW city = "Zürich"
| INLINE STATS x = VALUES(city), x = VALUES(city)
;
warning:Line 2:16: Field 'x' shadowed by field at line 2:34

city:keyword | x:keyword
Zürich       | Zürich
;

multiInlinestatsWithRow
required_capability: inline_stats

row x = 1
| inline stats x = max(x) + min(x)
| eval y = x + 1
| inline stats sum(y)
| inline stats count(y), count(x)
;

  x:integer    |    y:integer  |  sum(y):long  | count(y):long | count(x):long    
2              |3              |3              |1              |1
;

ignoreUnusedEvaledValue_AndInlineStats
required_capability: inline_stats

ROW x = 1
| INLINE STATS max(x)
| EVAL y = x + 1
| KEEP x
;

x:integer
1
;

ignoreUnusedEvaledValue_AndInlineStats2
required_capability: inline_stats

ROW x = 1, z = 2
| INLINE STATS max(x)
| EVAL a = x + 1, b = z + 2
| KEEP x, z
;

x:integer | z:integer
1         | 2
;

ignoreUnusedEvaledValue_AndInlineStats3
required_capability: inline_stats

from employees
| inline stats max(salary)
| eval y = salary + 1
| keep salary
| sort salary desc
| limit 1
;

 salary:integer     
74999     
;

ignoreUnusedEvaledValue_AndInlineStats4
required_capability: inline_stats

from employees
| inline stats max(salary), m = min(salary) by gender
| eval y = concat(gender, "")
| keep emp_no
| sort emp_no desc
| limit 1
;

emp_no:integer     
10100     
;

ignoreUnusedEvaledValue_AndInlineStats5
required_capability: inline_stats

from employees
| inline stats max(salary), m = min(salary) by gender
| eval y = m / 2
| keep emp_no
| sort emp_no desc
| limit 1
;

emp_no:integer     
10100     
;

shadowEntireInlinestats
required_capability: inline_stats

FROM employees
| INLINE STATS x = avg(salary), y = min(salary) BY emp_no
| EVAL x = emp_no, y = x
| SORT x
| KEEP x, y, emp_no
| LIMIT 1
;

x:integer |y:integer |emp_no:integer
10001     |10001     |10001
;

byConstant
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages
| INLINE STATS max_lang = MAX(languages) BY y=1 
| WHERE max_lang == languages
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | languages:integer | max_lang:integer | y:integer
         10002 |                 5 |                5 | 1
         10004 |                 5 |                5 | 1
         10011 |                 5 |                5 | 1
         10012 |                 5 |                5 | 1
         10014 |                 5 |                5 | 1
;

aggConstant
required_capability: inline_stats

FROM employees
| KEEP emp_no
| INLINE STATS one = MAX(1) BY emp_no
| SORT emp_no ASC
| LIMIT 5
;

one:integer | emp_no:integer
          1 | 10001
          1 | 10002
          1 | 10003
          1 | 10004
          1 | 10005
;

percentile
required_capability: inline_stats

FROM employees
| KEEP emp_no, salary
| INLINE STATS ninety_fifth_salary = PERCENTILE(salary, 95)
| WHERE salary > ninety_fifth_salary
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | salary:integer | ninety_fifth_salary:double
         10007 |          74572 | 73584.95
         10019 |          73717 | 73584.95
         10027 |          73851 | 73584.95
         10029 |          74999 | 73584.95
         10045 |          74970 | 73584.95
;

byTwoCalculated
required_capability: inline_stats

FROM airports
| WHERE abbrev IS NOT NULL
| KEEP abbrev, scalerank, location
| INLINE STATS min_sl=MIN(scalerank)
           BY lat_10 = ROUND(ST_Y(location), -1)
            , lon_10 = ROUND(ST_X(location), -1)
| SORT abbrev DESC
| LIMIT 3
;

abbrev:keyword | scalerank:integer |             location:geo_point             | min_sl:integer | lat_10:double | lon_10:double
           ZRH |                 3 | POINT(8.56221279534765 47.4523895064915)   | 2              |            50 |            10
           ZNZ |                 4 | POINT (39.2223319841558 -6.21857034620282) | 4              |           -10 |            40
           ZLO |                 7 | POINT (-104.560095200097 19.1480860285854) | 2              |            20 |          -100
;

byTwoCalculatedSecondOverwrites
required_capability: stats_alias_collision_warnings
required_capability: inline_stats

FROM airports
| WHERE abbrev IS NOT NULL
| KEEP abbrev, scalerank, location
| INLINE STATS min_sl=MIN(scalerank)
           BY x = ROUND(ST_Y(location), -1)
            , x = ROUND(ST_X(location), -1)
| SORT abbrev DESC
| LIMIT 3
;
warning:Line 5:4: Field 'x' shadowed by field at line 6:3

abbrev:keyword | scalerank:integer |             location:geo_point             | min_sl:integer| x:double 
           ZRH |                 3 | POINT (8.56221279534765 47.4523895064915)  | 2             | 10 
           ZNZ |                 4 | POINT (39.2223319841558 -6.21857034620282) | 2             | 40
           ZLO |                 7 | POINT (-104.560095200097 19.1480860285854) | 2             | -100
;

byTwoCalculatedSecondOverwritesReferencingFirst
required_capability: stats_alias_collision_warnings
required_capability: inline_stats

FROM airports
| WHERE abbrev IS NOT NULL
| KEEP abbrev, scalerank, location
| EVAL x = ST_X(location)
| INLINE STATS min_sl=MIN(scalerank)
           BY x = ROUND(x, -1)
            , x = ROUND(x, -1)
| SORT abbrev DESC
| LIMIT 3
;
warning:Line 6:4: Field 'x' shadowed by field at line 7:3

abbrev:keyword | scalerank:integer |             location:geo_point             | min_sl:integer| x:double 
           ZRH |                 3 | POINT (8.56221279534765 47.4523895064915)  | 2             | 10 
           ZNZ |                 4 | POINT (39.2223319841558 -6.21857034620282) | 2             | 40
           ZLO |                 7 | POINT (-104.560095200097 19.1480860285854) | 2             | -100
;


groupShadowsAgg
required_capability: stats_alias_collision_warnings
required_capability: inline_stats

FROM airports
| WHERE abbrev IS NOT NULL
| KEEP abbrev, scalerank, location
| INLINE STATS min_sl=MIN(scalerank)
           BY min_sl = ROUND(ST_Y(location), -1)
            , lon_10 = ROUND(ST_X(location), -1)
| SORT abbrev DESC
| LIMIT 3
;
warning:Line 4:16: Field 'min_sl' shadowed by field at line 5:4

abbrev:keyword | scalerank:integer |             location:geo_point             | min_sl:double | lon_10:double
           ZRH |                 3 | POINT(8.56221279534765 47.4523895064915)   |            50 |            10
           ZNZ |                 4 | POINT (39.2223319841558 -6.21857034620282) |           -10 |            40
           ZLO |                 7 | POINT (-104.560095200097 19.1480860285854) |            20 |          -100
;

groupShadowsField
required_capability: inline_stats

  FROM employees
| KEEP emp_no, salary, hire_date
| INLINE STATS avg_salary = AVG(salary)
           BY hire_date = DATE_TRUNC(1 year, hire_date)
| WHERE salary > avg_salary
| SORT emp_no ASC
| LIMIT 4
;

emp_no:integer | salary:integer | avg_salary:double |  hire_date:datetime
         10001 |          57305 | 43869.63636363636 | 1986-01-01T00:00:00Z
         10002 |          56371 | 51831.818181818184| 1985-01-01T00:00:00Z
         10003 |          61805 | 43869.63636363636 | 1986-01-01T00:00:00Z
         10005 |          63528 | 53487.07692307692 | 1989-01-01T00:00:00Z
;

groupByExpression_And_ExistentField
required_capability: inline_stats
FROM employees
| KEEP emp_no, languages, gender
| EVAL x = "ABC"
| INLINE STATS max_lang = MAX(languages) BY y = to_lower(x), gender
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | languages:integer | x:keyword | max_lang:integer | y:keyword | gender:keyword
10001          |2                  |ABC        |5                 |abc        |M              
10002          |5                  |ABC        |5                 |abc        |F              
10003          |4                  |ABC        |5                 |abc        |M              
10004          |5                  |ABC        |5                 |abc        |M              
10005          |1                  |ABC        |5                 |abc        |M
;

groupByRenamedColumn
required_capability: inline_stats
FROM employees
| KEEP emp_no, languages, gender
| INLINE STATS max_lang = MAX(languages) BY y = gender
| WHERE max_lang == languages
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer | languages:integer | gender:keyword | max_lang:integer | y:keyword
         10002 |                 5 | F              | 5                | F
         10004 |                 5 | M              | 5                | M
         10011 |                 5 | null           | 5                | null
         10012 |                 5 | null           | 5                | null
         10014 |                 5 | null           | 5                | null
;

groupByMultipleRenamedColumns_AndOneExpression_Last
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, first_name
| INLINE STATS max_lang = MAX(languages) BY y = gender, l = languages, f = left(first_name,1)
| SORT emp_no
| LIMIT 10
;

emp_no:integer | languages:integer | gender:keyword|first_name:keyword|max_lang:integer|  y:keyword    |   l:integer   |f:keyword       
10001          |2                  |M              |Georgi            |2               |M              |2              |G              
10002          |5                  |F              |Bezalel           |5               |F              |5              |B              
10003          |4                  |M              |Parto             |4               |M              |4              |P              
10004          |5                  |M              |Chirstian         |5               |M              |5              |C              
10005          |1                  |M              |Kyoichi           |1               |M              |1              |K              
10006          |3                  |F              |Anneke            |3               |F              |3              |A              
10007          |4                  |F              |Tzvetan           |4               |F              |4              |T              
10008          |2                  |M              |Saniya            |2               |M              |2              |S              
10009          |1                  |F              |Sumant            |1               |F              |1              |S              
10010          |4                  |null           |Duangkaew         |4               |null           |4              |D              
;

groupByMultipleRenamedColumns_AndTwoExpressions
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, first_name
| INLINE STATS max_lang = MAX(languages) BY f1 = left(first_name, 1), y = gender, f2 = left(first_name, 1), l = languages
| SORT emp_no
| LIMIT 10
;

emp_no:integer | languages:integer | gender:keyword|first_name:keyword|max_lang:integer|  f1:keyword   |   y:keyword   |  f2:keyword   |l:integer       
10001          |2                  |M              |Georgi            |2               |G              |M              |G              |2              
10002          |5                  |F              |Bezalel           |5               |B              |F              |B              |5              
10003          |4                  |M              |Parto             |4               |P              |M              |P              |4              
10004          |5                  |M              |Chirstian         |5               |C              |M              |C              |5              
10005          |1                  |M              |Kyoichi           |1               |K              |M              |K              |1              
10006          |3                  |F              |Anneke            |3               |A              |F              |A              |3              
10007          |4                  |F              |Tzvetan           |4               |T              |F              |T              |4              
10008          |2                  |M              |Saniya            |2               |S              |M              |S              |2              
10009          |1                  |F              |Sumant            |1               |S              |F              |S              |1              
10010          |4                  |null           |Duangkaew         |4               |D              |null           |D              |4              
;

groupByMultipleRenamedColumns_AndMultipleRenames
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, first_name
| RENAME first_name as f
| INLINE STATS max_lang = MAX(languages) BY y = gender, l = languages, first_name = left(f, 1)
| SORT emp_no
| LIMIT 10
;

emp_no:integer | languages:integer | gender:keyword|    f:keyword     |max_lang:integer|  y:keyword    |   l:integer   |first_name:keyword       
10001          |2                  |M              |Georgi            |2               |M              |2              |G              
10002          |5                  |F              |Bezalel           |5               |F              |5              |B              
10003          |4                  |M              |Parto             |4               |M              |4              |P              
10004          |5                  |M              |Chirstian         |5               |M              |5              |C              
10005          |1                  |M              |Kyoichi           |1               |M              |1              |K              
10006          |3                  |F              |Anneke            |3               |F              |3              |A              
10007          |4                  |F              |Tzvetan           |4               |F              |4              |T              
10008          |2                  |M              |Saniya            |2               |M              |2              |S              
10009          |1                  |F              |Sumant            |1               |F              |1              |S              
10010          |4                  |null           |Duangkaew         |4               |null           |4              |D              
;

groupByMultipleRenamedColumns_AndSameNameExpressionGroupingOverride
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, first_name
| RENAME first_name as f
| INLINE STATS max_lang = MAX(languages) BY y = gender, l = languages, f = left(f, 1)
| SORT emp_no
| LIMIT 10
;

emp_no:integer | languages:integer | gender:keyword|max_lang:integer|  y:keyword    |   l:integer   |f:keyword       
10001          |2                  |M              |2               |M              |2              |G              
10002          |5                  |F              |5               |F              |5              |B              
10003          |4                  |M              |4               |M              |4              |P              
10004          |5                  |M              |5               |M              |5              |C              
10005          |1                  |M              |1               |M              |1              |K              
10006          |3                  |F              |3               |F              |3              |A              
10007          |4                  |F              |4               |F              |4              |T              
10008          |2                  |M              |2               |M              |2              |S              
10009          |1                  |F              |1               |F              |1              |S              
10010          |4                  |null           |4               |null           |4              |D              
;

twoAggregatesGroupedBy_AField_And_AnExpression
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, last_name
| WHERE gender IS NOT NULL
| INLINE STATS max_lang = MAX(languages), min_lang = MIN(languages) BY f = left(last_name, 1), gender
| SORT last_name DESC
| LIMIT 8
;

emp_no:integer |languages:integer|last_name:keyword|max_lang:integer|min_lang:integer|   f:keyword   | gender:keyword
10053          |3                |Zschoche         |4               |3               |Z              |F              
10083          |1                |Zockler          |1               |1               |Z              |M              
10007          |4                |Zielinski        |4               |3               |Z              |F              
10097          |3                |Waschkowski      |3               |3               |W              |M              
10020          |null             |Warwick          |3               |3               |W              |M              
10043          |1                |Tzvieli          |1               |1               |T              |M              
10049          |5                |Tramer           |5               |5               |T              |F              
10028          |null             |Tempesti         |1               |1               |T              |M              
;

groupByMultipleRenamedColumns_InversedOrder
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, still_hired, gender
| INLINE STATS max_lang = MAX(languages) BY y = gender, z = still_hired
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer |languages:integer|still_hired:boolean| gender:keyword|max_lang:integer|   y:keyword   |   z:boolean       
10001          |2                |true               |M              |5               |M              |true           
10002          |5                |true               |F              |5               |F              |true           
10003          |4                |false              |M              |5               |M              |false          
10004          |5                |true               |M              |5               |M              |true           
10005          |1                |true               |M              |5               |M              |true           
;

groupByMultipleRenamedColumns_InversedOrder_ComplexEval
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, still_hired, gender
| EVAL multilingual = CASE(languages <= 1, "monolingual", languages <= 2, "bilingual", "polyglot")
| INLINE STATS max_lang = MAX(languages) BY y = gender, z = still_hired
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer |languages:integer|still_hired:boolean| gender:keyword|multilingual:keyword|max_lang:integer|   y:keyword   |   z:boolean
10001          |2                |true               |M              |bilingual           |5               |M              |true           
10002          |5                |true               |F              |polyglot            |5               |F              |true           
10003          |4                |false              |M              |polyglot            |5               |M              |false          
10004          |5                |true               |M              |polyglot            |5               |M              |true           
10005          |1                |true               |M              |monolingual         |5               |M              |true
;

groupByMultipleRenamedColumns_AndComplexEval
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, still_hired, gender
| EVAL multilingual = CASE(languages <= 1, "monolingual", languages <= 2, "bilingual", "polyglot")
| INLINE STATS max_lang = MAX(languages) BY y = gender, z = still_hired, m = multilingual
| SORT emp_no ASC
| LIMIT 5
;

emp_no:integer |languages:integer|still_hired:boolean| gender:keyword|multilingual:keyword|max_lang:integer|   y:keyword   |   z:boolean   |m:keyword
10001          |2                |true               |M              |bilingual           |2               |M              |true           |bilingual      
10002          |5                |true               |F              |polyglot            |5               |F              |true           |polyglot       
10003          |4                |false              |M              |polyglot            |5               |M              |false          |polyglot       
10004          |5                |true               |M              |polyglot            |5               |M              |true           |polyglot       
10005          |1                |true               |M              |monolingual         |1               |M              |true           |monolingual
;

groupByMultipleRenamedColumns_AndConstantValue
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, first_name
| EVAL x = "ABC"
| INLINE STATS max_lang = MAX(languages) BY y = gender, l = languages, f = to_lower(x)
| SORT emp_no
| LIMIT 10
;

emp_no:integer |languages:integer|gender:keyword |first_name:keyword  |   x:keyword   |max_lang:integer|   y:keyword   |   l:integer   |f:keyword       
10001          |2                |M              |Georgi              |ABC            |2               |M              |2              |abc            
10002          |5                |F              |Bezalel             |ABC            |5               |F              |5              |abc            
10003          |4                |M              |Parto               |ABC            |4               |M              |4              |abc            
10004          |5                |M              |Chirstian           |ABC            |5               |M              |5              |abc            
10005          |1                |M              |Kyoichi             |ABC            |1               |M              |1              |abc            
10006          |3                |F              |Anneke              |ABC            |3               |F              |3              |abc            
10007          |4                |F              |Tzvetan             |ABC            |4               |F              |4              |abc            
10008          |2                |M              |Saniya              |ABC            |2               |M              |2              |abc            
10009          |1                |F              |Sumant              |ABC            |1               |F              |1              |abc            
10010          |4                |null           |Duangkaew           |ABC            |4               |null           |4              |abc            
;

groupByRenamedExpression
required_capability: inline_stats

FROM employees
| KEEP emp_no, languages, gender, last_name
| WHERE gender IS NOT NULL
| INLINE STATS max_lang = MAX(languages), min_lang = MIN(languages) BY f = left(last_name, 1), gender
| SORT last_name DESC
| LIMIT 8
;

emp_no:integer |languages:integer|last_name:keyword|max_lang:integer|min_lang:integer|  f:keyword    | gender:keyword     
10053          |3                |Zschoche         |4               |3               |Z              |F              
10083          |1                |Zockler          |1               |1               |Z              |M              
10007          |4                |Zielinski        |4               |3               |Z              |F              
10097          |3                |Waschkowski      |3               |3               |W              |M              
10020          |null             |Warwick          |3               |3               |W              |M              
10043          |1                |Tzvieli          |1               |1               |T              |M              
10049          |5                |Tramer           |5               |5               |T              |F              
10028          |null             |Tempesti         |1               |1               |T              |M            
;

doubleFilterOnLeftAndRight_InlineStats_Sides
required_capability: inline_stats
  
FROM employees
| INLINE STATS max_salary = MAX(salary), min_salary = MIN(salary) by languages
| KEEP emp_no, languages, *salary
| WHERE salary > 65000 and languages > 2
| SORT emp_no
;

emp_no:integer |languages:integer|salary:integer |max_salary:integer|min_salary:integer   
10007          |4                |74572          |74572             |27215          
10030          |3                |67492          |74970             |26436          
10045          |3                |74970          |74970             |26436          
10054          |4                |65367          |74572             |27215          
10062          |3                |65030          |74970             |26436          
10094          |5                |66817          |66817             |25324          
10097          |3                |71165          |74970             |26436          
10100          |4                |68431          |74572             |27215          
;

filterOnInlineStatsAggs
required_capability: inline_stats

FROM employees
| INLINE STATS max_salary = MAX(salary), min_salary = MIN(salary) by languages
| KEEP emp_no, languages, *salary
| WHERE min_salary > 27000 or max_salary < 70000
| sort salary desc
| limit 5
;

emp_no:integer |languages:integer|salary:integer |max_salary:integer|min_salary:integer
10029          |null             |74999          |74999             |28336          
10007          |4                |74572          |74572             |27215          
10027          |null             |73851          |74999             |28336          
10099          |2                |73578          |73578             |29175          
10078          |2                |69904          |73578             |29175          
;

filterOnInlineStatsAggsValues_And_Groupings
required_capability: inline_stats

FROM employees
| INLINE STATS max_salary = MAX(salary), min_salary = MIN(salary) by languages
| KEEP emp_no, languages, *salary
| WHERE (min_salary > 27000 or max_salary < 70000) and languages > 3
| sort salary
| limit 5
;

emp_no:integer |languages:integer|salary:integer |max_salary:integer|min_salary:integer
10015          |5                |25324          |66817             |25324          
10035          |5                |25945          |66817             |25324          
10057          |4                |27215          |74572             |27215          
10011          |5                |31120          |66817             |25324          
10066          |5                |31897          |66817             |25324          
;

inlineStatsOverrideEVALed_FieldWithSameName
required_capability: inline_stats

FROM hosts METADATA _index
| EVAL x = ip1
| INLINE STATS ip1 = COUNT(*) BY host_group, card
| SORT ip1 DESC, x
| LIMIT 1
;

description:text|  host:keyword |   ip0:ip      | _index:keyword |   x:ip  | ip1:long |  host_group:text | card:keyword
beta k8s server |beta           |127.0.0.1      |hosts           |127.0.0.2|2         |Kubernetes cluster|eth1
;

inlineStatsOverrideEVALed_FieldWithSameNameNoIndex
required_capability: inline_stats

FROM hosts
| EVAL x = ip1
| INLINE STATS ip1 = COUNT(*) BY host_group, card
| SORT ip1 DESC, x
| LIMIT 1
;

description:text|  host:keyword |   ip0:ip      |   x:ip  | ip1:long |  host_group:text | card:keyword
beta k8s server |beta           |127.0.0.1      |127.0.0.2|2         |Kubernetes cluster|eth1
;

doubleShadowing
required_capability: inline_stats

FROM employees
| INLINE STATS salary = min(salary) BY gender
| INLINE STATS salary = max(salary) BY gender
| KEEP salary, gender
| SORT salary DESC, gender 
| LIMIT 5
;

salary:integer |gender:keyword
25976          |F              
25976          |F              
25976          |F              
25976          |F              
25976          |F
;

doubleShadowing_WithIntertwinedFilters
required_capability: inline_stats

FROM employees
| WHERE salary > 30000
| INLINE STATS salary = min(salary) BY gender
| WHERE salary > 31000
| INLINE STATS salary = max(salary) BY gender
| WHERE salary < 31500
| KEEP salary, gender
| SORT salary DESC, gender 
;

salary:integer |gender:keyword
31120          |null           
31120          |null           
31120          |null           
31120          |null           
31120          |null           
31120          |null           
31120          |null           
31120          |null           
31120          |null
;

shadowingAggregateByNextGrouping
required_capability: inline_stats

FROM employees
| KEEP gender, languages, emp_no, salary
| INLINE STATS gender = count_distinct(gender) BY languages
| INLINE STATS avg(salary) BY gender
| SORT emp_no
| LIMIT 3
;

emp_no:integer |salary:integer |languages:integer|avg(salary):double|gender:long     
10001          |57305          |2                |48248.55          |2              
10002          |56371          |5                |48248.55          |2              
10003          |61805          |4                |48248.55          |2              
;

doubleShadowingWithEval
required_capability: inline_stats

from employees
| eval salary = salary/100
| inline stats salary=min(salary) by gender
| inline stats salary=max(salary) by gender
| keep salary, gender
| sort salary desc, gender
| limit 5
;

salary:integer|gender:keyword
259           |F              
259           |F              
259           |F              
259           |F              
259           |F
;

doubleShadowingWithDoubleStats
required_capability: inline_stats

from employees
| stats salary=min(salary) by gender
| stats salary=max(salary) by gender
| inline stats salary=min(salary)
| inline stats salary=max(salary)
;
ignoreOrder:true

gender:keyword |salary:integer    
null           |25324          
F              |25324          
M              |25324
;

renamingGroupingWithItself
required_capability: inline_stats

FROM employees
| EVAL x = gender
| INLINE STATS min_sl = MIN(salary) BY x = x
| SORT salary DESC
| KEEP salary, x, gender, min_sl, emp_no
| LIMIT 5
;

salary:integer |x:keyword|gender:keyword |min_sl:integer |emp_no:integer     
74999          |M        |M              |25945          |10029          
74970          |M        |M              |25945          |10045          
74572          |F        |F              |25976          |10007          
73851          |F        |F              |25976          |10027          
73717          |null     |null           |25324          |10019
;

overridingGroupings
required_capability: inline_stats

FROM employees
| INLINE STATS min_sl = MIN(salary) BY x = gender, x = languages
| KEEP salary, x, gender, min_sl, emp_no
| SORT salary
| LIMIT 5
;
warning:Line 2:40: Field 'x' shadowed by field at line 2:52

salary:integer |x:integer      |gender:keyword |min_sl:integer |emp_no:integer    
25324          |5              |null           |25324          |10015          
25945          |5              |M              |25324          |10035          
25976          |1              |F              |25976          |10092          
26436          |3              |M              |26436          |10048          
27215          |4              |F              |27215          |10057
;

overridingExpressionGroupings
required_capability: inline_stats

FROM employees
| INLINE STATS min_sl = MIN(salary) BY x = TO_LOWER(gender), x = CONCAT(gender, gender)
| SORT salary DESC
| KEEP salary, x, gender, min_sl, emp_no
| LIMIT 5
;
warning:Line 2:40: Field 'x' shadowed by field at line 2:62

salary:integer |x:keyword      |gender:keyword |min_sl:integer |emp_no:integer 
74999          |MM             |M              |25945          |10029          
74970          |MM             |M              |25945          |10045          
74572          |FF             |F              |25976          |10007          
73851          |FF             |F              |25976          |10027          
73717          |null           |null           |25324          |10019          
;

reusingEvalExpressions_UsedInGroupings
required_capability: inline_stats

FROM employees
| KEEP salary, gender, emp_no
| EVAL x = TO_LOWER(gender), x = CONCAT(x, " ", x)
| INLINE STATS min_sl = MIN(salary) BY x
| SORT salary DESC
| LIMIT 5
;

salary:integer |gender:keyword |emp_no:integer |min_sl:integer |       x:keyword       
74999          |M              |10029          |25945          |m m            
74970          |M              |10045          |25945          |m m            
74572          |F              |10007          |25976          |f f            
73851          |F              |10027          |25976          |f f            
73717          |null           |10019          |25324          |null           
;

statsBeforeInlinestatsWithTopAndBucket1
required_capability: inline_stats

FROM books
| STATS avg_rating = AVG(ratings) BY decade = BUCKET(year, 10)
| INLINE STATS decades = TOP(decade, 3, "DESC")
| SORT avg_rating DESC
| LIMIT 10
;

avg_rating:double | decade:double |    decades:double
4.954999923706055 |1960.0         |[2020.0, 2010.0, 2000.0]
4.387647109873154 |1990.0         |[2020.0, 2010.0, 2000.0]
4.339166651169459 |2000.0         |[2020.0, 2010.0, 2000.0]
4.274615342800434 |2010.0         |[2020.0, 2010.0, 2000.0]
4.063333352406819 |1970.0         |[2020.0, 2010.0, 2000.0]
3.880000114440918 |2020.0         |[2020.0, 2010.0, 2000.0]
3.6633334159851074|1980.0         |[2020.0, 2010.0, 2000.0]
;

statsBeforeInlinestatsWithTopAndBucket2
required_capability: inline_stats

FROM sample_data
| STATS total_duration = SUM(event_duration) BY day = BUCKET(@timestamp, 1 HOUR)
| INLINE STATS days = TOP(day, 2, "ASC")
| SORT total_duration ASC
| LIMIT 5
;

total_duration:long |       day:date         |                     days:date                     
6215122             |2023-10-23T12:00:00.000Z|[2023-10-23T12:00:00.000Z, 2023-10-23T13:00:00.000Z]
17016205            |2023-10-23T13:00:00.000Z|[2023-10-23T12:00:00.000Z, 2023-10-23T13:00:00.000Z]
;

evalBeforeDoubleInlinestats1
required_capability: inline_stats

FROM employees
| EVAL salaryK = salary/1000
| INLINE STATS count = COUNT(*) BY salaryK
| INLINE STATS min = MIN(MV_COUNT(languages)) BY salaryK
| SORT emp_no
| KEEP emp_no, still_hired, count
| LIMIT 5
;

emp_no:integer |still_hired:boolean|count:long
10001          |true               |1
10002          |true               |3
10003          |false              |2
10004          |true               |2
10005          |true               |1
;

evalBeforeDoubleInlinestats2
required_capability: inline_stats

FROM employees
| EVAL jobs = MV_COUNT(job_positions)
| INLINE STATS count = COUNT(*) BY jobs
| INLINE STATS min = MIN(MV_COUNT(languages)) BY jobs
| SORT emp_no
| KEEP emp_no, jobs, count, min
| LIMIT 5
;

emp_no:integer |jobs:integer|count:long|min:integer
10001          |2           |18        |1
10002          |1           |27        |1
10003          |null        |11        |1
10004          |4           |26        |1
10005          |null        |11        |1
;

evalBeforeInlinestatsAndKeepAfter1
required_capability: inline_stats

FROM employees
| WHERE still_hired == false
| EVAL sal = salary/1000
| INLINE STATS totalK = SUM(sal), count=COUNT(*) BY gender
| KEEP emp_no, still_hired, totalK, count
| SORT emp_no
| LIMIT 5
;

emp_no:integer |still_hired:boolean|totalK:long|count:long
10003          |false              |1567       |32
10006          |false              |810        |16
10009          |false              |810        |16
10010          |false              |378        |7
10012          |false              |378        |7
;

evalBeforeInlinestatsAndKeepAfter2
required_capability: inline_stats

FROM employees
| EVAL salaryK = salary/1000
| INLINE STATS total = SUM(salaryK), count=COUNT(*) BY gender
| KEEP emp_no, still_hired, total, count
| WHERE still_hired == false
| SORT emp_no
| LIMIT 5
;

emp_no:integer |still_hired:boolean|total:long|count:long
10003          |false              |2644      |57
10006          |false              |1648      |33
10009          |false              |1648      |33
10010          |false              |482       |10
10012          |false              |482       |10
;

evalBeforeInlinestatsAndKeepAfter3
required_capability: inline_stats

FROM employees
| EVAL salaryK = salary/1000
| INLINE STATS total = SUM(salaryK) BY gender
| KEEP emp_no, still_hired, total
| SORT emp_no
| LIMIT 5
;

emp_no:integer |still_hired:boolean|total:long
10001          |true               |2644
10002          |true               |1648
10003          |false              |2644
10004          |true               |2644
10005          |true               |2644
;

evalBeforeInlinestatsAndKeepAfter4
required_capability: inline_stats

FROM employees
| EVAL salaryK = salary/1000
| INLINE STATS count = COUNT(*) BY salaryK
| KEEP emp_no, still_hired, count
| SORT emp_no
| LIMIT 5
;

emp_no:integer |still_hired:boolean|count:long
10001          |true               |1
10002          |true               |3
10003          |false              |2
10004          |true               |2
10005          |true               |1
;

evalBeforeInlinestatsAndKeepAfter5
required_capability: inline_stats

ROW salary = 12300, emp_no = 5, gender = "F"
| EVAL salaryK = salary/1000
| INLINE STATS sum = SUM(salaryK) BY gender
| KEEP emp_no
;

emp_no:integer
5
;
///////////////////////////
// INLINE STATS with filters
///////////////////////////

doubleFilterOnInlineStats
required_capability: inline_stats

from employees
| keep salary, gender
| inline stats max1 = max(salary) where salary < 60000,
              max2 = max(salary) where salary < 70000 AND salary >= 60000,
              max3 = max(salary) where salary >= 70000
  by gender
| sort salary desc
| limit 10
;

salary:integer |  max1:integer |  max2:integer |  max3:integer | gender:keyword     
74999          |58121          |68547          |74999          |M              
74970          |58121          |68547          |74999          |M              
74572          |56415          |69904          |74572          |F              
73851          |56415          |69904          |74572          |F              
73717          |58715          |61358          |73717          |null           
73578          |56415          |69904          |74572          |F              
71165          |58121          |68547          |74999          |M              
70011          |58121          |68547          |74999          |M              
69904          |56415          |69904          |74572          |F              
68547          |58121          |68547          |74999          |M
;

inlinestatsWithFiltering
required_capability: inline_stats
from employees
| inline stats max = max(salary), max_f = max(salary) where salary < 50000, max_a = max(salary) where salary > 100,
        min = min(salary), min_f = min(salary) where salary > 50000, min_a = min(salary) where salary > 100
| keep max*, min*, salary
| sort salary asc
| limit 3
;

max:integer |max_f:integer |max_a:integer | min:integer | min_f:integer | min_a:integer | salary:integer
74999       |49818         |74999         |25324        |50064          |25324          |25324          
74999       |49818         |74999         |25324        |50064          |25324          |25945          
74999       |49818         |74999         |25324        |50064          |25324          |25976          
;

inlinestatsWithEverythingFiltered
required_capability: inline_stats
from employees
| inline stats max = max(salary), max_a = max(salary) where salary < 100,
        min = min(salary), min_a = min(salary) where salary > 99999
| keep max*, min*, emp_no*, salary
| sort emp_no desc
| limit 5
;

max:integer |max_a:integer|min:integer | min_a:integer | emp_no:integer|salary:integer
74999       |null         |25324       |null           |10100          |68431          
74999       |null         |25324       |null           |10099          |73578          
74999       |null         |25324       |null           |10098          |44817          
74999       |null         |25324       |null           |10097          |71165          
74999       |null         |25324       |null           |10096          |43889
;

inlinestatsWithNullFilter
required_capability: inline_stats
from employees
| inline stats max = max(salary), max_a = max(salary) where null,
        min = min(salary), min_a = min(salary) where to_string(null) == "abc"
| keep max*, min*, emp_no
| sort emp_no
| limit 3
;

max:integer |max_a:integer|min:integer | min_a:integer | emp_no:integer
74999       |null         |25324       |null           |10001          
74999       |null         |25324       |null           |10002          
74999       |null         |25324       |null           |10003        
;

inlinestatsWithAllFiltersFalse
required_capability: inline_stats
from employees
| inline stats max = max(height.float) where false,
        min = min(height.float) where to_string(null) == "abc",
        count = count(height.float) where false,
        count_distinct = count_distinct(salary) where to_string(null) == "def"
| sort emp_no desc
| keep emp_no, salary, max, min, count*
| limit 3
;

emp_no:integer|salary:integer| max:double |min:double |count:long |count_distinct:long
10100         |68431         |null        |null       |0          |0
10099         |73578         |null        |null       |0          |0              
10098         |44817         |null        |null       |0          |0
;

inlinestatsWithAllFiltersFalse_GroupByOneField
required_capability: inline_stats
from employees
| inline stats max = max(height.float) where false, 
        min = min(height.float) where to_string(null) == "abc", 
        count = count(height.float) where false, 
        count_distinct = count_distinct(salary) where to_string(null) == "def" by gender
| sort emp_no desc
| keep emp_no, salary, max, min, count*, gender
| limit 5
;

    emp_no:i   |    salary:i   |      max:d    |      min:d    |     count:l   |count_distinct:l|    gender:s     
10100          |68431          |null           |null           |0              |0               |F              
10099          |73578          |null           |null           |0              |0               |F              
10098          |44817          |null           |null           |0              |0               |F              
10097          |71165          |null           |null           |0              |0               |M              
10096          |43889          |null           |null           |0              |0               |M              
;

inlinestatsWithAllFiltersFalse_GroupByTwoFields
required_capability: inline_stats
from employees
| inline stats max = max(height.float) where false, 
        min = min(height.float) where to_string(null) == "abc", 
        count = count(height.float) where false, 
        count_distinct = count_distinct(salary) where to_string(null) == "def" by gender, languages
| sort emp_no desc
| keep emp_no, salary, max, min, count*, gender, languages
| limit 5
;

    emp_no:i   |    salary:i   |      max:d    |      min:d    |     count:l   |count_distinct:l|    gender:s  |languages:i   
10100          |68431          |null           |null           |0              |0               |F              |4              
10099          |73578          |null           |null           |0              |0               |F              |2              
10098          |44817          |null           |null           |0              |0               |F              |4              
10097          |71165          |null           |null           |0              |0               |M              |3              
10096          |43889          |null           |null           |0              |0               |M              |4              
;

prunedInlinestatsFollowedByInlinestats_GroupByOneFieldEach_DifferentFields
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(my_length) where false,
        values = mv_slice(values(first_name), 0, 1) where my_length > 0 by languages
| keep emp_no, first_name, *length, count, values, languages, gender
| inline stats count_distinct = count_distinct(count) by gender
| sort emp_no
| limit 3
;

    emp_no:i   |  first_name:s |   my_length:i |     count:l   |    values:s   |   languages:i |count_distinct:l|    gender:s     
10001          |Georgi         |null           |0              |null           |2              |1               |M              
10002          |Bezalel        |null           |0              |null           |5              |1               |F              
10003          |Parto          |null           |0              |null           |4              |1               |M              
;

prunedInlinestatsFollowedByInlinestats_GroupByOneFieldEach_SameFields
required_capability: inline_stats
from employees 
| eval my_length = length(concat(first_name, null)) 
| inline stats count = count(my_length) where false,
        values = mv_slice(values(first_name), 0, 1) where my_length > 0 by languages
| keep emp_no, first_name, *length, count, values, languages, gender
| inline stats count_distinct = count_distinct(count) by languages
| sort emp_no
| limit 3
;

    emp_no:i   |  first_name:s |   my_length:i |     count:l   |    values:s   |   gender:s    |count_distinct:l|   languages:i   
10001          |Georgi         |null           |0              |null           |M              |1               |2              
10002          |Bezalel        |null           |0              |null           |F              |1               |5              
10003          |Parto          |null           |0              |null           |M              |1               |4             
;

prunedInlinestatsFollowedByInlinestats_GroupByOneFieldOnSecondInlinestats-Ignore
// values doesn't end up as null
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(my_length) where false, 
        values = mv_slice(values(first_name), 0, 1) where my_length > 0
| keep emp_no, first_name, *length, count, values, languages, gender
| inline stats count_distinct = count_distinct(count) by languages
| sort emp_no
| limit 3
; 

    emp_no:i   |  first_name:s |   my_length:i |     count:l   |    values:s |    gender:s   |count_distinct:l|   languages:i   
10001          |Georgi         |null           |0              |null         |M              |1               |2              
10002          |Bezalel        |null           |0              |null         |F              |1               |5              
10003          |Parto          |null           |0              |null         |M              |1               |4             
; 

partial_PrunedInlinestatsFollowedByInlinestats_GroupByOneFieldOnFirstInlinestats
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(is_rehired) where true, 
        values = mv_slice(values(first_name), 0, 1) where my_length > 0 by gender
| keep emp_no, first_name, *length, count, values, languages, gender
| inline stats count_distinct = count_distinct(count)
| sort emp_no
| limit 10
; 

    emp_no:i   |  first_name:s |   my_length:i |     count:l   |    values:s   |   languages:i |    gender:s   |count_distinct:l 
10001          |Georgi         |null           |111            |null           |2              |M              |3              
10002          |Bezalel        |null           |65             |null           |5              |F              |3              
10003          |Parto          |null           |111            |null           |4              |M              |3              
10004          |Chirstian      |null           |111            |null           |5              |M              |3              
10005          |Kyoichi        |null           |111            |null           |1              |M              |3              
10006          |Anneke         |null           |65             |null           |3              |F              |3              
10007          |Tzvetan        |null           |65             |null           |4              |F              |3              
10008          |Saniya         |null           |111            |null           |2              |M              |3              
10009          |Sumant         |null           |65             |null           |1              |F              |3              
10010          |Duangkaew      |null           |28             |null           |4              |null           |3              
;


partial_PrunedInlinestatsFollowedByInlinestats_GroupByOneFieldOnFirstInlinestats2
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(is_rehired) where true, 
        values = mv_slice(values(first_name), 0, 1) where my_length > 0,
        count_d = count_distinct(is_rehired) by gender
| keep emp_no, first_name, *length, count*, values, languages, gender
| inline stats count_distinct = count_distinct(count)
| sort emp_no
| limit 10
; 

    emp_no:i   |  first_name:s |   my_length:i |     count:l   |    count_d:l  |    values:s   |   languages:i |    gender:s   |count_distinct:l 
10001          |Georgi         |null           |111            |2              |null           |2              |M              |3              
10002          |Bezalel        |null           |65             |2              |null           |5              |F              |3              
10003          |Parto          |null           |111            |2              |null           |4              |M              |3              
10004          |Chirstian      |null           |111            |2              |null           |5              |M              |3              
10005          |Kyoichi        |null           |111            |2              |null           |1              |M              |3              
10006          |Anneke         |null           |65             |2              |null           |3              |F              |3              
10007          |Tzvetan        |null           |65             |2              |null           |4              |F              |3              
10008          |Saniya         |null           |111            |2              |null           |2              |M              |3              
10009          |Sumant         |null           |65             |2              |null           |1              |F              |3              
10010          |Duangkaew      |null           |28             |2              |null           |4              |null           |3              
;


inlinestatsWithExpressionsAllFiltersFalse
required_capability: inline_stats
from employees
| keep height.f*, emp_no
| sort emp_no desc
| inline stats max = max(height.float + 1) where null,
        count = count(height.float) + 2 where false,
        mix = min(height.float + 1) + count_distinct(emp_no) + 2 where length(null) == 3
| limit 3
| drop height.float
;

    emp_no:i   |      max:d    |     count:l   |      mix:d      
10100          |null           |2              |null           
10099          |null           |2              |null           
10098          |null           |2              |null           
;

inlinestatsWithFalseFilterAndGroup
required_capability: inline_stats
from employees
| inline stats max = max(height.float + 1) where null,
        count = count(height.float) + 2 where false
  by job_positions
| sort emp_no desc
| limit 4
| keep emp_no, job_positions, height.float, max, count
;

    emp_no:i   |          job_positions:s                |   height.float:d |      max:d    |     count:l     
10100          |Purchase Manager                         |1.7699999809265137|null           |2              
10099          |null                                     |1.809999942779541 |null           |2              
10098          |[Architect, Internship, Senior Team Lead]|2.0               |null           |[2, 2, 2]      
10097          |[Reporting Analyst, Tech Lead]           |1.5299999713897705|null           |[2, 2]         
;

inlinestatsWithFalseFiltersAndGroups
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count_distinct = count_distinct(height.float + 1) where null,
        count = count(height.float) + 2 where false,
        values = values(first_name) where my_length > 3
  by job_positions, is_rehired
| sort emp_no desc
| limit 10
| keep emp_no, my_length, count*, values, job_positions, is_rehired
;

 emp_no:integer|my_length:integer|count_distinct:long|     count:long   |values:keyword |                            job_positions:keyword                           |    is_rehired:boolean        
10100          |null             |[0, 0]             |[2, 2]            |null           |Purchase Manager                                                            |[false, false, true, true]
10099          |null             |0                  |2                 |null           |null                                                                        |[true, true]              
10098          |null             |[0, 0, 0]          |[2, 2, 2]         |null           |[Architect, Internship, Senior Team Lead]                                   |false                     
10097          |null             |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Reporting Analyst, Tech Lead]                                              |[false, true]             
10096          |null             |[0, 0]             |[2, 2]            |null           |[Architect, Reporting Analyst]                                              |[false, false, false]     
10095          |null             |[0, 0]             |[2, 2]            |null           |null                                                                        |[false, false, true, true]
10094          |null             |[0, 0, 0, 0, 0, 0] |[2, 2, 2, 2, 2, 2]|null           |[Accountant, Principal Support Engineer, Senior Python Developer]           |[false, true, true]       
10093          |null             |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Principal Support Engineer, Purchase Manager, Reporting Analyst, Tech Lead]|null                      
10092          |null             |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Accountant, Junior Developer]                                              |[false, false, true, true]
10091          |null             |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Python Developer, Reporting Analyst]                                       |[false, false, true, true]
;

inlinestatsWithFalseFiltersAndGroups_DropEvaledValue
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count_distinct = count_distinct(height.float + 1) where null,
        count = count(height.float) + 2 where false,
        values = values(first_name) where my_length > 3
  by job_positions, is_rehired
| sort emp_no desc
| limit 10
| keep emp_no, count*, values, job_positions, is_rehired
;


 emp_no:integer|count_distinct:long|     count:long   |values:keyword |                            job_positions:keyword                           |    is_rehired:boolean        
10100          |[0, 0]             |[2, 2]            |null           |Purchase Manager                                                            |[false, false, true, true]
10099          |0                  |2                 |null           |null                                                                        |[true, true]              
10098          |[0, 0, 0]          |[2, 2, 2]         |null           |[Architect, Internship, Senior Team Lead]                                   |false                     
10097          |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Reporting Analyst, Tech Lead]                                              |[false, true]             
10096          |[0, 0]             |[2, 2]            |null           |[Architect, Reporting Analyst]                                              |[false, false, false]     
10095          |[0, 0]             |[2, 2]            |null           |null                                                                        |[false, false, true, true]
10094          |[0, 0, 0, 0, 0, 0] |[2, 2, 2, 2, 2, 2]|null           |[Accountant, Principal Support Engineer, Senior Python Developer]           |[false, true, true]       
10093          |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Principal Support Engineer, Purchase Manager, Reporting Analyst, Tech Lead]|null                      
10092          |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Accountant, Junior Developer]                                              |[false, false, true, true]
10091          |[0, 0, 0, 0]       |[2, 2, 2, 2]      |null           |[Python Developer, Reporting Analyst]                                       |[false, false, true, true]
;

inlinestatsWithMixedFiltersAndGroup
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(my_length) where false,
        values = mv_slice(mv_sort(values(first_name)), 0, 1)
  by job_positions
| sort emp_no
| limit 4
| keep *length, count, values, job_positions, emp_no
;

my_length:integer| count:long    |                            values:keyword                             |                        job_positions:keyword                         |emp_no:integer     
null             |[0, 0]         |[Arumugam, Bojan, Arumugam, Basil]                                     |[Accountant, Senior Python Developer]                                 |10001          
null             |0              |[Alejandro, Anneke]                                                    |Senior Team Lead                                                      |10002          
null             |0              |[Gino, Heping]                                                         |null                                                                  |10003          
null             |[0, 0, 0, 0]   |[Berni, Chirstian, Amabile, Berni, Bojan, Chirstian, Anneke, Chirstian]|[Head Human Resources, Reporting Analyst, Support Engineer, Tech Lead]|10004          
;

prunedInlinestatsFollowedByinlinestats-Ignore
// values doesn't end up as null
required_capability: inline_stats
from employees
| eval my_length = length(concat(first_name, null))
| inline stats count = count(my_length) where false,
        values = mv_slice(values(first_name), 0, 1) where my_length > 0
| keep emp_no, first_name, *length, count, values
| inline stats count_distinct = count_distinct(count)
| sort emp_no
| limit 3
;

    emp_no:i   |  first_name:s |  my_length:i  |     count:l   | values:s |count_distinct:l
10001          |Georgi         |null           |0              |null      |1              
10002          |Bezalel        |null           |0              |null      |1              
10003          |Parto          |null           |0              |null      |1              
;

inlinestatsWithFalseFiltersFromRow
// is this result correct? The stats variant of this query has this result:
//  c:integer |b:integer
//  null      |2
//  null      |3
//  null      |4
// TODO: add docs about whatever behavior is decided here
required_capability: inline_stats
row x = null, a = 1, b = [2,3,4]
| inline stats c=max(a) where x
  by b
;

    x:null     |   a:integer   |   c:integer   |  b:integer       
null           |1              |null           |[2, 3, 4]
;

inlinestatsWithBasicExpressionFiltered
required_capability: inline_stats
from employees
| inline stats max = max(salary), max_f = max(salary) where salary < 50000,
        min = min(salary), min_f = min(salary) where salary > 50000,
        exp_p = max(salary) + 10000 where salary < 50000,
        exp_m = min(salary) % 10000 where salary > 50000
| keep max*, min*, exp*, emp_no | sort emp_no | limit 3
;

      max:i    |     max_f:i   |      min:i    |     min_f:i   |     exp_p:i   |     exp_m:i   |    emp_no:i     
74999          |49818          |25324          |50064          |59818          |64             |10001          
74999          |49818          |25324          |50064          |59818          |64             |10002          
74999          |49818          |25324          |50064          |59818          |64             |10003          
;

inlinestatsWithExpressionOverFilters
required_capability: inline_stats
from employees
| inline stats max = max(salary), max_f = max(salary) where salary < 50000,
        min = min(salary), min_f = min(salary) where salary > 50000,
        exp_gt = max(salary) - min(salary) where salary > 50000,
        exp_lt = max(salary) - min(salary) where salary < 50000
| keep max*, min*, exp*, emp_no
| sort emp_no
| limit 3          
;

      max:i    |     max_f:i   |      min:i    |     min_f:i   |    exp_gt:i   |    exp_lt:i   |    emp_no:i     
74999          |49818          |25324          |50064          |24935          |24494          |10001          
74999          |49818          |25324          |50064          |24935          |24494          |10002          
74999          |49818          |25324          |50064          |24935          |24494          |10003          
;


inlinestatsWithExpressionOfExpressionsOverFilters
required_capability: inline_stats
from employees
| inline stats max = max(salary + 1), max_f = max(salary + 2) where salary < 50000,
        min = min(salary - 1), min_f = min(salary - 2) where salary > 50000,
        exp_gt = max(salary + 3) - min(salary - 3) where salary > 50000,
        exp_lt = max(salary + 4) - min(salary - 4) where salary < 50000
| keep max*, min*, exp*, emp_no
| sort emp_no
| limit 3
;

      max:i    |     max_f:i   |      min:i    |     min_f:i   |    exp_gt:i   |    exp_lt:i   |    emp_no:i     
75000          |49820          |25323          |50062          |24941          |24502          |10001          
75000          |49820          |25323          |50062          |24941          |24502          |10002          
75000          |49820          |25323          |50062          |24941          |24502          |10003          
;

inlinestatsWithSubstitutedExpressionOverFilters
required_capability: inline_stats
from employees
| inline stats sum = sum(salary), s_l = sum(salary) where salary < 50000, s_u = sum(salary) where salary > 50000,
        count = count(salary), c_l = count(salary) where salary < 50000, c_u = count(salary) where salary > 50000, 
        avg = round(avg(salary), 2), a_l = round(avg(salary), 2) where salary < 50000, a_u = round(avg(salary),2) where salary > 50000
| keep sum, s_*, count, c_*, avg, a_*, emp_no
| sort emp_no
| limit 3
;

      sum:l    |      s_l:l    |      s_u:l    |     count:l   |      c_l:l    |      c_u:l    |      avg:d    |      a_l:d    |      a_u:d    |    emp_no:i
4824855        |2220951        |2603904        |100            |58             |42             |48248.55       |38292.26       |61997.71       |10001          
4824855        |2220951        |2603904        |100            |58             |42             |48248.55       |38292.26       |61997.71       |10002          
4824855        |2220951        |2603904        |100            |58             |42             |48248.55       |38292.26       |61997.71       |10003          
;


inlinestatsWithFilterAndGroupBy
required_capability: inline_stats
from employees
| keep height, gender, is_rehired, emp_no
| inline stats m = max(height), m_f = max(height + 1) where gender == "M" OR is_rehired is null BY gender, is_rehired
| sort emp_no
| drop height
| limit 10
;

    emp_no:i   |       m:d     |      m_f:d    |    gender:s   |        is_rehired:boolean         
10001          |[2.1, 2.1]     |[3.1, 3.1]     |M              |[false, true]              
10002          |2.1            |null           |F              |[false, false]             
10003          |2.01           |3.01           |M              |null                       
10004          |2.1            |3.1            |M              |true                       
10005          |[2.1, 2.1]     |[3.1, 3.1]     |M              |[false, false, false, true]
10006          |1.85           |2.85           |F              |null                       
10007          |[2.1, 2.1]     |null           |F              |[false, false, true, true] 
10008          |[2.1, 2.1]     |[3.1, 3.1]     |M              |[false, true]              
10009          |1.85           |2.85           |F              |null                       
10010          |[2.06, 1.97]   |null           |null           |[false, false, true, true] 
;


inlinestatsWithFilterOnGroupBy
required_capability: inline_stats
from employees
| inline stats m_f = max(height) where gender == "M" BY gender
| sort emp_no
| keep gender, m_f
| limit 10
;

    gender:s   |      m_f:d      
M              |2.1            
F              |null           
M              |2.1            
M              |2.1            
M              |2.1            
F              |null           
F              |null           
M              |2.1            
F              |null           
null           |null           
;

inlinestatsWithGroupByLiteral
required_capability: inline_stats
from employees
| inline stats m = max(languages) by salary = 2
| sort salary
| keep m, salary
| limit 3
;

       m:i     |    salary:i
5              |2              
5              |2              
5              |2              
;


inlinestatsWithFilterOnSameColumn
required_capability: inline_stats
from employees
| inline stats m = max(languages), m_f = max(languages) where salary > 50000 by salary = 2
| sort salary
| keep m, m_f, salary
| limit 3
;

       m:i     |      m_f:i    |    salary:i
5              |null           |2              
5              |null           |2              
5              |null           |2              
;

inlinestatsWithFilteringAndGrouping
required_capability: inline_stats
from employees
| inline stats c = count(), c_f = count(languages) where l > 1, 
        m_f = max(height) where salary > 50000 
        by l = languages
| sort salary
| keep c, *_f, l, salary
| limit 10
;

       c:l     |      c_f:l    |      m_f:d    |       l:i     |    salary:i     
21             |21             |2.1            |5              |25324          
21             |21             |2.1            |5              |25945          
15             |0              |2.06           |1              |25976          
17             |17             |2.1            |3              |26436          
18             |18             |1.83           |4              |27215          
15             |0              |2.06           |1              |28035          
10             |0              |2.08           |null           |28336          
17             |17             |2.1            |3              |28941          
19             |19             |2.03           |2              |29175          
17             |17             |2.1            |3              |30404
;          

 
multiinlinestatsWithFiltering
required_capability: inline_stats
from employees
| inline stats c = count(), c_f = count(languages) where l > 1, 
        m_f = max(height) where salary > 50000 
        by l = languages
| inline stats c2 = count(), c2_f = count() where m_f > 2.06 , m2 = max(l), m2_f = max(l) where l > 1 by c
| sort emp_no
| where emp_no >= 10029 and emp_no <= 10039
| keep c, *_f, l, c2, m2
;

     c:l       |      c_f:l    |      m_f:d    |     c2_f:l    |     m2_f:i    |       l:i     |      c2:l     |      m2:i       
10             |0              |2.08           |10             |null           |null           |10             |null           
17             |17             |2.1            |17             |3              |3              |17             |3              
18             |18             |1.83           |0              |4              |4              |18             |4              
17             |17             |2.1            |17             |3              |3              |17             |3              
15             |0              |2.06           |0              |null           |1              |15             |1              
15             |0              |2.06           |0              |null           |1              |15             |1              
21             |21             |2.1            |21             |5              |5              |21             |5              
18             |18             |1.83           |0              |4              |4              |18             |4              
19             |19             |2.03           |0              |2              |2              |19             |2              
18             |18             |1.83           |0              |4              |4              |18             |4              
19             |19             |2.03           |0              |2              |2              |19             |2
;              


simpleCountOnFieldWithFilteringAndNoGrouping
required_capability: inline_stats
from employees
| inline stats c1 = count(emp_no) where emp_no < 10042
| keep emp_no, c1
| sort emp_no
| limit 3
;

emp_no:integer |  c1:long       
10001          |41             
10002          |41             
10003          |41             
;

simpleCountOnFieldWithFilteringOnDifferentFieldAndNoGrouping
required_capability: inline_stats
from employees
| inline stats c1 = count(hire_date) where emp_no < 10042
| keep emp_no, c1
| sort emp_no
| limit 3
;

emp_no:integer |  c1:long       
10001          |41             
10002          |41             
10003          |41             
;

simpleCountOnStarWithFilteringAndNoGrouping
required_capability: inline_stats
from employees
| inline stats c1 = count(*) where emp_no < 10042
| keep emp_no, c1
| sort emp_no
| limit 3
;

emp_no:integer |  c1:long       
10001          |41             
10002          |41             
10003          |41             
;

simpleCountWithFilteringAndNoGroupingOnFieldWithNulls
required_capability: inline_stats
from employees
| inline stats c1 = count(birth_date) where emp_no <= 10050
| keep emp_no, c1
| sort emp_no
| limit 3
;

emp_no:integer |  c1:long
10001          |40             
10002          |40             
10003          |40             
;


simpleCountWithFilteringAndNoGroupingOnFieldWithMultivalues
required_capability: inline_stats
from employees
| inline stats c1 = count(job_positions) where emp_no <= 10003
| keep emp_no, c1
| sort emp_no
| limit 3
;

 emp_no:integer|  c1:long       
10001          |3              
10002          |3              
10003          |3              
;

commonFilterExtractionWithAliasing
required_capability: inline_stats
from employees
| eval eno = emp_no
| drop emp_no
| inline stats min_sal = min(salary) where eno <= 10010,
        min_hei = min(height) where eno <= 10010
| keep eno, min_*
| sort eno
| limit 3
;

 eno:integer   |min_sal:integer|min_hei:double    
10001          |36174          |1.56           
10002          |36174          |1.56           
10003          |36174          |1.56           
;

commonFilterExtractionWithAliasAndOriginal
required_capability: inline_stats
from employees
| eval eno = emp_no
| inline stats min_sal = min(salary) where eno <= 10010,
        min_hei = min(height) where emp_no <= 10010
| keep emp_no, min_*
| sort emp_no
| limit 3
;

 emp_no:integer|min_sal:integer|min_hei:double    
10001          |36174          |1.56           
10002          |36174          |1.56           
10003          |36174          |1.56           
;


commonFilterExtractionWithAliasAndOriginalNeedingNormalization
required_capability: inline_stats
from employees
| eval eno = emp_no
| inline stats min_sal = min(salary) where eno <= 10010,
        min_hei = min(height) where emp_no <= 10010,
        max_hei = max(height) where 10010 >= emp_no
| keep eno, min*, max*
| sort eno
| limit 5
;

 eno:integer   |min_sal:integer|min_hei:double |max_hei:double    
10001          |36174          |1.56           |2.1            
10002          |36174          |1.56           |2.1            
10003          |36174          |1.56           |2.1            
10004          |36174          |1.56           |2.1            
10005          |36174          |1.56           |2.1            
;

commonFilterExtractionWithAliasAndOriginalNeedingNormalizationAndSimplification
required_capability: inline_stats
from employees
| eval eno = emp_no
| inline stats min_sal = min(salary) where eno <= 10010,
        min_hei = min(height) where not (emp_no > 10010),
        max_hei = max(height) where 10010 >= emp_no
| keep eno, min*, max*
| sort eno
| limit 5
;

 eno:integer   |min_sal:integer|min_hei:double |max_hei:double    
10001          |36174          |1.56           |2.1            
10002          |36174          |1.56           |2.1            
10003          |36174          |1.56           |2.1            
10004          |36174          |1.56           |2.1            
10005          |36174          |1.56           |2.1            
;

filterIsAlwaysTrue
required_capability: inline_stats
FROM employees
| inline stats max = max(salary) WHERE salary > 0
| keep max, salary, emp_no
| sort emp_no
| limit 3
;

  max:integer  |salary:integer | emp_no:integer     
74999          |57305          |10001          
74999          |56371          |10002          
74999          |61805          |10003          
;

filterIsAlwaysFalse
required_capability: inline_stats
FROM employees
| inline stats max = max(salary) WHERE first_name == ""
| sort emp_no
| keep max, first_name
| limit 10
;

   max:integer |first_name:keyword
null           |Georgi         
null           |Bezalel        
null           |Parto          
null           |Chirstian      
null           |Kyoichi        
null           |Anneke         
null           |Tzvetan        
null           |Saniya         
null           |Sumant         
null           |Duangkaew      
;


filterSometimesMatches
required_capability: inline_stats
FROM employees
| inline stats max = max(salary) WHERE first_name IS NULL
| sort emp_no
| keep max, first_name
| limit 10
;

   max:integer |first_name:keyword
70011          |Georgi         
70011          |Bezalel        
70011          |Parto          
70011          |Chirstian      
70011          |Kyoichi        
70011          |Anneke         
70011          |Tzvetan        
70011          |Saniya         
70011          |Sumant         
70011          |Duangkaew      
;

groupingFilterIsAlwaysTrue
required_capability: inline_stats
FROM employees
| MV_EXPAND job_positions
| inline stats max = max(salary) WHERE salary > 0 BY job_positions = SUBSTRING(job_positions, 1, 1)
| SORT job_positions, emp_no
| LIMIT 4
| keep max, salary, first_name, job_positions, emp_no
;

  max:integer  |salary:integer |first_name:keyword| job_positions:keyword |    emp_no:integer     
74970          |57305          |Georgi            |A                      |10001          
74970          |45797          |Duangkaew         |A                      |10010          
74970          |31120          |Mary              |A                      |10011          
74970          |48942          |Patricio          |A                      |10012          
;


groupingFilterIsAlwaysFalse
required_capability: inline_stats
FROM employees
| MV_EXPAND job_positions
| inline stats max = max(salary) WHERE first_name == "" BY job_positions = SUBSTRING(job_positions, 1, 1)
| SORT job_positions, emp_no
| LIMIT 4
| keep max, salary, first_name, job_positions, emp_no
;

  max:integer  |salary:integer |first_name:keyword| job_positions:keyword |    emp_no:integer     
null           |57305          |Georgi            |A                      |10001          
null           |45797          |Duangkaew         |A                      |10010          
null           |31120          |Mary              |A                      |10011          
null           |48942          |Patricio          |A                      |10012
;          


groupingFilterSometimesMatches
required_capability: inline_stats
FROM employees
| MV_EXPAND job_positions
| inline stats max = max(salary) WHERE first_name IS NULL BY job_positions = SUBSTRING(job_positions, 1, 1)
| SORT job_positions, emp_no
| LIMIT 4
| keep max, salary, first_name, job_positions, emp_no
;

  max:integer  |salary:integer |first_name:keyword| job_positions:keyword | emp_no:integer     
62233          |57305          |Georgi            |A                      |10001          
62233          |45797          |Duangkaew         |A                      |10010          
62233          |31120          |Mary              |A                      |10011          
62233          |48942          |Patricio          |A                      |10012          
;

groupingByOrdinalsFilterIsAlwaysTrue
required_capability: inline_stats
FROM employees
| inline stats max = max(salary) WHERE salary > 0 BY job_positions
| SORT job_positions ASC, salary DESC
| LIMIT 4
| keep max, salary, job_positions, emp_no
;

        max:integer         |salary:integer |                     job_positions:keyword                                  |    emp_no:integer
[74970, 74970, 74999, 74970]|74970          |[Accountant, Junior Developer, Principal Support Engineer, Purchase Manager]|10045          
[74970, 74999, 74999]       |66817          |[Accountant, Principal Support Engineer, Senior Python Developer]           |10094          
[74970, 74970, 65030, 71165]|61358          |[Accountant, Purchase Manager, Python Developer, Reporting Analyst]         |10016          
[74970, 58121, 74970]       |58121          |[Accountant, Business Analyst, Purchase Manager]                            |10051           
;

groupingByOrdinalsFilterIsAlwaysFalse
required_capability: inline_stats

FROM employees
| inline stats max = max(salary) WHERE first_name == "" BY job_positions
| SORT job_positions DESC NULLS last, emp_no
| LIMIT 4
| keep first_name, salary, emp_no, job_positions, max
;

first_name:s   |salary:i       | emp_no:i      |                       job_positions:s                                | max:i      
Chirstian      |36174          |10004          |[Head Human Resources, Reporting Analyst, Support Engineer, Tech Lead]|null           
Anneke         |60335          |10006          |[Principal Support Engineer, Senior Team Lead, Tech Lead]             |null           
Duangkaew      |45797          |10010          |[Architect, Purchase Manager, Reporting Analyst, Tech Lead]           |null           
Mary           |31120          |10011          |[Architect, Reporting Analyst, Senior Team Lead, Tech Lead]           |null           
;

groupingByOrdinalsFilterSometimesMatches
required_capability: inline_stats

FROM employees
| keep salary, first_name, job_positions, emp_no
| inline stats max = max(salary) WHERE first_name IS NULL BY job_positions
| SORT emp_no
| LIMIT 4
;

 salary:i      |first_name:s   | emp_no:i      |  max:i        |                    job_positions:s                           
57305          |Georgi         |10001          |[39878, 62233] |[Accountant, Senior Python Developer]                                 
56371          |Bezalel        |10002          |67492          |Senior Team Lead                                                      
61805          |Parto          |10003          |70011          |null                                                                  
36174          |Chirstian      |10004          |[35222, 67492] |[Head Human Resources, Reporting Analyst, Support Engineer, Tech Lead]                              
;

stdDevFilter
required_capability: inline_stats
FROM employees
| inline stats greater_than = STD_DEV(salary_change) WHERE languages > 3
, less_than = STD_DEV(salary_change) WHERE languages <= 3
, salary = STD_DEV(salary * 2)
, count = COUNT(*) BY gender
| keep emp_no, gender, languages, *than, salary, count
| SORT emp_no asc
| limit 10
;

 emp_no:integer|gender:keyword |languages:integer|greater_than:double|less_than:double |  salary:double   | count:long     
10001          |M              |2                |6.975232333891946  |6.604807075547775|26171.331109641273|57             
10002          |F              |5                |6.4543266953142835 |7.57786788789264 |29045.770666969744|33             
10003          |M              |4                |6.975232333891946  |6.604807075547775|26171.331109641273|57             
10004          |M              |5                |6.975232333891946  |6.604807075547775|26171.331109641273|57             
10005          |M              |1                |6.975232333891946  |6.604807075547775|26171.331109641273|57             
10006          |F              |3                |6.4543266953142835 |7.57786788789264 |29045.770666969744|33             
10007          |F              |4                |6.4543266953142835 |7.57786788789264 |29045.770666969744|33             
10008          |M              |2                |6.975232333891946  |6.604807075547775|26171.331109641273|57             
10009          |F              |1                |6.4543266953142835 |7.57786788789264 |29045.770666969744|33             
10010          |null           |4                |6.949207097931448  |7.127229475750027|27921.220736207077|10             
;

twoConsecutiveInlinestatsWithFalseFilters
required_capability: inline_stats
from employees
| keep emp_no
| sort emp_no
| limit 3
| inline stats count = count(*) where false
| inline stats cc = count_distinct(emp_no) where false
;

    emp_no:i   |     count:l   |      cc:l       
10001          |0              |0              
10002          |0              |0              
10003          |0              |0              
;

////////////////////////////////
// Union types tests
////////////////////////////////

singleIndexIpInlinestats
required_capability: inline_stats

FROM sample_data
| EVAL client_ip = client_ip::ip
| INLINE STATS count=count(*) BY client_ip
| SORT count DESC, client_ip ASC
| KEEP count, client_ip
;

count:long     |  client_ip:ip  
4              |172.21.3.15    
4              |172.21.3.15    
4              |172.21.3.15    
4              |172.21.3.15    
1              |172.21.0.5     
1              |172.21.2.113   
1              |172.21.2.162
;

singleIndexIpStringInlinestats 
required_capability: inline_stats

FROM sample_data_str
| EVAL client_ip = client_ip::ip
| INLINE STATS count=count(*) BY client_ip
| SORT count DESC, client_ip ASC
| KEEP count, client_ip
;

count:long     |  client_ip:ip
4              |172.21.3.15    
4              |172.21.3.15    
4              |172.21.3.15    
4              |172.21.3.15    
1              |172.21.0.5     
1              |172.21.2.113   
1              |172.21.2.162
;

singleIndexIpStringInlinestats Inline
required_capability: inline_stats

FROM sample_data_str
| INLINE STATS count=count(*) BY client_ip::ip
| INLINE STATS mc=count(count) BY count
| SORT mc DESC, count ASC
| KEEP mc, count
;

mc:l           | count:l
4              |4              
4              |4              
4              |4              
4              |4              
3              |1              
3              |1              
3              |1
;

singleIndexIpStringInlinestatsInline_SecondStats
// same as above but the second agg is a STATS one
required_capability: inline_stats

FROM sample_data_str
| INLINE STATS count=count(*) BY client_ip::ip
| STATS mc=count(count) BY count
| SORT mc DESC, count ASC
| KEEP mc, count
;

mc:l           | count:l
4              |4              
3              |1
;

multiIndexIpStringInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL client_ip = client_ip::ip
| INLINE STATS count=count(*) BY client_ip
| SORT count DESC, client_ip ASC
| KEEP count, client_ip
;

count:long     |  client_ip:ip
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
2              |172.21.0.5     
2              |172.21.0.5     
2              |172.21.2.113   
2              |172.21.2.113   
2              |172.21.2.162   
2              |172.21.2.162
;

multiIndexIpStringRenameInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL host_ip = client_ip::ip
| INLINE STATS count=count(*) BY host_ip
| SORT count DESC, host_ip ASC
| KEEP count, host_ip
;

count:long     |  host_ip:ip
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
2              |172.21.0.5     
2              |172.21.0.5     
2              |172.21.2.113   
2              |172.21.2.113   
2              |172.21.2.162   
2              |172.21.2.162
;

multiIndexIpStringRenameToStringInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL host_ip = TO_STRING(TO_IP(client_ip))
| INLINE STATS count=count(*) BY host_ip
| SORT count DESC, host_ip ASC
| KEEP count, host_ip
;

count:long     |  host_ip:keyword
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
2              |172.21.0.5     
2              |172.21.0.5     
2              |172.21.2.113   
2              |172.21.2.113   
2              |172.21.2.162   
2              |172.21.2.162
;

multiIndexIpStringInlinestats Drop
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count=count(*) BY client_ip::ip
| KEEP count
| SORT count DESC
;

count:long
8              
8              
8              
8              
8              
8              
8              
8              
2              
2              
2              
2              
2              
2
;

multiIndexIpStringInlinestats Inline
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count=count(*) BY client_ip = TO_IP(client_ip)
| SORT count DESC, client_ip ASC
| KEEP count, client_ip
;

count:long     |  client_ip:ip
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
2              |172.21.0.5     
2              |172.21.0.5     
2              |172.21.2.113   
2              |172.21.2.113   
2              |172.21.2.162   
2              |172.21.2.162
;

statsUnionAggInline
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count = COUNT(CIDR_MATCH(TO_IP(client_ip), "172.21.0.0/24") OR NULL)
  BY
  @timestamp = DATE_TRUNC(10 minutes, @timestamp)
| SORT count DESC, @timestamp ASC, event_duration
| LIMIT 8
;

client_ip:unsupported |event_duration:long| message:keyword     |    count:long | @timestamp:date
null                  |1232382            |Disconnected         |2              |2023-10-23T13:30:00.000Z
null                  |1232382            |Disconnected         |2              |2023-10-23T13:30:00.000Z
null                  |3450233            |Connected to 10.1.0.3|0              |2023-10-23T12:10:00.000Z
null                  |3450233            |Connected to 10.1.0.3|0              |2023-10-23T12:10:00.000Z
null                  |2764889            |Connected to 10.1.0.2|0              |2023-10-23T12:20:00.000Z
null                  |2764889            |Connected to 10.1.0.2|0              |2023-10-23T12:20:00.000Z
null                  |725448             |Connection error     |0              |2023-10-23T13:50:00.000Z
null                  |725448             |Connection error     |0              |2023-10-23T13:50:00.000Z
;

multiIndexIpInlinestats_NonPushableCount
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count=count(client_ip::ip)
| SORT event_duration DESC
| LIMIT 2
;

       @timestamp:date  |client_ip:unsupported|event_duration:long|message:keyword |count:long
2023-10-23T13:52:55.015Z|null                 |8268153            |Connection error|14             
2023-10-23T13:52:55.015Z|null                 |8268153            |Connection error|14
;

multiIndexIpInlinestats_NonPushableCountEval
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL client_ip = client_ip::ip
| INLINE STATS count=count(client_ip)
| SORT event_duration DESC
| LIMIT 2
;

       @timestamp:date  |event_duration:long|message:keyword |client_ip:ip |count:long
2023-10-23T13:52:55.015Z|8268153            |Connection error|172.21.3.15  |14             
2023-10-23T13:52:55.015Z|8268153            |Connection error|172.21.3.15  |14
;

multiIndexIpInlinestats_NonPushableCountWithFilter
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count_matching=count(@timestamp::long) WHERE @timestamp::long >= 1698069301543,
        total_count=count(@timestamp::long)
| SORT client_ip
| LIMIT 4
;

@timestamp:unsupported|   client_ip:ip|event_duration:long |   message:keyword   |count_matching:long |  total_count:long  
null                  |172.21.0.5     |1232382             |Disconnected         |2                   |14             
null                  |172.21.0.5     |1232382             |Disconnected         |2                   |14             
null                  |172.21.2.113   |2764889             |Connected to 10.1.0.2|2                   |14             
null                  |172.21.2.113   |2764889             |Connected to 10.1.0.2|2                   |14
;

multiIndexIpInlinestats_PushableCount
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count=count(@timestamp::long)
| KEEP count
| LIMIT 2
;

count:long
14
14
;

multiIndexIpInlinestats_PushableCountEval
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL @timestamp = @timestamp::long
| INLINE STATS count=count(@timestamp)
| KEEP count
| LIMIT 2
;

count:long
14
14
;

multiIndexIpStringInlinestats_Inline2
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count=count(*) BY client_ip::ip
| SORT count DESC, `client_ip::ip` ASC
| KEEP count, `client_ip::ip`
;

count:long     |  client_ip::ip:ip
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
8              |172.21.3.15    
2              |172.21.0.5     
2              |172.21.0.5     
2              |172.21.2.113   
2              |172.21.2.113   
2              |172.21.2.162   
2              |172.21.2.162
;

multiIndexIpStringInlinestats_Inline3
required_capability: inline_stats

FROM sample_data, sample_data_str
| INLINE STATS count=count(*) BY client_ip::ip
| INLINE STATS mc=count(count) BY count
| SORT mc DESC, count ASC, event_duration
| KEEP mc, count, event_duration
;

mc:l           | count:l       | event_duration:l
8              |8              |725448         
8              |8              |725448         
8              |8              |1756467        
8              |8              |1756467        
8              |8              |5033755        
8              |8              |5033755        
8              |8              |8268153        
8              |8              |8268153        
6              |2              |1232382        
6              |2              |1232382        
6              |2              |2764889        
6              |2              |2764889        
6              |2              |3450233        
6              |2              |3450233
;

multiIndexIpStringInlinestats_Inline4
required_capability: inline_stats

FROM sample_data, sample_data_str
| SORT @timestamp
| LIMIT 1000
| INLINE STATS count=count(*) BY client_ip::ip
| LIMIT 5
| INLINE STATS mc=count(count) BY count
| SORT mc DESC, count ASC, event_duration
| KEEP mc, count, event_duration
;

mc:l           | count:l       | event_duration:l
5              |2              |1232382        
5              |2              |2764889        
5              |2              |2764889        
5              |2              |3450233        
5              |2              |3450233        
;

multiIndexWhereIpStringInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_str
| WHERE STARTS_WITH(TO_STRING(client_ip), "172.21.2")
| INLINE STATS count=count(*) BY message
| SORT count DESC, message ASC
| KEEP count, message
;

count:long     |  message:keyword
2              |Connected to 10.1.0.2
2              |Connected to 10.1.0.2
2              |Connected to 10.1.0.3
2              |Connected to 10.1.0.3
;

multiIndexTsLongInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL @timestamp = DATE_TRUNC(1 hour, TO_DATETIME(@timestamp))
| INLINE STATS count=count(*) BY @timestamp
| SORT count DESC, @timestamp ASC
| KEEP count, @timestamp
;

count:long     |  @timestamp:date
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
;

multiIndexTsNanosToDatetimeInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_nanos
| EVAL @timestamp = DATE_TRUNC(1 hour, TO_DATETIME(@timestamp))
| INLINE STATS count=count(*) BY @timestamp
| KEEP count, @timestamp
| STATS count=count(*) BY @timestamp
| SORT count DESC, @timestamp ASC
;

count:long  |  @timestamp:date
10          |  2023-10-23T13:00:00.000Z
4           |  2023-10-23T12:00:00.000Z
;

multiIndexMillisToNanosStats
required_capability: inline_stats

FROM sample_data, sample_data_ts_nanos
| EVAL @timestamp = DATE_TRUNC(1 hour, TO_DATE_NANOS(@timestamp))
| INLINE STATS count=count(*) BY @timestamp
| KEEP count, @timestamp
| STATS count=count(*) BY @timestamp
| SORT count DESC, @timestamp ASC
;

count:long  |  @timestamp:date_nanos
10          |  2023-10-23T13:00:00.000Z
4           |  2023-10-23T12:00:00.000Z
;


multiIndexTsLongInlinestatsDrop
required_capability: inline_stats

FROM sample_data, sample_data_ts_long, sample_data_ts_nanos
| INLINE STATS count=count(*) BY @timestamp::datetime
| KEEP count
| LIMIT 2
;

count:long
3
3
;

multiIndexTsLongInlinestatsInline2
required_capability: inline_stats

FROM sample_data, sample_data_ts_long, sample_data_ts_nanos
| INLINE STATS count=count(*) BY @timestamp::datetime
| SORT `@timestamp::datetime` DESC, event_duration
| LIMIT 6
;
   
@timestamp:unsupported|   client_ip:ip|event_duration:long|     message:keyword |     count:long|  @timestamp::datetime:datetime
null                  |172.21.3.15    |1756467            |Connected to 10.1.0.1|3              |2023-10-23T13:55:01.543Z
null                  |172.21.3.15    |1756467            |Connected to 10.1.0.1|3              |2023-10-23T13:55:01.543Z
null                  |172.21.3.15    |1756467            |Connected to 10.1.0.1|3              |2023-10-23T13:55:01.543Z
null                  |172.21.3.15    |5033755            |Connection error     |3              |2023-10-23T13:53:55.832Z
null                  |172.21.3.15    |5033755            |Connection error     |3              |2023-10-23T13:53:55.832Z
null                  |172.21.3.15    |5033755            |Connection error     |3              |2023-10-23T13:53:55.832Z
;

multiIndexTsLongInlinestatsInline3
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count=count(*) BY @timestamp::datetime
| INLINE STATS mc=count(count) BY count
| SORT client_ip DESC
| LIMIT 1
| KEEP mc, count
;

mc:l | count:l
14   | 2
;

multiIndexTsLongInlinestatsInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL ts = TO_STRING(@timestamp)
| INLINE STATS count = COUNT(*) BY ts
| INLINE STATS mc = COUNT(count) BY count
| SORT ts
| LIMIT 1
;

@timestamp:unsupported|   client_ip:ip|event_duration:long|     message:keyword |     ts:keyword|      mc:long  |     count:long     
null                  |172.21.2.162   |3450233            |Connected to 10.1.0.3|1698063303360  |14             |1              
;

multiIndexTsLongRenameInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL hour = DATE_TRUNC(1 hour, TO_DATETIME(@timestamp))
| INLINE STATS count=count(*) BY hour
| SORT count DESC, hour ASC
| KEEP count, hour
;

count:long     |  hour:date
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
10             |2023-10-23T13:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
4              |2023-10-23T12:00:00.000Z
;

multiIndexTsLongRenameToDatetimeToStringInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL hour = LEFT(TO_STRING(TO_DATETIME(@timestamp)), 13)
| INLINE STATS count=count(*) BY hour
| STATS count_distinct(count) BY count, hour
| SORT count DESC, hour ASC
| KEEP count, hour
;

count:long  |  hour:keyword
10          |  2023-10-23T13
4           |  2023-10-23T12
;

multiIndexTsLongRenameToStringInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL mess = LEFT(TO_STRING(@timestamp), 7)
| INLINE STATS count=count(*) BY mess
| SORT count DESC, mess DESC
| KEEP count, mess
;

count:long     |  mess:keyword
7              |2023-10        
7              |2023-10        
7              |2023-10        
7              |2023-10        
7              |2023-10        
7              |2023-10        
7              |2023-10        
4              |1698069        
4              |1698069        
4              |1698069        
4              |1698069        
1              |1698068        
1              |1698064        
1              |1698063
;

multiIndexTsLongInlinestatsInline
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count=COUNT(*), max=MAX(TO_DATETIME(@timestamp))
| KEEP count, max
| LIMIT 3
;

count:long  |  max:date
14          |  2023-10-23T13:55:01.543Z
14          |  2023-10-23T13:55:01.543Z
14          |  2023-10-23T13:55:01.543Z
;

multiIndexTsLongInlinestatsInlineDropped
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count=COUNT(*), max=MAX(TO_DATETIME(@timestamp))
| KEEP count
| LIMIT 2
;

count:long
14
14
;

multiIndexWhereTsLongInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| WHERE TO_LONG(@timestamp) < 1698068014937
| INLINE STATS count=count(*) BY message
| SORT count DESC, message ASC
| KEEP count, message
;

count:long  |  message:keyword
2           |  Connected to 10.1.0.2
2           |  Connected to 10.1.0.2
2           |  Connected to 10.1.0.3
2           |  Connected to 10.1.0.3
;

multiIndexWhereIpStringTsLongInlinestats 
required_capability: inline_stats

FROM sample_data*
| WHERE TO_LONG(@timestamp) < 1698068014937 AND TO_STRING(client_ip) == "172.21.2.162"
| INLINE STATS count=count(*) BY message
| SORT count DESC, message ASC
| KEEP count, message
;

count:long  |  message:keyword
3           |  Connected to 10.1.0.3
3           |  Connected to 10.1.0.3
3           |  Connected to 10.1.0.3
;

multiIndexWhereIpStringLikeTsLongInlinestats 
required_capability: inline_stats

FROM sample_data*
| WHERE TO_LONG(@timestamp) < 1698068014937 AND TO_STRING(client_ip) LIKE "172.21.2.16?"
| INLINE STATS count=count(*) BY message
| SORT count DESC, message ASC
| KEEP count, message
;

count:long  |  message:keyword
3           |  Connected to 10.1.0.3
3           |  Connected to 10.1.0.3
3           |  Connected to 10.1.0.3
;

multiIndexInlinestatsOfMultiTypedField
required_capability: inline_stats
// https://github.com/elastic/elasticsearch/issues/133973
FROM apps, apps_short
| INLINE STATS s = sum(id::integer)
| SORT name, version
| LIMIT 5
;

 id:unsupported|  name:keyword |version:version|       s:long       
null           |aaaaa          |1              |210            
null           |aaaaa          |1              |210            
null           |aaaaa          |1.2.3.4        |210            
null           |aaaaa          |1.2.3.4        |210            
null           |bbbbb          |2.1            |210            
;

inlineStatsUnionGroup
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count = COUNT(*)
           BY @timestamp = SUBSTRING(TO_STRING(@timestamp), 0, 7)
| SORT client_ip ASC, @timestamp ASC
| LIMIT 4
;

client_ip:ip | event_duration:long |    message:keyword    | count:long| @timestamp:keyword 
  172.21.0.5 |             1232382 | Disconnected          | 1         |            1698068 
  172.21.0.5 |             1232382 | Disconnected          | 7         |            2023-10 
172.21.2.113 |             2764889 | Connected to 10.1.0.2 | 1         |            1698064 
172.21.2.113 |             2764889 | Connected to 10.1.0.2 | 7         |            2023-10 
;

inlineStatsUnionGroupWithEval
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| EVAL @timestamp = SUBSTRING(TO_STRING(@timestamp), 0, 7)
| INLINE STATS count = COUNT(*) BY @timestamp
| SORT client_ip ASC, @timestamp ASC
| LIMIT 4
;

client_ip:ip | event_duration:long |    message:keyword    | count:long| @timestamp:keyword 
  172.21.0.5 |             1232382 | Disconnected          | 1         |            1698068 
  172.21.0.5 |             1232382 | Disconnected          | 7         |            2023-10 
172.21.2.113 |             2764889 | Connected to 10.1.0.2 | 1         |            1698064 
172.21.2.113 |             2764889 | Connected to 10.1.0.2 | 7         |            2023-10 
;

inlineStatsUnionGroupTogether
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS count = COUNT(*)
           BY @timestamp = TO_STRING(TO_DATETIME(@timestamp))
| SORT client_ip ASC, @timestamp ASC
| LIMIT 4
;

client_ip:ip | event_duration:long |    message:keyword    |count:long|    @timestamp:keyword    
  172.21.0.5 |             1232382 | Disconnected          |2         | 2023-10-23T13:33:34.937Z
  172.21.0.5 |             1232382 | Disconnected          |2         | 2023-10-23T13:33:34.937Z
172.21.2.113 |             2764889 | Connected to 10.1.0.2 |2         | 2023-10-23T12:27:28.948Z
172.21.2.113 |             2764889 | Connected to 10.1.0.2 |2         | 2023-10-23T12:27:28.948Z
;

multiIndexIndirectUseOfUnionTypesInInlinestats 
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS foo = max(event_duration) BY client_ip
| RENAME event_duration AS e
| SORT client_ip ASC, e
| LIMIT 8
;

@timestamp:unsupported| e:long |    message:keyword  | foo:long| client_ip:ip 
null                  |1232382 |Disconnected         |1232382  |172.21.0.5     
null                  |1232382 |Disconnected         |1232382  |172.21.0.5     
null                  |2764889 |Connected to 10.1.0.2|2764889  |172.21.2.113   
null                  |2764889 |Connected to 10.1.0.2|2764889  |172.21.2.113   
null                  |3450233 |Connected to 10.1.0.3|3450233  |172.21.2.162   
null                  |3450233 |Connected to 10.1.0.3|3450233  |172.21.2.162   
null                  |725448  |Connection error     |8268153  |172.21.3.15    
null                  |725448  |Connection error     |8268153  |172.21.3.15
;


multiIndexIndirectUseOfUnionTypesInInlineStats
required_capability: inline_stats

FROM sample_data, sample_data_ts_long
| INLINE STATS foo = max(event_duration)
| SORT client_ip ASC, event_duration
| LIMIT 1
;

@timestamp:unsupported | client_ip:ip | event_duration:long | message:keyword | foo:long
           null        | 172.21.0.5   |             1232382 | Disconnected    |  8268153
;

shortIntegerWideningInlinestats 
required_capability: inline_stats

FROM apps, apps_short
| EVAL id = id::integer
| INLINE STATS count=count() BY name, id
| KEEP id, name, count
| SORT id ASC, name ASC
| LIMIT 5
;

id:integer | name:keyword | count:long
1          |aaaaa         |2              
1          |aaaaa         |2              
2          |bbbbb         |2              
2          |bbbbb         |2              
3          |ccccc         |2
;

ImplicitCastingMultiTypedFieldsInlinestats_ByNumeric
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS x=max(hire_date), y = min(hire_date) BY languages = languages::integer
| SORT languages
| KEEP emp_no, languages, x, y
| LIMIT 3
;

emp_no:unsupported|languages:integer|           x:date_nanos |           y:date_nanos          
null              |1                |1999-04-30T00:00:00.000Z|1985-02-18T00:00:00.000Z
null              |1                |1999-04-30T00:00:00.000Z|1985-02-18T00:00:00.000Z
null              |1                |1999-04-30T00:00:00.000Z|1985-02-18T00:00:00.000Z
;

ImplicitCastingMultiTypedFieldsInlinestats_ByNumericWithFilter
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS x=max(hire_date) where hire_date < "1993-08-03", y = min(hire_date) where hire_date >= "1993-08-03" BY languages = languages::integer
| SORT languages
| LIMIT 3
| KEEP emp_no, languages, x, y
;

emp_no:unsupported|languages:integer|           x:date_nanos |           y:date_nanos          
null              |1                |1990-10-20T00:00:00.000Z|1994-05-21T00:00:00.000Z
null              |1                |1990-10-20T00:00:00.000Z|1994-05-21T00:00:00.000Z
null              |1                |1990-10-20T00:00:00.000Z|1994-05-21T00:00:00.000Z
;

ImplicitCastingMultiTypedFieldsInlinestats_ByDateNanos
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS x=count(emp_no::long), y=avg(salary_change::double), z=max(height::double) BY hire_date
| EVAL y = round(y, 1), z = round(z, 1)
| KEEP x, y, z, hire_date
| SORT hire_date
| LIMIT 12
;

 x:long        |    y:double   |   z:double    | hire_date:date_nanos        
2              |null           |1.9            |1985-02-18T00:00:00.000Z
2              |null           |1.9            |1985-02-18T00:00:00.000Z
2              |null           |2.0            |1985-02-24T00:00:00.000Z
2              |null           |2.0            |1985-02-24T00:00:00.000Z
2              |3.3            |2.0            |1985-05-13T00:00:00.000Z
2              |3.3            |2.0            |1985-05-13T00:00:00.000Z
2              |0.2            |1.8            |1985-07-09T00:00:00.000Z
2              |0.2            |1.8            |1985-07-09T00:00:00.000Z
2              |3.6            |1.5            |1985-09-17T00:00:00.000Z
2              |3.6            |1.5            |1985-09-17T00:00:00.000Z
2              |-5.9           |1.8            |1985-10-14T00:00:00.000Z
2              |-5.9           |1.8            |1985-10-14T00:00:00.000Z
;

ImplicitCastingMultiTypedFieldsInlinestats_ByDateNanosWithFilter
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS x=count(emp_no::long) where hire_date > "1985-05-01", y=avg(salary_change::double) where hire_date > "1985-05-01", z=max(height::double) where hire_date > "1985-05-01" BY hire_date
| EVAL y = round(y, 1), z = round(z, 1)
| KEEP x, y, z, hire_date
| SORT hire_date
| LIMIT 10
;

 x:long        |    y:double   |   z:double    | hire_date:date_nanos        
0              |null           |null           |1985-02-18T00:00:00.000Z
0              |null           |null           |1985-02-18T00:00:00.000Z
0              |null           |null           |1985-02-24T00:00:00.000Z
0              |null           |null           |1985-02-24T00:00:00.000Z
2              |3.3            |2.0            |1985-05-13T00:00:00.000Z
2              |3.3            |2.0            |1985-05-13T00:00:00.000Z
2              |0.2            |1.8            |1985-07-09T00:00:00.000Z
2              |0.2            |1.8            |1985-07-09T00:00:00.000Z
2              |3.6            |1.5            |1985-09-17T00:00:00.000Z
2              |3.6            |1.5            |1985-09-17T00:00:00.000Z
;

ImplicitCastingMultiTypedMVFieldsInlinestats_MaxMin
required_capability: inline_stats

FROM date_nanos, date_nanos_union_types
| INLINE STATS max = MAX(millis), min = MIN(nanos)
| SORT millis DESC
| LIMIT 5
;

warningRegex:evaluation of \[FROM .*date_nanos.*date_nanos_union_types.*\] failed, treating result as null. Only first 20 failures recorded.
warningRegex:java.lang.IllegalArgumentException: milliSeconds \[-1457696696640\] are before the epoch in 1970 and cannot be converted to nanoseconds

        millis:date_nanos     |        nanos:date_nanos      |        num:long   |          max:date_nanos      |      min:date_nanos           
2023-10-23T13:55:01.543123456Z|2023-10-23T13:55:01.543Z      |1698069301543123456|2023-10-23T13:55:01.543123456Z|2023-01-23T13:55:01.543Z
2023-10-23T13:55:01.543123456Z|2023-10-23T13:55:01.543Z      |1698069301543123456|2023-10-23T13:55:01.543123456Z|2023-01-23T13:55:01.543Z
2023-10-23T13:55:01.543Z      |2023-10-23T13:55:01.543123456Z|1698069301543123456|2023-10-23T13:55:01.543123456Z|2023-01-23T13:55:01.543Z
2023-10-23T13:53:55.832987654Z|2023-10-23T13:53:55.832Z      |1698069235832987654|2023-10-23T13:55:01.543123456Z|2023-01-23T13:55:01.543Z
2023-10-23T13:53:55.832Z      |2023-10-23T13:53:55.832987654Z|1698069235832987654|2023-10-23T13:55:01.543123456Z|2023-01-23T13:55:01.543Z
;

ImplicitCastingMultiTypedMVFieldsInlinestats_Values
required_capability: inline_stats

FROM date_nanos, date_nanos_union_types
| INLINE STATS c = MV_COUNT(VALUES(nanos))
| SORT millis DESC
| LIMIT 5
;

warningRegex:evaluation of \[FROM .*date_nanos.*date_nanos_union_types.*\] failed, treating result as null. Only first 20 failures recorded.
warningRegex:java.lang.IllegalArgumentException: milliSeconds \[-1457696696640\] are before the epoch in 1970 and cannot be converted to nanoseconds

        millis:date_nanos     |        nanos:date_nanos      |        num:long   | c:integer
2023-10-23T13:55:01.543123456Z|2023-10-23T13:55:01.543Z      |1698069301543123456|19             
2023-10-23T13:55:01.543123456Z|2023-10-23T13:55:01.543Z      |1698069301543123456|19             
2023-10-23T13:55:01.543Z      |2023-10-23T13:55:01.543123456Z|1698069301543123456|19             
2023-10-23T13:53:55.832987654Z|2023-10-23T13:53:55.832Z      |1698069235832987654|19             
2023-10-23T13:53:55.832Z      |2023-10-23T13:53:55.832987654Z|1698069235832987654|19
;

ImplicitCastingMultiTypedDateTruncInlinestats_By-Ignore
required_capability: inline_stats
// https://github.com/elastic/elasticsearch/issues/133973
// optimized incorrectly due to missing references [$$emp_no$converted_to$long{f$}#

FROM employees, employees_incompatible
| KEEP emp_no, hire_date 
| INLINE STATS c = count(emp_no::long) BY yr = DATE_TRUNC(1 year, hire_date)
| SORT yr DESC
| LIMIT 5
;

c:long | yr:date_nanos
2      | 1999-01-01T00:00:00.000Z
2      | 1997-01-01T00:00:00.000Z
2      | 1996-01-01T00:00:00.000Z
10     | 1995-01-01T00:00:00.000Z
8      | 1994-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedDateTruncInlinestats_ByWithFilter-Ignore
required_capability: inline_stats
// https://github.com/elastic/elasticsearch/issues/133973
// optimized incorrectly due to missing references [$$emp_no$converted_to$long{f$}#

FROM employees, employees_incompatible
| KEEP emp_no, hire_date 
| INLINE STATS c = count(emp_no::long) where hire_date > "1996-01-01" BY yr = DATE_TRUNC(1 year, hire_date)
| SORT yr DESC
| LIMIT 5
;

c:long | yr:date_nanos
2      | 1999-01-01T00:00:00.000Z
2      | 1997-01-01T00:00:00.000Z
2      | 1996-01-01T00:00:00.000Z
0      | 1995-01-01T00:00:00.000Z
0      | 1994-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedDateTruncInlinestats_ByWithEval-Ignore
required_capability: inline_stats
// https://github.com/elastic/elasticsearch/issues/133973
// optimized incorrectly due to missing references [$$emp_no$converted_to$long{f$}#

FROM employees, employees_incompatible
| KEEP emp_no, hire_date 
| EVAL yr = DATE_TRUNC(1 year, hire_date)
| INLINE STATS c = count(emp_no::long) BY yr
| SORT yr DESC
| LIMIT 5
;

c:long | yr:date_nanos
2      | 1999-01-01T00:00:00.000Z
2      | 1997-01-01T00:00:00.000Z
2      | 1996-01-01T00:00:00.000Z
10     | 1995-01-01T00:00:00.000Z
8      | 1994-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedDateTruncInlinestats_ByWithEvalWithFilter-Ignore
required_capability: inline_stats
// https://github.com/elastic/elasticsearch/issues/133973
// optimized incorrectly due to missing references [$$emp_no$converted_to$long{f$}#

FROM employees, employees_incompatible
| KEEP emp_no, hire_date 
| EVAL yr = DATE_TRUNC(1 year, hire_date)
| INLINE STATS c = count(emp_no::long) where hire_date > "1991-01-01" BY yr
| SORT yr DESC
| LIMIT 5
;

c:long | yr:date_nanos
2      | 1999-01-01T00:00:00.000Z
2      | 1997-01-01T00:00:00.000Z
2      | 1996-01-01T00:00:00.000Z
10     | 1995-01-01T00:00:00.000Z
8      | 1994-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedBucketDateNanosByYear
required_capability: inline_stats

FROM employees, employees_incompatible
| KEEP emp_no, hire_date, gender
| INLINE STATS c = count(*) BY yr = BUCKET(hire_date, 1 year)
| SORT yr DESC, c, hire_date
| LIMIT 10
;

emp_no:unsupported|  hire_date:date_nanos  |gender:unsupported|    c:long     |       yr:date_nanos           
null              |1999-04-30T00:00:00.000Z|null              |2              |1999-01-01T00:00:00.000Z
null              |1999-04-30T00:00:00.000Z|null              |2              |1999-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|null              |2              |1997-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|null              |2              |1997-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|null              |2              |1996-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|null              |2              |1996-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|null              |10             |1995-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|null              |10             |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|null              |10             |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|null              |10             |1995-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedBucketDateNanosByYearWithFilter
required_capability: inline_stats

FROM employees, employees_incompatible
| KEEP emp_no, hire_date, gender
| INLINE STATS c = count(*) where hire_date > "1995-02-01" BY yr = BUCKET(hire_date, 1 year)
| SORT yr DESC, c, hire_date
| LIMIT 10
;

emp_no:unsupported|  hire_date:date_nanos  |gender:unsupported|    c:long     |       yr:date_nanos           
null              |1999-04-30T00:00:00.000Z|null              |2              |1999-01-01T00:00:00.000Z
null              |1999-04-30T00:00:00.000Z|null              |2              |1999-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|null              |2              |1997-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|null              |2              |1997-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|null              |2              |1996-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|null              |2              |1996-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|null              |8              |1995-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|null              |8              |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|null              |8              |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|null              |8              |1995-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedBucketDateNanosByMonth
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS c = count(*) BY mo = BUCKET(hire_date, 20, "1986-01-01", "1999-12-31")
| KEEP emp_no, hire_date, c, mo
| SORT mo DESC, c, hire_date
| LIMIT 10
;

emp_no:unsupported|  hire_date:date_nanos  |    c:long     |       mo:date_nanos
null              |1999-04-30T00:00:00.000Z|2              |1999-01-01T00:00:00.000Z
null              |1999-04-30T00:00:00.000Z|2              |1999-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1996-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1996-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|10             |1995-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|10             |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|10             |1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|10             |1995-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedBucketDateNanos_In_BothInlinestats_AndBy
required_capability: inline_stats

FROM employees, employees_incompatible
| INLINE STATS c = count(*), b = BUCKET(hire_date, 1 year) + 1 year BY yr = BUCKET(hire_date, 1 year)
| SORT yr DESC, c, hire_date
| KEEP emp_no, hire_date, c, b, yr
| LIMIT 10
;

emp_no:unsupported|  hire_date:date_nanos  |    c:long     |  b:date_nanos          |    yr:date_nanos
null              |1999-04-30T00:00:00.000Z|2              |2000-01-01T00:00:00.000Z|1999-01-01T00:00:00.000Z
null              |1999-04-30T00:00:00.000Z|2              |2000-01-01T00:00:00.000Z|1999-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1998-01-01T00:00:00.000Z|1997-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1998-01-01T00:00:00.000Z|1997-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z|1996-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z|1996-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-01-27T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-03-13T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
;

ImplicitCastingMultiTypedBucketDateNanos_In_BothInlinestats_AndByWithAlias
required_capability: inline_stats

FROM employees, employees_incompatible
| KEEP emp_no, hire_date
| INLINE STATS c = count(*), b = yr + 1 year BY yr = BUCKET(hire_date, 1 year)
| SORT hire_date DESC
| LIMIT 10
;

emp_no:unsupported|  hire_date:date_nanos  |    c:long     |  b:date_nanos          |    yr:date_nanos    
null              |1999-04-30T00:00:00.000Z|2              |2000-01-01T00:00:00.000Z|1999-01-01T00:00:00.000Z
null              |1999-04-30T00:00:00.000Z|2              |2000-01-01T00:00:00.000Z|1999-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1998-01-01T00:00:00.000Z|1997-01-01T00:00:00.000Z
null              |1997-05-19T00:00:00.000Z|2              |1998-01-01T00:00:00.000Z|1997-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z|1996-01-01T00:00:00.000Z
null              |1996-11-05T00:00:00.000Z|2              |1997-01-01T00:00:00.000Z|1996-01-01T00:00:00.000Z
null              |1995-12-15T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-12-15T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-08-22T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
null              |1995-08-22T00:00:00.000Z|10             |1996-01-01T00:00:00.000Z|1995-01-01T00:00:00.000Z
;

multiInlinestatsWithUnionTypes1
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL one_ip = client_ip::ip
| INLINE STATS count1=count(client_ip::ip), count2=count(one_ip), max(one_ip), min(client_ip::ip)
| SORT @timestamp
| LIMIT 3
;

    @timestamp:date     |client_ip:unsupported|event_duration:long|   message:keyword   |    one_ip:ip  |    count1:long|    count2:long|max(one_ip):ip |min(client_ip::ip):ip
2023-10-23T12:15:03.360Z|null                 |3450233            |Connected to 10.1.0.3|172.21.2.162   |14             |14             |172.21.3.15    |172.21.0.5        
2023-10-23T12:15:03.360Z|null                 |3450233            |Connected to 10.1.0.3|172.21.2.162   |14             |14             |172.21.3.15    |172.21.0.5        
2023-10-23T12:27:28.948Z|null                 |2764889            |Connected to 10.1.0.2|172.21.2.113   |14             |14             |172.21.3.15    |172.21.0.5        
;

multiInlinestatsWithUnionTypes2
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL one_ip = client_ip::ip
| INLINE STATS count1=count(client_ip::ip), count2=count(one_ip), max=max(one_ip), min=min(client_ip::ip)
| RENAME one_ip AS client_ip
| INLINE STATS max(event_duration) BY client_ip
| SORT @timestamp
| LIMIT 5
;

@timestamp:date         | event_duration:long | message:keyword         | count1:long | count2:long | max:ip        | min:ip        | max(event_duration):long| client_ip:ip   
2023-10-23T12:15:03.360Z| 3450233             | Connected to 10.1.0.3   | 14          | 14          | 172.21.3.15   | 172.21.0.5    | 3450233                 | 172.21.2.162   
2023-10-23T12:15:03.360Z| 3450233             | Connected to 10.1.0.3   | 14          | 14          | 172.21.3.15   | 172.21.0.5    | 3450233                 | 172.21.2.162   
2023-10-23T12:27:28.948Z| 2764889             | Connected to 10.1.0.2   | 14          | 14          | 172.21.3.15   | 172.21.0.5    | 2764889                 | 172.21.2.113   
2023-10-23T12:27:28.948Z| 2764889             | Connected to 10.1.0.2   | 14          | 14          | 172.21.3.15   | 172.21.0.5    | 2764889                 | 172.21.2.113   
2023-10-23T13:33:34.937Z| 1232382             | Disconnected            | 14          | 14          | 172.21.3.15   | 172.21.0.5    | 1232382                 | 172.21.0.5 
;

multiInlinestatsWithUnionTypes3
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL one_ip = client_ip::ip
| INLINE STATS avg_duration = AVG(event_duration) BY one_ip
| RENAME one_ip AS client_ip
| WHERE CIDR_MATCH(client_ip, "172.21.2.0/24")
| INLINE STATS count1=count(client_ip::ip), count2=count(client_ip), max=max(client_ip), min=min(client_ip::ip)
| INLINE STATS avg_total_duration = AVG(event_duration)
| SORT @timestamp
;

@timestamp:date           | event_duration:long| message:keyword         | avg_duration:double| client_ip:ip     | count1:long | count2:long | max:ip         | min:ip         | avg_total_duration:double
2023-10-23T12:15:03.360Z  | 3450233            | Connected to 10.1.0.3   | 3450233.0          | 172.21.2.162     | 4           | 4           | 172.21.2.162   | 172.21.2.113   | 3107561.0
2023-10-23T12:15:03.360Z  | 3450233            | Connected to 10.1.0.3   | 3450233.0          | 172.21.2.162     | 4           | 4           | 172.21.2.162   | 172.21.2.113   | 3107561.0
2023-10-23T12:27:28.948Z  | 2764889            | Connected to 10.1.0.2   | 2764889.0          | 172.21.2.113     | 4           | 4           | 172.21.2.162   | 172.21.2.113   | 3107561.0
2023-10-23T12:27:28.948Z  | 2764889            | Connected to 10.1.0.2   | 2764889.0          | 172.21.2.113     | 4           | 4           | 172.21.2.162   | 172.21.2.113   | 3107561.0
;

unionTypeDroppedBeforeInlinestats
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL one_ip = client_ip::ip
| DROP one_ip
| INLINE STATS avg(event_duration) BY client_ip::ip
| SORT @timestamp
;

@timestamp:date           | client_ip:unsupported | event_duration:long| message:keyword         | avg(event_duration):double| client_ip::ip:ip
2023-10-23T12:15:03.360Z  | null                  | 3450233            | Connected to 10.1.0.3   | 3450233.0                 | 172.21.2.162
2023-10-23T12:15:03.360Z  | null                  | 3450233            | Connected to 10.1.0.3   | 3450233.0                 | 172.21.2.162
2023-10-23T12:27:28.948Z  | null                  | 2764889            | Connected to 10.1.0.2   | 2764889.0                 | 172.21.2.113
2023-10-23T12:27:28.948Z  | null                  | 2764889            | Connected to 10.1.0.2   | 2764889.0                 | 172.21.2.113
2023-10-23T13:33:34.937Z  | null                  | 1232382            | Disconnected            | 1232382.0                 | 172.21.0.5
2023-10-23T13:33:34.937Z  | null                  | 1232382            | Disconnected            | 1232382.0                 | 172.21.0.5
2023-10-23T13:51:54.732Z  | null                  | 725448             | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:51:54.732Z  | null                  | 725448             | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:52:55.015Z  | null                  | 8268153            | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:52:55.015Z  | null                  | 8268153            | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:53:55.832Z  | null                  | 5033755            | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:53:55.832Z  | null                  | 5033755            | Connection error        | 3945955.75                | 172.21.3.15
2023-10-23T13:55:01.543Z  | null                  | 1756467            | Connected to 10.1.0.1   | 3945955.75                | 172.21.3.15
2023-10-23T13:55:01.543Z  | null                  | 1756467            | Connected to 10.1.0.1   | 3945955.75                | 172.21.3.15
;

inlinestatsWithUnionTypesAs_InlinestatsCondition
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL temp_ip = client_ip::ip
| EVAL ip1 = CIDR_MATCH(temp_ip, "172.21.2.0/24"), ip2 = CIDR_MATCH(temp_ip, "172.21.0.0/24"), ip3 = CIDR_MATCH(temp_ip, "172.21.3.0/24")
| EVAL client_ip = temp_ip
| INLINE STATS avg_ip1 = avg(event_duration) WHERE ip1
| DROP client_ip
| INLINE STATS avg_ip2 = avg(event_duration) WHERE ip2, avg_ip3 = avg(event_duration) WHERE ip3
| SORT @timestamp
| DROP @timestamp
;

event_duration:long | message:keyword         | temp_ip:ip     | ip1:boolean | ip2:boolean | ip3:boolean | avg_ip1:double | avg_ip2:double | avg_ip3:double
3450233             | Connected to 10.1.0.3   | 172.21.2.162   | true        | false       | false       | 3107561.0      | 1232382.0      | 3945955.75
3450233             | Connected to 10.1.0.3   | 172.21.2.162   | true        | false       | false       | 3107561.0      | 1232382.0      | 3945955.75
2764889             | Connected to 10.1.0.2   | 172.21.2.113   | true        | false       | false       | 3107561.0      | 1232382.0      | 3945955.75
2764889             | Connected to 10.1.0.2   | 172.21.2.113   | true        | false       | false       | 3107561.0      | 1232382.0      | 3945955.75
1232382             | Disconnected            | 172.21.0.5     | false       | true        | false       | 3107561.0      | 1232382.0      | 3945955.75
1232382             | Disconnected            | 172.21.0.5     | false       | true        | false       | 3107561.0      | 1232382.0      | 3945955.75
725448              | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
725448              | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
8268153             | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
8268153             | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
5033755             | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
5033755             | Connection error        | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
1756467             | Connected to 10.1.0.1   | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
1756467             | Connected to 10.1.0.1   | 172.21.3.15    | false       | false       | true        | 3107561.0      | 1232382.0      | 3945955.75
;

inlinestatsWithOverwrittenUnionType
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL client_ip = client_ip::ip
| EVAL client_ip = 123
| INLINE STATS a = avg(event_duration) BY client_ip::integer
| SORT @timestamp
;

@timestamp:date              | event_duration:long | message:keyword         | client_ip:integer | a:double      | client_ip::integer:integer
2023-10-23T12:15:03.360Z     | 3450233             | Connected to 10.1.0.3   | 123               | 3318761.0     | 123
2023-10-23T12:15:03.360Z     | 3450233             | Connected to 10.1.0.3   | 123               | 3318761.0     | 123
2023-10-23T12:27:28.948Z     | 2764889             | Connected to 10.1.0.2   | 123               | 3318761.0     | 123
2023-10-23T12:27:28.948Z     | 2764889             | Connected to 10.1.0.2   | 123               | 3318761.0     | 123
2023-10-23T13:33:34.937Z     | 1232382             | Disconnected            | 123               | 3318761.0     | 123
2023-10-23T13:33:34.937Z     | 1232382             | Disconnected            | 123               | 3318761.0     | 123
2023-10-23T13:51:54.732Z     | 725448              | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:51:54.732Z     | 725448              | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:52:55.015Z     | 8268153             | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:52:55.015Z     | 8268153             | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:53:55.832Z     | 5033755             | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:53:55.832Z     | 5033755             | Connection error        | 123               | 3318761.0     | 123
2023-10-23T13:55:01.543Z     | 1756467             | Connected to 10.1.0.1   | 123               | 3318761.0     | 123
2023-10-23T13:55:01.543Z     | 1756467             | Connected to 10.1.0.1   | 123               | 3318761.0     | 123
;

overwriteAndDropUnionTypeBeforeInlinestats
required_capability: inline_stats

FROM sample_data, sample_data_str
| EVAL temp = client_ip::string
| EVAL client_ip = temp
| DROP temp
| INLINE STATS avg(event_duration) BY client_ip
| SORT @timestamp
| DROP @timestamp
;

event_duration:long| message:keyword         | avg(event_duration):double| client_ip:string
3450233            | Connected to 10.1.0.3   | 3450233.0                 | 172.21.2.162
3450233            | Connected to 10.1.0.3   | 3450233.0                 | 172.21.2.162
2764889            | Connected to 10.1.0.2   | 2764889.0                 | 172.21.2.113
2764889            | Connected to 10.1.0.2   | 2764889.0                 | 172.21.2.113
1232382            | Disconnected            | 1232382.0                 | 172.21.0.5
1232382            | Disconnected            | 1232382.0                 | 172.21.0.5
725448             | Connection error        | 3945955.75                | 172.21.3.15
725448             | Connection error        | 3945955.75                | 172.21.3.15
8268153            | Connection error        | 3945955.75                | 172.21.3.15
8268153            | Connection error        | 3945955.75                | 172.21.3.15
5033755            | Connection error        | 3945955.75                | 172.21.3.15
5033755            | Connection error        | 3945955.75                | 172.21.3.15
1756467            | Connected to 10.1.0.1   | 3945955.75                | 172.21.3.15
1756467            | Connected to 10.1.0.1   | 3945955.75                | 172.21.3.15
;

useOfDeprecatedInlinestats
required_capability: inline_stats
ROW city = "Raleigh"
| INLINESTATS c = COUNT(city)
;

warning:Line 2:3: INLINESTATS is deprecated, use INLINE STATS instead

city:keyword|c:long
Raleigh     |1
;


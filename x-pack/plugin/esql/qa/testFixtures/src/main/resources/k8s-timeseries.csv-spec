timeseriesWithoutAggs
required_capability: metrics_command
TS k8s | sort @timestamp DESC, cluster, pod | keep @timestamp,cluster,pod,network.bytes_in,network.cost | limit 5;

@timestamp:datetime      | cluster:keyword | pod: keyword| network.bytes_in:long | network.cost:double
2024-05-10T00:22:59.000Z | qa              | one         | 206                   | 6.25
2024-05-10T00:22:54.000Z | qa              | three       | 972                   | 10.875
2024-05-10T00:22:53.000Z | prod            | two         | 812                   | 10.75
2024-05-10T00:22:53.000Z | staging         | one         | 238                   | 4.625
2024-05-10T00:22:49.000Z | staging         | two         | 3                     | 1.75
;

timeseriesWithAggsAndSourceQuoting
required_capability: metrics_command
required_capability: double_quotes_source_enclosing
TS "k8s" | STATS max_bytes=max(to_long(network.total_bytes_in)) BY cluster | SORT max_bytes DESC;

max_bytes:long | cluster: keyword
10797          | qa        
10277          | prod
7403           | staging
;

maxRate
required_capability: metrics_command
required_capability: double_quotes_source_enclosing
TS k8s | STATS max(rate(network.total_bytes_in));

max(rate(network.total_bytes_in)): double
13.17372515125324
;

maxRatePerMinute
required_capability: metrics_command
required_capability: double_quotes_source_enclosing
TS k8s | STATS max(60 * rate(network.total_bytes_in));

max(60 * rate(network.total_bytes_in)): double
790.4235090751944
;

maxCost
required_capability: metrics_command
TS k8s | STATS max_cost=max(rate(network.total_cost));

max_cost: double
0.16151685393258428
;

maxRateAndBytes
required_capability: metrics_command
TS k8s | STATS max(60 * rate(network.total_bytes_in)), max(network.bytes_in);

max(60 * rate(network.total_bytes_in)): double | max(network.bytes_in): long
790.4235090751944                                  | 1021
;

maxRateAndMarkupBytes
required_capability: metrics_command
TS k8s | STATS max(rate(network.total_bytes_in)), max(network.bytes_in * 1.05);

max(rate(network.total_bytes_in)): double | max(network.bytes_in * 1.05): double
  13.17372515125324                       | 1072.05
;

maxRateAndBytesAndCost
required_capability: metrics_command
TS k8s | STATS max(rate(network.total_bytes_in)), max(network.bytes_in), max(rate(network.total_cost));

max(rate(network.total_bytes_in)): double| max(network.bytes_in): long| max(rate(network.total_cost)): double
13.17372515125324                        | 1021                       | 0.16151685393258428
;

sumRate
required_capability: metrics_command
TS k8s | STATS bytes=sum(rate(network.total_bytes_in)), sum(rate(network.total_cost)) BY cluster | SORT cluster;

bytes: double       | sum(rate(network.total_cost)): double | cluster: keyword
24.49149357711476   | 0.3018995503437827                    | prod
33.308519044441084  | 0.4474920369252062                    | qa
18.610708062016123  | 0.24387090901805775                   | staging
;

oneRateWithBucket
required_capability: metrics_command
// tag::rate[]
TS k8s
| STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute)
// end::rate[]
| SORT time_bucket DESC | LIMIT 2;

// tag::rate-result[]
max(rate(network.total_bytes_in)): double | time_bucket:date
6.980660660660663                         | 2024-05-10T00:20:00.000Z
23.702205882352942                        | 2024-05-10T00:15:00.000Z
// end::rate-result[]
;

twoRatesWithBucket
required_capability: metrics_command
TS k8s | STATS max(rate(network.total_bytes_in)), sum(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute) | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | sum(rate(network.total_bytes_in)):double | time_bucket:datetime    
6.980660660660663                        | 23.959973363184154                       | 2024-05-10T00:20:00.000Z
23.702205882352942                       | 94.9517511187984                         | 2024-05-10T00:15:00.000Z
14.97039381153305                        | 63.00652190262822                        | 2024-05-10T00:10:00.000Z
;


oneRateWithBucketAndCluster
required_capability: metrics_command
TS k8s | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC, cluster | LIMIT 6;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
4.05                                     | 2024-05-10T00:20:00.000Z | qa
3.19                                     | 2024-05-10T00:20:00.000Z | staging
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod 
23.702205882352942                       | 2024-05-10T00:15:00.000Z | qa 
7.784911616161616                        | 2024-05-10T00:15:00.000Z | staging
;

BytesAndCostByBucketAndCluster
required_capability: metrics_command
TS k8s | STATS max(rate(network.total_bytes_in)), max(network.cost) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC, cluster | LIMIT 6;

max(rate(network.total_bytes_in)): double | max(network.cost): double | time_bucket:date         | cluster: keyword
6.980660660660663                         | 10.75                     | 2024-05-10T00:20:00.000Z | prod
4.05                                      | 11.875                    | 2024-05-10T00:20:00.000Z | qa
3.19                                      | 9.5                       | 2024-05-10T00:20:00.000Z | staging
11.860805860805861                        | 12.375                    | 2024-05-10T00:15:00.000Z | prod
23.702205882352942                        | 12.125                    | 2024-05-10T00:15:00.000Z | qa
7.784911616161616                         | 11.5                      | 2024-05-10T00:15:00.000Z | staging
;

oneRateWithBucketAndClusterThenFilter
required_capability: metrics_command
TS k8s | WHERE cluster=="prod" | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod
11.562737642585551                       | 2024-05-10T00:10:00.000Z | prod
;


oneRateWithBucketAndClusterThenFilter
required_capability: metrics_command
TS k8s | WHERE cluster=="prod" | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod
11.562737642585551                       | 2024-05-10T00:10:00.000Z | prod
;

notEnoughSamples
required_capability: metrics_command
TS k8s | WHERE @timestamp <= "2024-05-10T00:06:14.000Z" | STATS max(rate(network.total_bytes_in)) BY pod, time_bucket = bucket(@timestamp,1minute) | SORT pod, time_bucket DESC | LIMIT 10;

max(rate(network.total_bytes_in)):double | pod:keyword | time_bucket:datetime    
null                                     | one         | 2024-05-10T00:06:00.000Z
0.075                                    | one         | 2024-05-10T00:05:00.000Z
null                                     | one         | 2024-05-10T00:04:00.000Z
16.45                                    | one         | 2024-05-10T00:03:00.000Z
null                                     | one         | 2024-05-10T00:01:00.000Z
null                                     | three       | 2024-05-10T00:06:00.000Z
null                                     | three       | 2024-05-10T00:05:00.000Z
1.534413580246913                        | three       | 2024-05-10T00:03:00.000Z
null                                     | three       | 2024-05-10T00:02:00.000Z
null                                     | three       | 2024-05-10T00:01:00.000Z
;


max_over_time
required_capability: metrics_command
required_capability: max_over_time
// tag::max_over_time[]
TS k8s 
| STATS cost=sum(max_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) 
// end::max_over_time[]
| SORT cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::max_over_time-result[]
cost:double | cluster:keyword | time_bucket:datetime    
32.75       | qa              | 2024-05-10T00:17:00.000Z
32.25       | staging         | 2024-05-10T00:09:00.000Z
31.75       | qa              | 2024-05-10T00:06:00.000Z
29.0        | prod            | 2024-05-10T00:19:00.000Z
// end::max_over_time-result[]
28.625      | qa              | 2024-05-10T00:09:00.000Z
24.625      | qa              | 2024-05-10T00:18:00.000Z
23.25       | qa              | 2024-05-10T00:11:00.000Z
23.125      | staging         | 2024-05-10T00:08:00.000Z
22.75       | prod            | 2024-05-10T00:13:00.000Z
22.75       | qa              | 2024-05-10T00:08:00.000Z
;

max_over_time_of_double_no_grouping
required_capability: metrics_command
required_capability: max_over_time
TS k8s
| STATS cost=sum(max_over_time(network.cost)) BY time_bucket = bucket(@timestamp,1minute)
| SORT cost DESC, time_bucket DESC | LIMIT 10;

cost:double | time_bucket:datetime
83.125      | 2024-05-10T00:09:00.000Z
65.75       | 2024-05-10T00:08:00.000Z
60.375      | 2024-05-10T00:17:00.000Z
55.25       | 2024-05-10T00:18:00.000Z
51.625      | 2024-05-10T00:22:00.000Z
50.125      | 2024-05-10T00:15:00.000Z
44.875      | 2024-05-10T00:06:00.000Z
43.5        | 2024-05-10T00:20:00.000Z
42.625      | 2024-05-10T00:13:00.000Z
42.25       | 2024-05-10T00:03:00.000Z
;

max_over_time_of_ip
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS ip = max(max_over_time(client.ip)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;
ip:ip       | time_bucket:datetime
10.10.20.34 | 2024-05-10T00:00:00.000Z
10.10.20.33 | 2024-05-10T00:01:00.000Z
10.10.20.35 | 2024-05-10T00:02:00.000Z
10.10.20.35 | 2024-05-10T00:03:00.000Z
10.10.20.35 | 2024-05-10T00:04:00.000Z
10.10.20.35 | 2024-05-10T00:05:00.000Z
10.10.20.35 | 2024-05-10T00:06:00.000Z
10.10.20.35 | 2024-05-10T00:07:00.000Z
10.10.20.34 | 2024-05-10T00:08:00.000Z
10.10.20.35 | 2024-05-10T00:09:00.000Z
;

max_over_time_of_ip_grouping
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS ip = max(max_over_time(client.ip)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

ip:ip       | cluster:keyword | time_bucket:datetime
10.10.20.30 | prod            | 2024-05-10T00:00:00.000Z
10.10.20.34 | staging         | 2024-05-10T00:00:00.000Z
10.10.20.31 | prod            | 2024-05-10T00:01:00.000Z
10.10.20.33 | qa              | 2024-05-10T00:01:00.000Z
10.10.20.35 | prod            | 2024-05-10T00:02:00.000Z
10.10.20.34 | qa              | 2024-05-10T00:02:00.000Z
10.10.20.35 | staging         | 2024-05-10T00:02:00.000Z
10.10.20.33 | prod            | 2024-05-10T00:03:00.000Z
10.10.20.35 | qa              | 2024-05-10T00:03:00.000Z
10.10.20.34 | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_long
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS bytes_in = sum(max_over_time(network.bytes_in)) BY time_bucket = bucket(@timestamp,1minute) | SORT bytes_in DESC, time_bucket | LIMIT 10;

bytes_in:long | time_bucket:datetime
6707          | 2024-05-10T00:18:00.000Z
6000          | 2024-05-10T00:20:00.000Z
5899          | 2024-05-10T00:17:00.000Z
4836          | 2024-05-10T00:09:00.000Z
4384          | 2024-05-10T00:15:00.000Z
4115          | 2024-05-10T00:08:00.000Z
4030          | 2024-05-10T00:14:00.000Z
3685          | 2024-05-10T00:13:00.000Z
3623          | 2024-05-10T00:02:00.000Z
3618          | 2024-05-10T00:06:00.000Z
;

max_over_time_of_long_grouping
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS bytes_in = sum(max_over_time(network.bytes_in)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT bytes_in DESC, time_bucket | LIMIT 10;

bytes_in:long | cluster:keyword | time_bucket:datetime
3013          | prod            | 2024-05-10T00:18:00.000Z
2848          | prod            | 2024-05-10T00:17:00.000Z
2483          | prod            | 2024-05-10T00:20:00.000Z
2247          | qa              | 2024-05-10T00:18:00.000Z
2153          | qa              | 2024-05-10T00:15:00.000Z
2087          | qa              | 2024-05-10T00:17:00.000Z
2035          | staging         | 2024-05-10T00:09:00.000Z
1908          | qa              | 2024-05-10T00:20:00.000Z
1904          | qa              | 2024-05-10T00:06:00.000Z
1811          | prod            | 2024-05-10T00:13:00.000Z
;

max_over_time_of_boolean
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS eth0_up = min(max_over_time(network.eth0.up)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

eth0_up:boolean | time_bucket:datetime
false           | 2024-05-10T00:00:00.000Z
false           | 2024-05-10T00:01:00.000Z
true            | 2024-05-10T00:02:00.000Z
false           | 2024-05-10T00:03:00.000Z
false           | 2024-05-10T00:04:00.000Z
false           | 2024-05-10T00:05:00.000Z
false           | 2024-05-10T00:06:00.000Z
false           | 2024-05-10T00:07:00.000Z
false           | 2024-05-10T00:08:00.000Z
false           | 2024-05-10T00:09:00.000Z
;

max_over_time_of_boolean_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS eth0_up = min(max_over_time(network.eth0.up)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

eth0_up:boolean | cluster:keyword | time_bucket:datetime
false           | prod            | 2024-05-10T00:00:00.000Z
true            | staging         | 2024-05-10T00:00:00.000Z
false           | prod            | 2024-05-10T00:01:00.000Z
false           | qa              | 2024-05-10T00:01:00.000Z
true            | prod            | 2024-05-10T00:02:00.000Z
true            | qa              | 2024-05-10T00:02:00.000Z
true            | staging         | 2024-05-10T00:02:00.000Z
false           | prod            | 2024-05-10T00:03:00.000Z
true            | qa              | 2024-05-10T00:03:00.000Z
false           | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_date_nanos
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS last_up = max(max_over_time(network.eth0.last_up)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

last_up:date_nanos             | time_bucket:datetime
2024-05-03T15:37:33.324440296Z | 2024-05-10T00:00:00.000Z
2024-04-09T03:20:29.012174065Z | 2024-05-10T00:01:00.000Z
2024-05-08T10:03:43.290628939Z | 2024-05-10T00:02:00.000Z
2024-05-02T09:02:26.799002478Z | 2024-05-10T00:03:00.000Z
2024-05-09T23:18:49.214537497Z | 2024-05-10T00:04:00.000Z
2024-04-25T19:33:06.187780912Z | 2024-05-10T00:05:00.000Z
2024-05-08T01:35:07.955894784Z | 2024-05-10T00:06:00.000Z
2024-05-02T07:53:33.802839368Z | 2024-05-10T00:07:00.000Z
2024-05-08T18:36:40.027496014Z | 2024-05-10T00:08:00.000Z
2024-05-08T23:33:34.42759108Z  | 2024-05-10T00:09:00.000Z
;

max_over_time_of_date_nanos_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS last_up = max(max_over_time(network.eth0.last_up)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

last_up:date_nanos             | cluster:keyword | time_bucket:datetime
2024-03-25T09:57:51.755620402Z | prod            | 2024-05-10T00:00:00.000Z
2024-05-03T15:37:33.324440296Z | staging         | 2024-05-10T00:00:00.000Z
2024-04-09T03:20:29.012174065Z | prod            | 2024-05-10T00:01:00.000Z
2024-03-31T23:14:25.575848186Z | qa              | 2024-05-10T00:01:00.000Z
2024-05-06T19:01:53.843370676Z | prod            | 2024-05-10T00:02:00.000Z
2024-05-02T13:22:35.021783722Z | qa              | 2024-05-10T00:02:00.000Z
2024-05-08T10:03:43.290628939Z | staging         | 2024-05-10T00:02:00.000Z
2024-04-04T01:13:26.805245198Z | prod            | 2024-05-10T00:03:00.000Z
2024-04-28T06:40:53.255612616Z | qa              | 2024-05-10T00:03:00.000Z
2024-05-02T09:02:26.799002478Z | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_version
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS version = max(max_over_time(network.eth0.firmware_version)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

version:version | time_bucket:datetime
13.10.4         | 2024-05-10T00:00:00.000Z
13.10.4         | 2024-05-10T00:01:00.000Z
13.10.4         | 2024-05-10T00:02:00.000Z
15.6.9          | 2024-05-10T00:03:00.000Z
10.3.2          | 2024-05-10T00:04:00.000Z
13.10.4         | 2024-05-10T00:05:00.000Z
13.10.4         | 2024-05-10T00:06:00.000Z
10.4.3          | 2024-05-10T00:07:00.000Z
15.6.9          | 2024-05-10T00:08:00.000Z
15.6.9          | 2024-05-10T00:09:00.000Z
;

max_over_time_of_version_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS version = max(max_over_time(network.eth0.firmware_version)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

version:version | cluster:keyword | time_bucket:datetime
13.10.4         | prod            | 2024-05-10T00:00:00.000Z
7.8.4           | staging         | 2024-05-10T00:00:00.000Z
13.10.4         | prod            | 2024-05-10T00:01:00.000Z
10.3.2          | qa              | 2024-05-10T00:01:00.000Z
13.10.4         | prod            | 2024-05-10T00:02:00.000Z
1.7.2           | qa              | 2024-05-10T00:02:00.000Z
7.8.4           | staging         | 2024-05-10T00:02:00.000Z
9.10.4          | prod            | 2024-05-10T00:03:00.000Z
1.7.2           | qa              | 2024-05-10T00:03:00.000Z
15.6.9          | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_integer
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS clients = avg(max_over_time(network.eth0.currently_connected_clients)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

clients:double    | time_bucket:datetime
726.6666666666666 | 2024-05-10T00:00:00.000Z
418.25            | 2024-05-10T00:01:00.000Z
550.3333333333334 | 2024-05-10T00:02:00.000Z
598.8             | 2024-05-10T00:03:00.000Z
546.3333333333334 | 2024-05-10T00:04:00.000Z
809.8             | 2024-05-10T00:05:00.000Z
656.8333333333334 | 2024-05-10T00:06:00.000Z
822.6666666666666 | 2024-05-10T00:07:00.000Z
605.25            | 2024-05-10T00:08:00.000Z
642.1111111111111 | 2024-05-10T00:09:00.000Z
;

max_over_time_of_integer_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS clients = avg(max_over_time(network.eth0.currently_connected_clients)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

clients:double | cluster:keyword | time_bucket:datetime
949.0          | prod            | 2024-05-10T00:00:00.000Z
615.5          | staging         | 2024-05-10T00:00:00.000Z
396.5          | prod            | 2024-05-10T00:01:00.000Z
440.0          | qa              | 2024-05-10T00:01:00.000Z
659.5          | prod            | 2024-05-10T00:02:00.000Z
565.0          | qa              | 2024-05-10T00:02:00.000Z
426.5          | staging         | 2024-05-10T00:02:00.000Z
742.0          | prod            | 2024-05-10T00:03:00.000Z
454.0          | qa              | 2024-05-10T00:03:00.000Z
672.0          | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_text
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS event_log = max(max_over_time(event_log)) BY time_bucket = bucket(@timestamp,1minute) | SORT event_log, time_bucket | LIMIT 10;

event_log:keyword | time_bucket:datetime
lacus sociosqu, lacinia suspendisse quisque tristique cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla platea imperdiet phasellus nam euismod justo curae. Leo | 2024-05-10T00:01:00.000Z
per cras sed mauris cubilia,                                                                                                                                                                                                           | 2024-05-10T00:07:00.000Z
platea morbi. Maecenas etiam venenatis augue orci                                                                                                                                                                                      | 2024-05-10T00:10:00.000Z
quam enim lobortis pellentesque neque facilisis dapibus, velit interdum mattis magna iaculis non fusce, morbi tempus sapien nulla maecenas cum nisl. Arcu porttitor nam suscipit eget nibh                                             | 2024-05-10T00:19:00.000Z
quisque tristique cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla                                                                                             | 2024-05-10T00:04:00.000Z
sociis in. Magna cursus netus integer lectus ac a et turpis, praesent fermentum auctor massa at tortor dis. Pulvinar id quam enim                                                                                                      | 2024-05-10T00:14:00.000Z
suspendisse ornare nulla scelerisque aliquam laoreet sollicitudin, primis aptent elementum condimentum neque litora maecenas aenean ante. Ridiculus purus mattis laoreet dui tortor at nascetur metus mauris, mi imperdiet             | 2024-05-10T00:16:00.000Z
tortor felis, vulputate tempor suscipit dui                                                                                                                                                                                            | 2024-05-10T00:00:00.000Z
tortor maecenas turpis donec est rutrum penatibus, velit quam ante condimentum dictum at nibh, nisl a lobortis lacus ultrices primis, vulputate quis volutpat hac tristique mattis. Hendrerit integer mattis venenatis                 | 2024-05-10T00:21:00.000Z
ullamcorper maecenas nulla, neque eu tellus mus                                                                                                                                                                                        | 2024-05-10T00:08:00.000Z
;

max_over_time_of_text_grouping
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS event_log = max(max_over_time(event_log)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT event_log, time_bucket | LIMIT 10;

event_log:keyword                                                                                                                                                                                      | cluster:keyword | time_bucket:datetime
Aenean himenaeos urna                                                                                                                                                                                                                  | prod            | 2024-05-10T00:03:00.000Z
at nibh, nisl a lobortis lacus ultrices primis, vulputate quis volutpat hac tristique mattis. Hendrerit integer mattis venenatis nibh ad nascetur posuere et, viverra tincidunt eu                                                     | qa              | 2024-05-10T00:10:00.000Z
condimentum lacinia elementum vivamus, sociis erat lectus torquent luctus pharetra, nunc cubilia imperdiet                                                                                                                             | qa              | 2024-05-10T00:13:00.000Z
cum nisl. Arcu porttitor nam                                                                                                                                                                                                           | prod            | 2024-05-10T00:14:00.000Z
dignissim libero ultrices posuere nam facilisis parturient, luctus                                                                                                                                                                     | prod            | 2024-05-10T00:01:00.000Z
eu pretium, netus magna sed diam iaculis etiam arcu, parturient orci augue nullam                                                                                                                                                      | qa              | 2024-05-10T00:12:00.000Z
eu pretium, netus magna sed diam iaculis etiam arcu, parturient orci augue nullam rutrum                                                                                                                                               | prod            | 2024-05-10T00:12:00.000Z
interdum ridiculus tellus risus iaculis faucibus. Eu cursus ante et nullam litora nulla habitasse nisl dignissim quisque molestie pretium, a                                                                                           | staging         | 2024-05-10T00:00:00.000Z
lacinia                                                                                                                                                                                                                                | staging         | 2024-05-10T00:10:00.000Z
lacus sociosqu, lacinia suspendisse quisque tristique cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla platea imperdiet phasellus nam euismod justo curae. Leo | qa              | 2024-05-10T00:01:00.000Z
;

max_over_time_of_keyword
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS pod = min(max_over_time(pod)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

pod:keyword | time_bucket:datetime
three       | 2024-05-10T00:00:00.000Z
one         | 2024-05-10T00:01:00.000Z
three       | 2024-05-10T00:02:00.000Z
one         | 2024-05-10T00:03:00.000Z
one         | 2024-05-10T00:04:00.000Z
one         | 2024-05-10T00:05:00.000Z
one         | 2024-05-10T00:06:00.000Z
one         | 2024-05-10T00:07:00.000Z
one         | 2024-05-10T00:08:00.000Z
one         | 2024-05-10T00:09:00.000Z
;

max_over_time_of_keyword_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS pod = min(max_over_time(pod)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

pod:keyword | cluster:keyword | time_bucket:datetime
three       | prod            | 2024-05-10T00:00:00.000Z
three       | staging         | 2024-05-10T00:00:00.000Z
one         | prod            | 2024-05-10T00:01:00.000Z
one         | qa              | 2024-05-10T00:01:00.000Z
three       | prod            | 2024-05-10T00:02:00.000Z
three       | qa              | 2024-05-10T00:02:00.000Z
three       | staging         | 2024-05-10T00:02:00.000Z
one         | prod            | 2024-05-10T00:03:00.000Z
three       | qa              | 2024-05-10T00:03:00.000Z
one         | staging         | 2024-05-10T00:03:00.000Z
;

max_over_time_of_aggregate_metric_double
required_capability: metrics_command
required_capability: max_over_time
TS k8s-downsampled | STATS tx = sum(max_over_time(network.eth0.tx)) BY time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket | LIMIT 10;
tx:double | time_bucket:datetime
6053.0    | 2024-05-09T23:30:00.000Z
6699.0    | 2024-05-09T23:40:00.000Z
5895.0    | 2024-05-09T23:50:00.000Z
;

max_over_time_of_aggregate_metric_double_grouping
required_capability: metrics_command
required_capability: max_over_time
TS k8s-downsampled | STATS tx = sum(max_over_time(network.eth0.tx)) BY cluster, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, cluster | LIMIT 10;

tx:double | cluster:keyword | time_bucket:datetime
1601.0    | prod            | 2024-05-09T23:30:00.000Z
2109.0    | qa              | 2024-05-09T23:30:00.000Z
2343.0    | staging         | 2024-05-09T23:30:00.000Z
1854.0    | prod            | 2024-05-09T23:40:00.000Z
2975.0    | qa              | 2024-05-09T23:40:00.000Z
1870.0    | staging         | 2024-05-09T23:40:00.000Z
2377.0    | prod            | 2024-05-09T23:50:00.000Z
1686.0    | qa              | 2024-05-09T23:50:00.000Z
1832.0    | staging         | 2024-05-09T23:50:00.000Z
;

max_over_time_with_filtering
required_capability: metrics_command
required_capability: max_over_time
TS k8s | WHERE pod == "one" | STATS tx = sum(max_over_time(network.bytes_in)) BY cluster, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, cluster | LIMIT 10;

tx:long | cluster:keyword | time_bucket:datetime
970     | prod            | 2024-05-10T00:00:00.000Z
842     | qa              | 2024-05-10T00:00:00.000Z
753     | staging         | 2024-05-10T00:00:00.000Z
990     | prod            | 2024-05-10T00:10:00.000Z
1006    | qa              | 2024-05-10T00:10:00.000Z
947     | staging         | 2024-05-10T00:10:00.000Z
953     | prod            | 2024-05-10T00:20:00.000Z
917     | qa              | 2024-05-10T00:20:00.000Z
749     | staging         | 2024-05-10T00:20:00.000Z
;

max_over_time_older_than_10h
required_capability: metrics_command
required_capability: max_over_time
TS k8s-downsampled | WHERE cluster == "qa" AND @timestamp < now() - 10 day | STATS cost = avg(max_over_time(network.eth0.rx)) BY pod, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, pod | LIMIT 5;

cost:double | pod:keyword | time_bucket:datetime
655.0       | one         | 2024-05-09T23:30:00.000Z
1.0         | three       | 2024-05-09T23:30:00.000Z
461.0       | two         | 2024-05-09T23:30:00.000Z
1049.0      | one         | 2024-05-09T23:40:00.000Z
1237.0      | three       | 2024-05-09T23:40:00.000Z
;

eval_on_max_over_time
required_capability: metrics_command
required_capability: max_over_time
TS k8s | STATS max_bytes = avg(max_over_time(network.bytes_in)) BY cluster, time_bucket = bucket(@timestamp, 10minute) | EVAL kb_minus_offset = (max_bytes - 100) / 1000.0 | LIMIT 10 | SORT time_bucket, cluster ;

max_bytes:double  | cluster:keyword | time_bucket:datetime     | kb_minus_offset:double
909.3333333333334 | prod            | 2024-05-10T00:00:00.000Z | 0.8093333333333333
908.6666666666666 | qa              | 2024-05-10T00:00:00.000Z | 0.8086666666666666
794.0             | staging         | 2024-05-10T00:00:00.000Z | 0.694
1005.0            | prod            | 2024-05-10T00:10:00.000Z | 0.905
980.0             | qa              | 2024-05-10T00:10:00.000Z | 0.88
917.6666666666666 | staging         | 2024-05-10T00:10:00.000Z | 0.8176666666666667
846.3333333333334 | prod            | 2024-05-10T00:20:00.000Z | 0.7463333333333334
941.6666666666666 | qa              | 2024-05-10T00:20:00.000Z | 0.8416666666666667
786.0             | staging         | 2024-05-10T00:20:00.000Z | 0.686
;

max_over_time_multi_values
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | WHERE @timestamp < "2024-05-10T00:10:00.000Z" | STATS events = sum(max_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 1minute) | SORT events desc, time_bucket  | LIMIT 10;

events:long | pod:keyword | time_bucket:datetime
27          | two         | 2024-05-10T00:08:00.000Z
27          | one         | 2024-05-10T00:09:00.000Z
26          | one         | 2024-05-10T00:08:00.000Z
24          | three       | 2024-05-10T00:06:00.000Z
24          | three       | 2024-05-10T00:09:00.000Z
21          | two         | 2024-05-10T00:02:00.000Z
20          | two         | 2024-05-10T00:09:00.000Z
18          | one         | 2024-05-10T00:01:00.000Z
17          | one         | 2024-05-10T00:05:00.000Z
14          | three       | 2024-05-10T00:00:00.000Z
;

max_over_time_null_values
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | WHERE @timestamp > "2024-05-10T00:10:00.000Z" and @timestamp < "2024-05-10T00:15:00.000Z" | STATS events = sum(max_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 1minute) | SORT events desc, time_bucket  | LIMIT 10;

events:long | pod:keyword | time_bucket:datetime
null        | one         | 2024-05-10T00:12:00.000Z
null        | two         | 2024-05-10T00:13:00.000Z
20          | two         | 2024-05-10T00:14:00.000Z
18          | two         | 2024-05-10T00:12:00.000Z
17          | one         | 2024-05-10T00:13:00.000Z
16          | one         | 2024-05-10T00:14:00.000Z
11          | one         | 2024-05-10T00:10:00.000Z
9           | one         | 2024-05-10T00:11:00.000Z
9           | three       | 2024-05-10T00:13:00.000Z
7           | two         | 2024-05-10T00:10:00.000Z
;

max_over_time_null_values
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | WHERE @timestamp > "2024-05-10T00:10:00.000Z" and @timestamp < "2024-05-10T00:15:00.000Z" | STATS events = sum(max_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 1minute) | SORT events desc, time_bucket | LIMIT 10;

events:long | pod:keyword | time_bucket:datetime
null        | one         | 2024-05-10T00:12:00.000Z
null        | two         | 2024-05-10T00:13:00.000Z
20          | two         | 2024-05-10T00:14:00.000Z
18          | two         | 2024-05-10T00:12:00.000Z
17          | one         | 2024-05-10T00:13:00.000Z
16          | one         | 2024-05-10T00:14:00.000Z
11          | one         | 2024-05-10T00:10:00.000Z
9           | one         | 2024-05-10T00:11:00.000Z
9           | three       | 2024-05-10T00:13:00.000Z
7           | two         | 2024-05-10T00:10:00.000Z
;

max_over_time_all_value_types
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS events = sum(max_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 10minute) | SORT events desc, pod, time_bucket | LIMIT 10 ;

events:long | pod:keyword | time_bucket:datetime
30          | one         | 2024-05-10T00:10:00.000Z
30          | two         | 2024-05-10T00:10:00.000Z
29          | one         | 2024-05-10T00:00:00.000Z
29          | three       | 2024-05-10T00:00:00.000Z
29          | two         | 2024-05-10T00:00:00.000Z
28          | three       | 2024-05-10T00:10:00.000Z
21          | three       | 2024-05-10T00:20:00.000Z
21          | two         | 2024-05-10T00:20:00.000Z
19          | one         | 2024-05-10T00:20:00.000Z
;

max_over_time_aggregate_metric_double_implicit_casting
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
required_capability: aggregate_metric_double_implicit_casting_in_aggs
TS k8s* | STATS bytes = sum(max_over_time(network.eth0.rx)) by time_bucket = bucket(@timestamp, 10minute) | SORT bytes desc, time_bucket | LIMIT 10 ;

bytes:double | time_bucket:datetime
9058.0       | 2024-05-10T00:20:00.000Z
8070.0       | 2024-05-10T00:10:00.000Z
7088.0       | 2024-05-09T23:50:00.000Z
6380.0       | 2024-05-09T23:30:00.000Z
6095.0       | 2024-05-09T23:40:00.000Z
4290.0       | 2024-05-10T00:00:00.000Z
;

max_over_time_aggregate_metric_double_implicit_casting_grouping
required_capability: metrics_command
required_capability: max_over_time
required_capability: k8s_dataset_additional_fields
required_capability: aggregate_metric_double_implicit_casting_in_aggs
TS k8s* | STATS bytes = sum(max_over_time(network.eth0.rx)) by pod, time_bucket = bucket(@timestamp, 10minute) | SORT bytes desc, pod, time_bucket | LIMIT 10 ;

bytes:double | pod:keyword | time_bucket:datetime
3156.0       | one         | 2024-05-10T00:20:00.000Z
3028.0       | three       | 2024-05-10T00:20:00.000Z
2874.0       | two         | 2024-05-10T00:20:00.000Z
2825.0       | one         | 2024-05-10T00:10:00.000Z
2810.0       | three       | 2024-05-09T23:40:00.000Z
2710.0       | three       | 2024-05-10T00:10:00.000Z
2653.0       | three       | 2024-05-09T23:50:00.000Z
2570.0       | one         | 2024-05-09T23:30:00.000Z
2535.0       | two         | 2024-05-10T00:10:00.000Z
2478.0       | one         | 2024-05-09T23:50:00.000Z
;

min_over_time
required_capability: metrics_command
required_capability: min_over_time
// tag::min_over_time[]
TS k8s 
| STATS cost=sum(min_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) 
// end::min_over_time[]
| SORT cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::min_over_time-result[]
cost:double | cluster:keyword | time_bucket:datetime    
29.0        | prod            | 2024-05-10T00:19:00.000Z
27.625      | qa              | 2024-05-10T00:06:00.000Z
24.25       | qa              | 2024-05-10T00:09:00.000Z
// end::min_over_time-result[]
23.125      | staging         | 2024-05-10T00:08:00.000Z
22.5        | prod            | 2024-05-10T00:13:00.000Z
18.625      | qa              | 2024-05-10T00:04:00.000Z
18.0        | qa              | 2024-05-10T00:11:00.000Z
17.75       | qa              | 2024-05-10T00:01:00.000Z
17.125      | qa              | 2024-05-10T00:22:00.000Z
16.875      | qa              | 2024-05-10T00:20:00.000Z
;

min_over_time_of_double_no_grouping
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS cost=sum(min_over_time(network.cost)) BY time_bucket = bucket(@timestamp,1minute)
| SORT cost DESC, time_bucket DESC | LIMIT 10;

cost:double | time_bucket:datetime
53.625      | 2024-05-10T00:09:00.000Z
47.875      | 2024-05-10T00:08:00.000Z
45.0        | 2024-05-10T00:22:00.000Z
40.375      | 2024-05-10T00:15:00.000Z
36.0        | 2024-05-10T00:06:00.000Z
35.75       | 2024-05-10T00:19:00.000Z
35.125      | 2024-05-10T00:17:00.000Z
34.0        | 2024-05-10T00:13:00.000Z
33.875      | 2024-05-10T00:12:00.000Z
33.75       | 2024-05-10T00:11:00.000Z
;

min_over_time_of_ip
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS ip = max(min_over_time(client.ip)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

ip:ip       | time_bucket:datetime
10.10.20.34 | 2024-05-10T00:00:00.000Z
10.10.20.33 | 2024-05-10T00:01:00.000Z
10.10.20.35 | 2024-05-10T00:02:00.000Z
10.10.20.35 | 2024-05-10T00:03:00.000Z
10.10.20.34 | 2024-05-10T00:04:00.000Z
10.10.20.35 | 2024-05-10T00:05:00.000Z
10.10.20.35 | 2024-05-10T00:06:00.000Z
10.10.20.33 | 2024-05-10T00:07:00.000Z
10.10.20.34 | 2024-05-10T00:08:00.000Z
10.10.20.35 | 2024-05-10T00:09:00.000Z
;

min_over_time_of_ip_grouping
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS ip = min(min_over_time(client.ip)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

ip:ip       | cluster:keyword | time_bucket:datetime
10.10.20.30 | prod            | 2024-05-10T00:00:00.000Z
10.10.20.34 | staging         | 2024-05-10T00:00:00.000Z
10.10.20.31 | prod            | 2024-05-10T00:01:00.000Z
10.10.20.31 | qa              | 2024-05-10T00:01:00.000Z
10.10.20.32 | prod            | 2024-05-10T00:02:00.000Z
10.10.20.30 | qa              | 2024-05-10T00:02:00.000Z
10.10.20.30 | staging         | 2024-05-10T00:02:00.000Z
10.10.20.33 | prod            | 2024-05-10T00:03:00.000Z
10.10.20.32 | qa              | 2024-05-10T00:03:00.000Z
10.10.20.32 | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_long
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS bytes_in = sum(min_over_time(network.bytes_in)) BY time_bucket = bucket(@timestamp,1minute) | SORT bytes_in DESC, time_bucket | LIMIT 10;

bytes_in:long | time_bucket:datetime
4903          | 2024-05-10T00:20:00.000Z
3734          | 2024-05-10T00:18:00.000Z
3655          | 2024-05-10T00:14:00.000Z
3519          | 2024-05-10T00:15:00.000Z
3439          | 2024-05-10T00:02:00.000Z
2937          | 2024-05-10T00:08:00.000Z
2909          | 2024-05-10T00:03:00.000Z
2873          | 2024-05-10T00:13:00.000Z
2584          | 2024-05-10T00:17:00.000Z
2430          | 2024-05-10T00:19:00.000Z
;

min_over_time_of_long_grouping
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS bytes_in = sum(min_over_time(network.bytes_in)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT bytes_in DESC, time_bucket | LIMIT 10;

bytes_in:long | cluster:keyword | time_bucket:datetime
2405          | prod            | 2024-05-10T00:20:00.000Z
2040          | prod            | 2024-05-10T00:18:00.000Z
1908          | qa              | 2024-05-10T00:20:00.000Z
1664          | prod            | 2024-05-10T00:13:00.000Z
1560          | staging         | 2024-05-10T00:12:00.000Z
1553          | prod            | 2024-05-10T00:19:00.000Z
1509          | staging         | 2024-05-10T00:14:00.000Z
1506          | staging         | 2024-05-10T00:08:00.000Z
1498          | qa              | 2024-05-10T00:02:00.000Z
1409          | staging         | 2024-05-10T00:18:00.000Z
;

min_over_time_of_boolean
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS eth0_up = max(min_over_time(network.eth0.up)) BY time_bucket = bucket(@timestamp,10minute) | SORT time_bucket | LIMIT 10;

eth0_up:boolean | time_bucket:datetime
false           | 2024-05-10T00:00:00.000Z
true            | 2024-05-10T00:10:00.000Z
true            | 2024-05-10T00:20:00.000Z
;

min_over_time_of_boolean_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS eth0_up = min(min_over_time(network.eth0.up)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

eth0_up:boolean | cluster:keyword | time_bucket:datetime
false           | prod            | 2024-05-10T00:00:00.000Z
true            | staging         | 2024-05-10T00:00:00.000Z
false           | prod            | 2024-05-10T00:01:00.000Z
false           | qa              | 2024-05-10T00:01:00.000Z
false           | prod            | 2024-05-10T00:02:00.000Z
true            | qa              | 2024-05-10T00:02:00.000Z
false           | staging         | 2024-05-10T00:02:00.000Z
false           | prod            | 2024-05-10T00:03:00.000Z
true            | qa              | 2024-05-10T00:03:00.000Z
false           | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_date_nanos
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS last_up = max(min_over_time(network.eth0.last_up)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

last_up:date_nanos             | time_bucket:datetime
2024-05-03T15:37:33.324440296Z | 2024-05-10T00:00:00.000Z
2024-04-09T03:20:29.012174065Z | 2024-05-10T00:01:00.000Z
2024-05-02T13:22:35.021783722Z | 2024-05-10T00:02:00.000Z
2024-04-28T06:40:53.255612616Z | 2024-05-10T00:03:00.000Z
2024-05-09T23:18:49.214537497Z | 2024-05-10T00:04:00.000Z
2024-04-25T19:33:06.187780912Z | 2024-05-10T00:05:00.000Z
2024-04-29T07:31:14.888937625Z | 2024-05-10T00:06:00.000Z
2024-04-19T06:08:33.072053267Z | 2024-05-10T00:07:00.000Z
2024-05-08T06:59:00.224636703Z | 2024-05-10T00:08:00.000Z
2024-05-08T23:33:34.42759108Z  | 2024-05-10T00:09:00.000Z
;

min_over_time_of_date_nanos_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS last_up = max(min_over_time(network.eth0.last_up)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

last_up:date_nanos             | cluster:keyword | time_bucket:datetime
2024-03-20T09:48:57.054739676Z | prod            | 2024-05-10T00:00:00.000Z
2024-05-03T15:37:33.324440296Z | staging         | 2024-05-10T00:00:00.000Z
2024-04-09T03:20:29.012174065Z | prod            | 2024-05-10T00:01:00.000Z
2024-03-31T23:14:25.575848186Z | qa              | 2024-05-10T00:01:00.000Z
2024-03-21T19:14:43.937075439Z | prod            | 2024-05-10T00:02:00.000Z
2024-05-02T13:22:35.021783722Z | qa              | 2024-05-10T00:02:00.000Z
2024-05-02T02:15:40.627302753Z | staging         | 2024-05-10T00:02:00.000Z
2024-04-04T01:13:26.805245198Z | prod            | 2024-05-10T00:03:00.000Z
2024-04-28T06:40:53.255612616Z | qa              | 2024-05-10T00:03:00.000Z
2024-04-09T11:53:40.737436413Z | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_version
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS version = max(min_over_time(network.eth0.firmware_version)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

version:version | time_bucket:datetime
13.10.4         | 2024-05-10T00:00:00.000Z
13.10.4         | 2024-05-10T00:01:00.000Z
13.10.4         | 2024-05-10T00:02:00.000Z
15.6.9          | 2024-05-10T00:03:00.000Z
10.3.2          | 2024-05-10T00:04:00.000Z
13.10.4         | 2024-05-10T00:05:00.000Z
13.10.4         | 2024-05-10T00:06:00.000Z
10.4.2          | 2024-05-10T00:07:00.000Z
15.6.9          | 2024-05-10T00:08:00.000Z
15.6.9          | 2024-05-10T00:09:00.000Z
;

min_over_time_of_version_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS version = max(min_over_time(network.eth0.firmware_version)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

version:version | cluster:keyword | time_bucket:datetime
13.10.4         | prod            | 2024-05-10T00:00:00.000Z
7.8.4           | staging         | 2024-05-10T00:00:00.000Z
13.10.4         | prod            | 2024-05-10T00:01:00.000Z
10.3.2          | qa              | 2024-05-10T00:01:00.000Z
13.10.4         | prod            | 2024-05-10T00:02:00.000Z
1.7.2           | qa              | 2024-05-10T00:02:00.000Z
7.8.4           | staging         | 2024-05-10T00:02:00.000Z
9.10.4          | prod            | 2024-05-10T00:03:00.000Z
1.7.2           | qa              | 2024-05-10T00:03:00.000Z
15.6.9          | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_integer
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS clients = avg(min_over_time(network.eth0.currently_connected_clients)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

clients:double     | time_bucket:datetime
553.3333333333334  | 2024-05-10T00:00:00.000Z
418.25             | 2024-05-10T00:01:00.000Z
467.5              | 2024-05-10T00:02:00.000Z
454.2              | 2024-05-10T00:03:00.000Z
279.3333333333333  | 2024-05-10T00:04:00.000Z
590.6              | 2024-05-10T00:05:00.000Z
578.6666666666666  | 2024-05-10T00:06:00.000Z
454.6666666666667  | 2024-05-10T00:07:00.000Z
512.25             | 2024-05-10T00:08:00.000Z
244.77777777777777 | 2024-05-10T00:09:00.000Z
;

min_over_time_of_integer_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS clients = avg(min_over_time(network.eth0.currently_connected_clients)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

clients:double | cluster:keyword | time_bucket:datetime
429.0          | prod            | 2024-05-10T00:00:00.000Z
615.5          | staging         | 2024-05-10T00:00:00.000Z
396.5          | prod            | 2024-05-10T00:01:00.000Z
440.0          | qa              | 2024-05-10T00:01:00.000Z
632.5          | prod            | 2024-05-10T00:02:00.000Z
565.0          | qa              | 2024-05-10T00:02:00.000Z
205.0          | staging         | 2024-05-10T00:02:00.000Z
742.0          | prod            | 2024-05-10T00:03:00.000Z
407.5          | qa              | 2024-05-10T00:03:00.000Z
357.0          | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_text
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS event_log = max(min_over_time(event_log)) BY time_bucket = bucket(@timestamp,1minute) | SORT event_log, time_bucket | LIMIT 10;

event_log:keyword                                                                                                                                                                                                                      | time_bucket:datetime
interdum ridiculus tellus risus iaculis faucibus. Eu cursus ante et nullam litora nulla habitasse nisl dignissim quisque molestie pretium, a                                                                                           | 2024-05-10T00:00:00.000Z
lacus sociosqu, lacinia suspendisse quisque tristique cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla platea imperdiet phasellus nam euismod justo curae. Leo | 2024-05-10T00:01:00.000Z
libero ultrices a facilisi fermentum tempor blandit                                                                                                                                                                                    | 2024-05-10T00:03:00.000Z
nisl                                                                                                                                                                                                                                   | 2024-05-10T00:09:00.000Z
per cras sed mauris cubilia,                                                                                                                                                                                                           | 2024-05-10T00:07:00.000Z
platea morbi. Maecenas etiam venenatis augue orci                                                                                                                                                                                      | 2024-05-10T00:10:00.000Z
primis habitant nullam porta pharetra, purus eleifend dictumst semper morbi volutpat tristique erat. Metus urna vestibulum ornare sodales torquent pulvinar leo                                                                        | 2024-05-10T00:19:00.000Z
quisque molestie pretium, a sapien                                                                                                                                                                                                     | 2024-05-10T00:17:00.000Z
quisque tristique cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla                                                                                             | 2024-05-10T00:04:00.000Z
semper morbi volutpat                                                                                                                                                                                                                  | 2024-05-10T00:16:00.000Z
;

min_over_time_of_text_grouping
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS event_log = max(min_over_time(event_log)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT event_log, time_bucket | LIMIT 10;

event_log:keyword                                                                                                                                                                                      | cluster:keyword | time_bucket:datetime
Aenean himenaeos urna                                                                                                                                                                                  | prod            | 2024-05-10T00:03:00.000Z
a et turpis, praesent fermentum auctor massa at tortor dis. Pulvinar id quam enim lobortis pellentesque neque facilisis dapibus, velit interdum mattis magna iaculis                                   | qa              | 2024-05-10T00:04:00.000Z
at nibh, nisl a lobortis lacus ultrices primis, vulputate quis volutpat hac tristique mattis. Hendrerit integer mattis venenatis nibh ad nascetur posuere et, viverra tincidunt eu                     | qa              | 2024-05-10T00:10:00.000Z
bibendum lacus lacinia                                                                                                                                                                                 | qa              | 2024-05-10T00:21:00.000Z
bibendum netus posuere, sodales aenean mauris ante orci curabitur                                                                                                                                      | prod            | 2024-05-10T00:14:00.000Z
condimentum lacinia elementum vivamus, sociis erat lectus torquent luctus pharetra, nunc cubilia imperdiet                                                                                             | qa              | 2024-05-10T00:13:00.000Z
cursus phasellus. Parturient aliquam cubilia libero ultrices a facilisi fermentum tempor blandit per, bibendum fringilla platea imperdiet phasellus nam euismod                                        | qa              | 2024-05-10T00:11:00.000Z
dictumst tristique condimentum gravida proin facilisi at praesent. Diam primis euismod fusce dapibus condimentum vulputate orci himenaeos, enim luctus viverra vitae sollicitudin ullamcorper maecenas | qa              | 2024-05-10T00:12:00.000Z
dignissim libero ultrices posuere nam facilisis parturient, luctus                                                                                                                                     | prod            | 2024-05-10T00:01:00.000Z
erat. Placerat mi litora fringilla tellus pretium aliquet ut ridiculus magnis magna, interdum dictumst lacinia hendrerit gravida torquent bibendum netus posuere, sodales aenean mauris                | qa              | 2024-05-10T00:03:00.000Z
;

min_over_time_of_keyword
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS pod = min(min_over_time(pod)) BY time_bucket = bucket(@timestamp,1minute) | SORT time_bucket | LIMIT 10;

pod:keyword | time_bucket:datetime
three       | 2024-05-10T00:00:00.000Z
one         | 2024-05-10T00:01:00.000Z
three       | 2024-05-10T00:02:00.000Z
one         | 2024-05-10T00:03:00.000Z
one         | 2024-05-10T00:04:00.000Z
one         | 2024-05-10T00:05:00.000Z
one         | 2024-05-10T00:06:00.000Z
one         | 2024-05-10T00:07:00.000Z
one         | 2024-05-10T00:08:00.000Z
one         | 2024-05-10T00:09:00.000Z
;

min_over_time_of_keyword_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS pod = min(min_over_time(pod)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT time_bucket, cluster | LIMIT 10;

pod:keyword | cluster:keyword | time_bucket:datetime
three       | prod            | 2024-05-10T00:00:00.000Z
three       | staging         | 2024-05-10T00:00:00.000Z
one         | prod            | 2024-05-10T00:01:00.000Z
one         | qa              | 2024-05-10T00:01:00.000Z
three       | prod            | 2024-05-10T00:02:00.000Z
three       | qa              | 2024-05-10T00:02:00.000Z
three       | staging         | 2024-05-10T00:02:00.000Z
one         | prod            | 2024-05-10T00:03:00.000Z
three       | qa              | 2024-05-10T00:03:00.000Z
one         | staging         | 2024-05-10T00:03:00.000Z
;

min_over_time_of_aggregate_metric_double
required_capability: metrics_command
required_capability: min_over_time
TS k8s-downsampled | STATS tx = sum(min_over_time(network.eth0.tx)) BY time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket | LIMIT 10;

tx:double | time_bucket:datetime
3087.0    | 2024-05-09T23:30:00.000Z
2815.0    | 2024-05-09T23:40:00.000Z
3085.0    | 2024-05-09T23:50:00.000Z
;

min_over_time_of_aggregate_metric_double_grouping
required_capability: metrics_command
required_capability: min_over_time
TS k8s-downsampled | STATS tx = sum(min_over_time(network.eth0.tx)) BY cluster, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, cluster | LIMIT 10;

tx:double | cluster:keyword | time_bucket:datetime
786.0     | prod            | 2024-05-09T23:30:00.000Z
1255.0    | qa              | 2024-05-09T23:30:00.000Z
1046.0    | staging         | 2024-05-09T23:30:00.000Z
870.0     | prod            | 2024-05-09T23:40:00.000Z
938.0     | qa              | 2024-05-09T23:40:00.000Z
1007.0    | staging         | 2024-05-09T23:40:00.000Z
1137.0    | prod            | 2024-05-09T23:50:00.000Z
786.0     | qa              | 2024-05-09T23:50:00.000Z
1162.0    | staging         | 2024-05-09T23:50:00.000Z
;

min_over_time_with_filtering
required_capability: metrics_command
required_capability: min_over_time
TS k8s | WHERE pod != "three" | STATS tx = sum(min_over_time(network.bytes_in)) BY cluster, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, cluster | LIMIT 10;

tx:long | cluster:keyword | time_bucket:datetime
181     | prod            | 2024-05-10T00:00:00.000Z
4       | qa              | 2024-05-10T00:00:00.000Z
32      | staging         | 2024-05-10T00:00:00.000Z
4       | prod            | 2024-05-10T00:10:00.000Z
6       | qa              | 2024-05-10T00:10:00.000Z
7       | staging         | 2024-05-10T00:10:00.000Z
694     | prod            | 2024-05-10T00:20:00.000Z
1110    | qa              | 2024-05-10T00:20:00.000Z
241     | staging         | 2024-05-10T00:20:00.000Z
;

min_over_time_older_than_10h
required_capability: metrics_command
required_capability: min_over_time
TS k8s-downsampled | WHERE cluster == "qa" AND @timestamp < now() - 10 day | STATS cost = avg(min_over_time(network.eth0.rx)) BY pod, time_bucket = bucket(@timestamp, 10minute) | SORT time_bucket, pod | LIMIT 5;

cost:double | pod:keyword | time_bucket:datetime
329.0       | one         | 2024-05-09T23:30:00.000Z
1.0         | three       | 2024-05-09T23:30:00.000Z
382.0       | two         | 2024-05-09T23:30:00.000Z
684.0       | one         | 2024-05-09T23:40:00.000Z
690.0       | three       | 2024-05-09T23:40:00.000Z
;

eval_on_min_over_time
required_capability: metrics_command
required_capability: min_over_time
TS k8s | STATS min_bytes = sum(min_over_time(network.bytes_in)) BY pod, time_bucket = bucket(@timestamp, 10minute) | EVAL kb = to_double(min_bytes) / 1000.0 | LIMIT 10 | SORT time_bucket, pod;

min_bytes:long | pod:keyword | time_bucket:datetime     | kb:double
35             | one         | 2024-05-10T00:00:00.000Z | 0.035
293            | three       | 2024-05-10T00:00:00.000Z | 0.293
182            | two         | 2024-05-10T00:00:00.000Z | 0.182
6              | one         | 2024-05-10T00:10:00.000Z | 0.006
200            | three       | 2024-05-10T00:10:00.000Z | 0.2
11             | two         | 2024-05-10T00:10:00.000Z | 0.011
451            | one         | 2024-05-10T00:20:00.000Z | 0.451
1747           | three       | 2024-05-10T00:20:00.000Z | 1.747
1594           | two         | 2024-05-10T00:20:00.000Z | 1.594
;

min_over_time_multi_values
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | WHERE @timestamp < "2024-05-10T00:10:00.000Z" | STATS events = sum(min_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 1minute) | SORT events, time_bucket | LIMIT 10;

events:long | pod:keyword | time_bucket:datetime
0           | two         | 2024-05-10T00:07:00.000Z
1           | two         | 2024-05-10T00:05:00.000Z
1           | one         | 2024-05-10T00:07:00.000Z
2           | two         | 2024-05-10T00:04:00.000Z
2           | one         | 2024-05-10T00:05:00.000Z
3           | one         | 2024-05-10T00:03:00.000Z
3           | one         | 2024-05-10T00:04:00.000Z
3           | two         | 2024-05-10T00:06:00.000Z
3           | one         | 2024-05-10T00:09:00.000Z
4           | one         | 2024-05-10T00:06:00.000Z
;

min_over_time_null_values
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | WHERE @timestamp > "2024-05-10T00:10:00.000Z" and @timestamp < "2024-05-10T00:15:00.000Z" | STATS events = sum(min_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 1minute) | SORT events NULLS FIRST, time_bucket  | LIMIT 10;

events:long | pod:keyword | time_bucket:datetime
null        | one         | 2024-05-10T00:12:00.000Z
null        | two         | 2024-05-10T00:13:00.000Z
2           | three       | 2024-05-10T00:11:00.000Z
3           | three       | 2024-05-10T00:13:00.000Z
3           | three       | 2024-05-10T00:14:00.000Z
5           | two         | 2024-05-10T00:11:00.000Z
7           | two         | 2024-05-10T00:10:00.000Z
7           | three       | 2024-05-10T00:12:00.000Z
9           | one         | 2024-05-10T00:11:00.000Z
11          | one         | 2024-05-10T00:10:00.000Z
;

min_over_time_all_value_types
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
TS k8s | STATS events = sum(min_over_time(events_received)) by pod, time_bucket = bucket(@timestamp, 10minute) | SORT events NULLS FIRST, pod, time_bucket | LIMIT 10 ;

events:long | pod:keyword | time_bucket:datetime
0           | one         | 2024-05-10T00:00:00.000Z
2           | three       | 2024-05-10T00:00:00.000Z
2           | two         | 2024-05-10T00:00:00.000Z
3           | two         | 2024-05-10T00:20:00.000Z
4           | three       | 2024-05-10T00:10:00.000Z
4           | two         | 2024-05-10T00:10:00.000Z
5           | one         | 2024-05-10T00:10:00.000Z
13          | three       | 2024-05-10T00:20:00.000Z
15          | one         | 2024-05-10T00:20:00.000Z
;

min_over_time_aggregate_metric_double_implicit_casting
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
required_capability: aggregate_metric_double_implicit_casting_in_aggs
TS k8s* | STATS bytes = sum(min_over_time(network.eth0.rx)) by time_bucket = bucket(@timestamp, 10minute) | SORT bytes, time_bucket | LIMIT 10 ;

bytes:double | time_bucket:datetime
535.0        | 2024-05-10T00:00:00.000Z
2775.0       | 2024-05-09T23:30:00.000Z
3076.0       | 2024-05-09T23:40:00.000Z
3111.0       | 2024-05-09T23:50:00.000Z
4552.0       | 2024-05-10T00:10:00.000Z
8465.0       | 2024-05-10T00:20:00.000Z
;

min_over_time_aggregate_metric_double_implicit_casting_grouping
required_capability: metrics_command
required_capability: min_over_time
required_capability: k8s_dataset_additional_fields
required_capability: aggregate_metric_double_implicit_casting_in_aggs
TS k8s* | STATS bytes = sum(min_over_time(network.eth0.rx)) by pod, time_bucket = bucket(@timestamp, 10minute) | SORT bytes, pod, time_bucket | LIMIT 10 ;

bytes:double | pod:keyword | time_bucket:datetime
114.0        | two         | 2024-05-10T00:00:00.000Z
196.0        | three       | 2024-05-10T00:00:00.000Z
225.0        | one         | 2024-05-10T00:00:00.000Z
742.0        | three       | 2024-05-09T23:30:00.000Z
781.0        | two         | 2024-05-09T23:40:00.000Z
947.0        | one         | 2024-05-09T23:30:00.000Z
974.0        | three       | 2024-05-09T23:50:00.000Z
1035.0       | two         | 2024-05-09T23:50:00.000Z
1086.0       | two         | 2024-05-09T23:30:00.000Z
1102.0       | one         | 2024-05-09T23:50:00.000Z
;

max_of_avg_over_time
required_capability: metrics_command
required_capability: avg_over_time
// tag::avg_over_time[]
TS k8s
| STATS max_cost=max(avg_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) 
// end::avg_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::avg_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
12.25           | prod            | 2024-05-10T00:19:00.000Z
12.0625         | qa              | 2024-05-10T00:06:00.000Z
// end::avg_over_time-result[]
11.875          | prod            | 2024-05-10T00:15:00.000Z
11.875          | qa              | 2024-05-10T00:09:00.000Z
11.625          | prod            | 2024-05-10T00:12:00.000Z
11.5            | prod            | 2024-05-10T00:05:00.000Z
11.25           | prod            | 2024-05-10T00:13:00.000Z
11.0            | qa              | 2024-05-10T00:07:00.000Z
;

avg_of_avg_over_time
required_capability: metrics_command
required_capability: avg_over_time
TS k8s | STATS avg_cost=avg(avg_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT avg_cost DESC, time_bucket DESC, cluster | LIMIT 10;

avg_cost:double    | cluster:keyword | time_bucket:datetime    
11.625             | prod            | 2024-05-10T00:12:00.000Z
10.6875            | prod            | 2024-05-10T00:00:00.000Z
10.145833333333332 | qa              | 2024-05-10T00:04:00.000Z
10.0               | staging         | 2024-05-10T00:11:00.000Z
9.895833333333334  | qa              | 2024-05-10T00:06:00.000Z
9.666666666666666  | prod            | 2024-05-10T00:19:00.000Z
8.875              | qa              | 2024-05-10T00:01:00.000Z
8.805555555555555  | qa              | 2024-05-10T00:09:00.000Z
8.71875            | prod            | 2024-05-10T00:22:00.000Z
8.5625             | qa              | 2024-05-10T00:22:00.000Z
;


max_of_last_over_time
required_capability: metrics_command
required_capability: last_over_time
// tag::last_over_time[]
TS k8s 
| STATS max_cost=max(last_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) 
// end::last_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::last_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.5            | staging         | 2024-05-10T00:09:00.000Z
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:06:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
// end::last_over_time-result[]
12.25           | prod            | 2024-05-10T00:19:00.000Z
12.125          | qa              | 2024-05-10T00:17:00.000Z
12.125          | prod            | 2024-05-10T00:00:00.000Z
12.0            | prod            | 2024-05-10T00:08:00.000Z
12.0            | qa              | 2024-05-10T00:08:00.000Z
11.875          | qa              | 2024-05-10T00:21:00.000Z
;

max_of_first_over_time
required_capability: metrics_command
required_capability: first_over_time
// tag::first_over_time[]
TS k8s
| STATS max_cost=max(first_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute)
// end::first_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::first_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
12.25           | prod            | 2024-05-10T00:19:00.000Z
// end::first_over_time-result[]
12.125          | qa              | 2024-05-10T00:07:00.000Z
12.125          | staging         | 2024-05-10T00:03:00.000Z
11.875          | prod            | 2024-05-10T00:15:00.000Z
11.875          | qa              | 2024-05-10T00:09:00.000Z
11.75           | qa              | 2024-05-10T00:06:00.000Z
11.625          | prod            | 2024-05-10T00:12:00.000Z
11.5            | staging         | 2024-05-10T00:16:00.000Z
;

sum_over_time
required_capability: metrics_command
required_capability: sum_over_time

TS k8s | STATS sum_cost=sum(sum_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT sum_cost DESC, time_bucket DESC, cluster | LIMIT 10;

sum_cost:double | cluster:keyword | time_bucket:datetime
    67.625      | qa              | 2024-05-10T00:17:00.000Z
    65.75       | staging         | 2024-05-10T00:09:00.000Z
    48.125      | qa              | 2024-05-10T00:09:00.000Z
    48.125      | qa              | 2024-05-10T00:06:00.000Z
    41.25       | qa              | 2024-05-10T00:11:00.000Z
    38.875      | qa              | 2024-05-10T00:04:00.000Z
    38.0        | qa              | 2024-05-10T00:15:00.000Z
    37.5        | prod            | 2024-05-10T00:09:00.000Z
    36.75       | qa              | 2024-05-10T00:08:00.000Z
    32.25       | qa              | 2024-05-10T00:18:00.000Z

;

count_over_time
required_capability: metrics_command
required_capability: count_over_time

// tag::count_over_time[]
TS k8s 
| STATS count=count(count_over_time(network.cost))
  BY cluster, time_bucket = bucket(@timestamp,1minute)
// end::count_over_time[]
| SORT count DESC, time_bucket DESC, cluster 
| LIMIT 10;

// tag::count_over_time-result[]
count:long | cluster:keyword | time_bucket:datetime
3          | staging         | 2024-05-10T00:22:00.000Z
3          | prod            | 2024-05-10T00:20:00.000Z
3          | prod            | 2024-05-10T00:19:00.000Z
// end::count_over_time-result[]
3          | prod            | 2024-05-10T00:18:00.000Z
3          | qa              | 2024-05-10T00:18:00.000Z
3          | staging         | 2024-05-10T00:18:00.000Z
3          | prod            | 2024-05-10T00:17:00.000Z
3          | qa              | 2024-05-10T00:17:00.000Z
3          | qa              | 2024-05-10T00:15:00.000Z
3          | staging         | 2024-05-10T00:15:00.000Z

;
count_distinct_over_time
required_capability: metrics_command
required_capability: distinct_over_time

// tag::count_distinct_over_time[]
TS k8s
| STATS distincts=count_distinct(count_distinct_over_time(network.cost)),
        distincts_imprecise=count_distinct(count_distinct_over_time(network.cost, 100))
  BY cluster, time_bucket = bucket(@timestamp,1minute)
// end::count_distinct_over_time[]
| SORT distincts DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::count_distinct_over_time-result[]
distincts:long | distincts_imprecise:long | cluster:keyword | time_bucket:datetime
3              |3              | qa              | 2024-05-10T00:17:00.000Z
3              |3              | qa              | 2024-05-10T00:15:00.000Z
3              |3              | prod            | 2024-05-10T00:09:00.000Z
// end::count_distinct_over_time-result[]
3              |3              | qa              | 2024-05-10T00:09:00.000Z
2              |2              | prod            | 2024-05-10T00:22:00.000Z
2              |2              | staging         | 2024-05-10T00:22:00.000Z
2              |2              | prod            | 2024-05-10T00:20:00.000Z
2              |2              | prod            | 2024-05-10T00:18:00.000Z
2              |2              | qa              | 2024-05-10T00:18:00.000Z
2              |2              | staging         | 2024-05-10T00:18:00.000Z

;


two_rates
required_capability: metrics_command

TS k8s | STATS cost_per_mb=max(rate(network.total_bytes_in) / 1024 * 1024 * rate(network.total_cost)) BY cluster, time_bucket = bucket(@timestamp,5minute) | SORT cost_per_mb DESC, cluster, time_bucket DESC | LIMIT 5;

cost_per_mb:double | cluster:keyword | time_bucket:datetime
5.119502189662629  | qa              | 2024-05-10T00:15:00.000Z
4.1135056380088795 | qa              | 2024-05-10T00:05:00.000Z
2.0974277092655393 | qa              | 2024-05-10T00:10:00.000Z
2.071474095190272  | prod            | 2024-05-10T00:15:00.000Z
1.59556462585034   | staging         | 2024-05-10T00:10:00.000Z
;

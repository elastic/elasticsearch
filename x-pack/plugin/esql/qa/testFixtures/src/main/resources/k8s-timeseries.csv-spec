timeseriesWithoutAggs
required_capability: ts_command_v0
TS k8s | sort @timestamp DESC, cluster, pod | keep @timestamp,cluster,pod,network.bytes_in,network.cost | limit 5;

@timestamp:datetime      | cluster:keyword | pod: keyword| network.bytes_in:long | network.cost:double
2024-05-10T00:22:59.000Z | qa              | one         | 206                   | 6.25
2024-05-10T00:22:54.000Z | qa              | three       | 972                   | 10.875
2024-05-10T00:22:53.000Z | prod            | two         | 812                   | 10.75
2024-05-10T00:22:53.000Z | staging         | one         | 238                   | 4.625
2024-05-10T00:22:49.000Z | staging         | two         | 3                     | 1.75
;

timeseriesWithAggsAndSourceQuoting
required_capability: ts_command_v0
required_capability: double_quotes_source_enclosing
TS "k8s" | STATS max_bytes=max(to_long(network.total_bytes_in)) BY cluster | SORT max_bytes DESC;

max_bytes:long | cluster: keyword
10797          | qa        
10277          | prod
7403           | staging
;

maxRate
required_capability: ts_command_v0
required_capability: double_quotes_source_enclosing
TS k8s | STATS max(rate(network.total_bytes_in));

max(rate(network.total_bytes_in)): double
13.17372515125324
;

maxRatePerMinute
required_capability: ts_command_v0
required_capability: double_quotes_source_enclosing
TS k8s | STATS max(60 * rate(network.total_bytes_in));

max(60 * rate(network.total_bytes_in)): double
790.4235090751944
;

maxCost
required_capability: ts_command_v0
TS k8s | STATS max_cost=max(rate(network.total_cost));

max_cost: double
0.16151685393258428
;

maxRateAndBytes
required_capability: ts_command_v0
TS k8s | STATS max(60 * rate(network.total_bytes_in)), max(network.bytes_in);

max(60 * rate(network.total_bytes_in)): double | max(network.bytes_in): long
790.4235090751944                              | 972
;

maxRateAndBytesExplicit
required_capability: ts_command_v0
TS k8s | STATS max(60 * rate(network.total_bytes_in)), max(last_over_time(network.bytes_in));

max(60 * rate(network.total_bytes_in)): double | max(last_over_time(network.bytes_in)): long
790.4235090751944                              | 972
;

maxRateAndMarkupBytes
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), max(network.bytes_in * 1.05);

max(rate(network.total_bytes_in)): double | max(network.bytes_in * 1.05): double
  13.17372515125324                       | 1020.6
;

maxRateAndMarkupBytesExplicit
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), max_bytes_in = max(last_over_time(network.bytes_in) * 1.05);

max(rate(network.total_bytes_in)): double | max_bytes_in: double
  13.17372515125324                       | 1020.6
;

maxRateAndLastBytesIn
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), max_bytes_in = max(last_over_time(network.bytes_in * 1.05));

max(rate(network.total_bytes_in)): double | max_bytes_in: double
  13.17372515125324                       | 1020.6
;

maxRateAndBytesAndCost
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), max(max_over_time(network.bytes_in)), max(rate(network.total_cost));

max(rate(network.total_bytes_in)): double| max(max_over_time(network.bytes_in)): long| max(rate(network.total_cost)): double
13.17372515125324                        | 1021                                      | 0.16151685393258428
;

sumRate
required_capability: ts_command_v0
TS k8s | STATS bytes=sum(rate(network.total_bytes_in)), sum(rate(network.total_cost)) BY cluster | SORT cluster;

bytes: double       | sum(rate(network.total_cost)): double | cluster: keyword
24.49149357711476   | 0.3018995503437827                    | prod
33.308519044441084  | 0.4474920369252062                    | qa
18.610708062016123  | 0.24387090901805775                   | staging
;

oneRateWithBucket
required_capability: ts_command_v0
// tag::rate[]
TS k8s
| STATS max_rate=MAX(RATE(network.total_bytes_in)) BY time_bucket = TBUCKET(5minute)
// end::rate[]
| SORT time_bucket DESC | LIMIT 2;

// tag::rate-result[]
max_rate: double    | time_bucket:date
6.980660660660663   | 2024-05-10T00:20:00.000Z
23.702205882352942  | 2024-05-10T00:15:00.000Z
// end::rate-result[]
;

oneRateWithTBucket
required_capability: ts_command_v0
required_capability: tbucket
TS k8s
| STATS max(rate(network.total_bytes_in)) BY time_bucket = tbucket(5minute)
| SORT time_bucket DESC | LIMIT 2;

max(rate(network.total_bytes_in)): double | time_bucket:date
6.980660660660663                         | 2024-05-10T00:20:00.000Z
23.702205882352942                        | 2024-05-10T00:15:00.000Z
;

twoRatesWithBucket
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), sum(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute) | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | sum(rate(network.total_bytes_in)):double | time_bucket:datetime    
6.980660660660663                        | 23.959973363184154                       | 2024-05-10T00:20:00.000Z
23.702205882352942                       | 94.9517511187984                         | 2024-05-10T00:15:00.000Z
14.97039381153305                        | 63.00652190262822                        | 2024-05-10T00:10:00.000Z
;

twoRatesWithTBucket
required_capability: ts_command_v0
required_capability: tbucket
TS k8s | STATS max(rate(network.total_bytes_in)), sum(rate(network.total_bytes_in)) BY time_bucket = tbucket(5minute) | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | sum(rate(network.total_bytes_in)):double | time_bucket:datetime    
6.980660660660663                        | 23.959973363184154                       | 2024-05-10T00:20:00.000Z
23.702205882352942                       | 94.9517511187984                         | 2024-05-10T00:15:00.000Z
14.97039381153305                        | 63.00652190262822                        | 2024-05-10T00:10:00.000Z
;

oneRateWithBucketAndCluster
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC, cluster | LIMIT 6;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
4.05                                     | 2024-05-10T00:20:00.000Z | qa
3.19                                     | 2024-05-10T00:20:00.000Z | staging
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod 
23.702205882352942                       | 2024-05-10T00:15:00.000Z | qa 
7.784911616161616                        | 2024-05-10T00:15:00.000Z | staging
;

BytesAndCostByBucketAndCluster
required_capability: ts_command_v0
TS k8s | STATS max(rate(network.total_bytes_in)), max(max_over_time(network.cost)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC, cluster | LIMIT 6;

max(rate(network.total_bytes_in)): double | max(max_over_time(network.cost)): double | time_bucket:date         | cluster: keyword
6.980660660660663                         | 10.75                                    | 2024-05-10T00:20:00.000Z | prod
4.05                                      | 11.875                                   | 2024-05-10T00:20:00.000Z | qa
3.19                                      | 9.5                                      | 2024-05-10T00:20:00.000Z | staging
11.860805860805861                        | 12.375                                   | 2024-05-10T00:15:00.000Z | prod
23.702205882352942                        | 12.125                                   | 2024-05-10T00:15:00.000Z | qa
7.784911616161616                         | 11.5                                     | 2024-05-10T00:15:00.000Z | staging
;

oneRateWithBucketAndClusterThenFilter
required_capability: ts_command_v0
TS k8s | WHERE cluster=="prod" | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod
11.562737642585551                       | 2024-05-10T00:10:00.000Z | prod
;


oneRateWithBucketAndClusterThenFilter
required_capability: ts_command_v0
TS k8s | WHERE cluster=="prod" | STATS max(rate(network.total_bytes_in)) BY time_bucket = bucket(@timestamp,5minute), cluster | SORT time_bucket DESC | LIMIT 3;

max(rate(network.total_bytes_in)):double | time_bucket:datetime     | cluster:keyword
6.980660660660663                        | 2024-05-10T00:20:00.000Z | prod
11.860805860805861                       | 2024-05-10T00:15:00.000Z | prod
11.562737642585551                       | 2024-05-10T00:10:00.000Z | prod
;

maxRateWithInlineFilter
required_capability: ts_command_v0
TS k8s | STATS max_rate = max(rate(network.total_bytes_in)) WHERE cluster=="prod" BY cluster | SORT cluster;

max_rate:double         | cluster:keyword
8.716707021791768       | prod
null                    | qa
null                    | staging
;

maxRateWithPreFilter
required_capability: ts_command_v0
TS k8s | WHERE cluster=="prod" | STATS max_rate = max(rate(network.total_bytes_in)) BY cluster | SORT cluster;

max_rate:double         | cluster:keyword
8.716707021791768       | prod
;

notEnoughSamples
required_capability: ts_command_v0
TS k8s | WHERE @timestamp <= "2024-05-10T00:06:14.000Z" | STATS max(rate(network.total_bytes_in)) BY pod, time_bucket = bucket(@timestamp,1minute) | SORT pod, time_bucket DESC | LIMIT 10;

max(rate(network.total_bytes_in)):double | pod:keyword | time_bucket:datetime    
null                                     | one         | 2024-05-10T00:06:00.000Z
0.075                                    | one         | 2024-05-10T00:05:00.000Z
null                                     | one         | 2024-05-10T00:04:00.000Z
16.45                                    | one         | 2024-05-10T00:03:00.000Z
null                                     | one         | 2024-05-10T00:01:00.000Z
null                                     | three       | 2024-05-10T00:06:00.000Z
null                                     | three       | 2024-05-10T00:05:00.000Z
1.534413580246913                        | three       | 2024-05-10T00:03:00.000Z
null                                     | three       | 2024-05-10T00:02:00.000Z
null                                     | three       | 2024-05-10T00:01:00.000Z
;


max_over_time
required_capability: ts_command_v0
// tag::max_over_time[]
TS k8s 
| STATS cost=SUM(MAX_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute) 
// end::max_over_time[]
| SORT cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::max_over_time-result[]
cost:double | cluster:keyword | time_bucket:datetime    
32.75       | qa              | 2024-05-10T00:17:00.000Z
32.25       | staging         | 2024-05-10T00:09:00.000Z
31.75       | qa              | 2024-05-10T00:06:00.000Z
29.0        | prod            | 2024-05-10T00:19:00.000Z
// end::max_over_time-result[]
28.625      | qa              | 2024-05-10T00:09:00.000Z
24.625      | qa              | 2024-05-10T00:18:00.000Z
23.25       | qa              | 2024-05-10T00:11:00.000Z
23.125      | staging         | 2024-05-10T00:08:00.000Z
22.75       | prod            | 2024-05-10T00:13:00.000Z
22.75       | qa              | 2024-05-10T00:08:00.000Z
;

min_over_time
required_capability: ts_command_v0
// tag::min_over_time[]
TS k8s 
| STATS cost=SUM(MIN_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute) 
// end::min_over_time[]
| SORT cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::min_over_time-result[]
cost:double | cluster:keyword | time_bucket:datetime    
29.0        | prod            | 2024-05-10T00:19:00.000Z
27.625      | qa              | 2024-05-10T00:06:00.000Z
24.25       | qa              | 2024-05-10T00:09:00.000Z
// end::min_over_time-result[]
23.125      | staging         | 2024-05-10T00:08:00.000Z
22.5        | prod            | 2024-05-10T00:13:00.000Z
18.625      | qa              | 2024-05-10T00:04:00.000Z
18.0        | qa              | 2024-05-10T00:11:00.000Z
17.75       | qa              | 2024-05-10T00:01:00.000Z
17.125      | qa              | 2024-05-10T00:22:00.000Z
16.875      | qa              | 2024-05-10T00:20:00.000Z
;

max_of_avg_over_time
required_capability: ts_command_v0
// tag::avg_over_time[]
TS k8s
| STATS max_cost=MAX(AVG_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute) 
// end::avg_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::avg_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
12.25           | prod            | 2024-05-10T00:19:00.000Z
12.0625         | qa              | 2024-05-10T00:06:00.000Z
// end::avg_over_time-result[]
11.875          | prod            | 2024-05-10T00:15:00.000Z
11.875          | qa              | 2024-05-10T00:09:00.000Z
11.625          | prod            | 2024-05-10T00:12:00.000Z
11.5            | prod            | 2024-05-10T00:05:00.000Z
11.25           | prod            | 2024-05-10T00:13:00.000Z
11.0            | qa              | 2024-05-10T00:07:00.000Z
;

percentile_over_time
required_capability: ts_command_v0
required_capability: percentile_over_time
// tag::percentile_over_time[]
TS k8s
| STATS p95_cost=MAX(PERCENTILE_OVER_TIME(network.cost, 95)), p99_cost=MAX(PERCENTILE_OVER_TIME(network.cost, 99)) BY cluster, time_bucket = TBUCKET(1minute)
// end::percentile_over_time[]
| SORT p95_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::percentile_over_time-result[]
p95_cost:double | p99_cost:double | cluster:keyword | time_bucket:datetime
12.375          | 12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | 12.375          | qa              | 2024-05-10T00:01:00.000Z
12.34375        | 12.36875        | qa              | 2024-05-10T00:06:00.000Z
12.25           | 12.25           | prod            | 2024-05-10T00:19:00.000Z
12.0125         | 12.1025         | qa              | 2024-05-10T00:07:00.000Z
11.98125        | 12.39625        | staging         | 2024-05-10T00:09:00.000Z
11.98125        | 12.09625        | prod            | 2024-05-10T00:00:00.000Z
11.875          | 11.875          | prod            | 2024-05-10T00:15:00.000Z
11.875          | 11.875          | qa              | 2024-05-10T00:09:00.000Z
11.80625        | 11.96125        | prod            | 2024-05-10T00:08:00.000Z

;

avg_of_avg_over_time
required_capability: ts_command_v0
TS k8s | STATS avg_cost=avg(avg_over_time(network.cost)) BY cluster, time_bucket = bucket(@timestamp,1minute) | SORT avg_cost DESC, time_bucket DESC, cluster | LIMIT 10;

avg_cost:double    | cluster:keyword | time_bucket:datetime    
11.625             | prod            | 2024-05-10T00:12:00.000Z
10.6875            | prod            | 2024-05-10T00:00:00.000Z
10.145833333333332 | qa              | 2024-05-10T00:04:00.000Z
10.0               | staging         | 2024-05-10T00:11:00.000Z
9.895833333333334  | qa              | 2024-05-10T00:06:00.000Z
9.666666666666666  | prod            | 2024-05-10T00:19:00.000Z
8.875              | qa              | 2024-05-10T00:01:00.000Z
8.805555555555555  | qa              | 2024-05-10T00:09:00.000Z
8.71875            | prod            | 2024-05-10T00:22:00.000Z
8.5625             | qa              | 2024-05-10T00:22:00.000Z
;


max_of_last_over_time
required_capability: ts_command_v0
// tag::last_over_time[]
TS k8s 
| STATS max_cost=MAX(LAST_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute) 
// end::last_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::last_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.5            | staging         | 2024-05-10T00:09:00.000Z
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:06:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
// end::last_over_time-result[]
12.25           | prod            | 2024-05-10T00:19:00.000Z
12.125          | qa              | 2024-05-10T00:17:00.000Z
12.125          | prod            | 2024-05-10T00:00:00.000Z
12.0            | prod            | 2024-05-10T00:08:00.000Z
12.0            | qa              | 2024-05-10T00:08:00.000Z
11.875          | qa              | 2024-05-10T00:21:00.000Z
;

max_of_first_over_time
required_capability: ts_command_v0
// tag::first_over_time[]
TS k8s
| STATS max_cost=MAX(FIRST_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute)
// end::first_over_time[]
| SORT max_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::first_over_time-result[]
max_cost:double | cluster:keyword | time_bucket:datetime    
12.375          | prod            | 2024-05-10T00:17:00.000Z
12.375          | qa              | 2024-05-10T00:01:00.000Z
12.25           | prod            | 2024-05-10T00:19:00.000Z
// end::first_over_time-result[]
12.125          | qa              | 2024-05-10T00:07:00.000Z
12.125          | staging         | 2024-05-10T00:03:00.000Z
11.875          | prod            | 2024-05-10T00:15:00.000Z
11.875          | qa              | 2024-05-10T00:09:00.000Z
11.75           | qa              | 2024-05-10T00:06:00.000Z
11.625          | prod            | 2024-05-10T00:12:00.000Z
11.5            | staging         | 2024-05-10T00:16:00.000Z
;

sum_over_time
required_capability: ts_command_v0

// tag::sum_over_time[]
TS k8s 
| STATS sum_cost=SUM(SUM_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute) 
// end::sum_over_time[]
| SORT sum_cost DESC, time_bucket DESC, cluster 
| LIMIT 10;

// tag::sum_over_time-result[]
sum_cost:double | cluster:keyword | time_bucket:datetime
    67.625      | qa              | 2024-05-10T00:17:00.000Z
    65.75       | staging         | 2024-05-10T00:09:00.000Z
// end::sum_over_time-result[]
    48.125      | qa              | 2024-05-10T00:09:00.000Z
    48.125      | qa              | 2024-05-10T00:06:00.000Z
    41.25       | qa              | 2024-05-10T00:11:00.000Z
    38.875      | qa              | 2024-05-10T00:04:00.000Z
    38.0        | qa              | 2024-05-10T00:15:00.000Z
    37.5        | prod            | 2024-05-10T00:09:00.000Z
    36.75       | qa              | 2024-05-10T00:08:00.000Z
    32.25       | qa              | 2024-05-10T00:18:00.000Z

;

count_over_time
required_capability: ts_command_v0

// tag::count_over_time[]
TS k8s 
| STATS count=COUNT(COUNT_OVER_TIME(network.cost))
  BY cluster, time_bucket = BUCKET(@timestamp,1minute)
// end::count_over_time[]
| SORT count DESC, time_bucket DESC, cluster 
| LIMIT 10;

// tag::count_over_time-result[]
count:long | cluster:keyword | time_bucket:datetime
3          | staging         | 2024-05-10T00:22:00.000Z
3          | prod            | 2024-05-10T00:20:00.000Z
3          | prod            | 2024-05-10T00:19:00.000Z
// end::count_over_time-result[]
3          | prod            | 2024-05-10T00:18:00.000Z
3          | qa              | 2024-05-10T00:18:00.000Z
3          | staging         | 2024-05-10T00:18:00.000Z
3          | prod            | 2024-05-10T00:17:00.000Z
3          | qa              | 2024-05-10T00:17:00.000Z
3          | qa              | 2024-05-10T00:15:00.000Z
3          | staging         | 2024-05-10T00:15:00.000Z

;
count_distinct_over_time
required_capability: ts_command_v0

// tag::count_distinct_over_time[]
TS k8s
| STATS distincts=COUNT_DISTINCT(COUNT_DISTINCT_OVER_TIME(network.cost)),
        distincts_imprecise=COUNT_DISTINCT(COUNT_DISTINCT_OVER_TIME(network.cost, 100))
  BY cluster, time_bucket = TBUCKET(1minute)
// end::count_distinct_over_time[]
| SORT distincts DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::count_distinct_over_time-result[]
distincts:long | distincts_imprecise:long | cluster:keyword | time_bucket:datetime
3              |3              | qa              | 2024-05-10T00:17:00.000Z
3              |3              | qa              | 2024-05-10T00:15:00.000Z
3              |3              | prod            | 2024-05-10T00:09:00.000Z
// end::count_distinct_over_time-result[]
3              |3              | qa              | 2024-05-10T00:09:00.000Z
2              |2              | prod            | 2024-05-10T00:22:00.000Z
2              |2              | staging         | 2024-05-10T00:22:00.000Z
2              |2              | prod            | 2024-05-10T00:20:00.000Z
2              |2              | prod            | 2024-05-10T00:18:00.000Z
2              |2              | qa              | 2024-05-10T00:18:00.000Z
2              |2              | staging         | 2024-05-10T00:18:00.000Z

;


two_rates
required_capability: ts_command_v0

TS k8s | STATS cost_per_mb=max(rate(network.total_bytes_in) / 1024 * 1024 * rate(network.total_cost)) BY cluster, time_bucket = bucket(@timestamp,5minute) | SORT cost_per_mb DESC, cluster, time_bucket DESC | LIMIT 5;

cost_per_mb:double | cluster:keyword | time_bucket:datetime
5.119502189662629  | qa              | 2024-05-10T00:15:00.000Z
4.1135056380088795 | qa              | 2024-05-10T00:05:00.000Z
2.0974277092655393 | qa              | 2024-05-10T00:10:00.000Z
2.071474095190272  | prod            | 2024-05-10T00:15:00.000Z
1.59556462585034   | staging         | 2024-05-10T00:10:00.000Z
;

present_over_time
required_capability: ts_command_v0

// tag::present_over_time[]
TS k8s 
| WHERE cluster == "prod" AND pod == "two" 
| STATS events_received = MAX(PRESENT_OVER_TIME(events_received)) BY pod, time_bucket = TBUCKET(2 minute)
// end::present_over_time[] 
| SORT time_bucket
;
ignoreOrder:true

// tag::present_over_time-result[]
events_received:boolean | pod:keyword | time_bucket:datetime
true                    | two         | 2024-05-10T00:02:00.000Z
true                    | two         | 2024-05-10T00:08:00.000Z
false                   | two         | 2024-05-10T00:10:00.000Z
false                   | two         | 2024-05-10T00:12:00.000Z
// end::present_over_time-result[]
true                    | two         | 2024-05-10T00:14:00.000Z
true                    | two         | 2024-05-10T00:16:00.000Z
false                   | two         | 2024-05-10T00:18:00.000Z
true                    | two         | 2024-05-10T00:20:00.000Z
true                    | two         | 2024-05-10T00:22:00.000Z
;

absent_over_time
required_capability: ts_command_v0

// tag::absent_over_time[]
TS k8s 
| WHERE cluster == "prod" AND pod == "two" 
| STATS events_received = MAX(ABSENT_OVER_TIME(events_received)) BY pod, time_bucket = TBUCKET(2 minute)
// end::absent_over_time[] 
| SORT time_bucket
;
ignoreOrder:true

// tag::absent_over_time-result[]
events_received:boolean  | pod:keyword | time_bucket:datetime
false                    | two         | 2024-05-10T00:02:00.000Z
false                    | two         | 2024-05-10T00:08:00.000Z
true                     | two         | 2024-05-10T00:10:00.000Z
true                     | two         | 2024-05-10T00:12:00.000Z
// end::absent_over_time-result[]
false                    | two         | 2024-05-10T00:14:00.000Z
false                    | two         | 2024-05-10T00:16:00.000Z
true                     | two         | 2024-05-10T00:18:00.000Z
false                    | two         | 2024-05-10T00:20:00.000Z
false                    | two         | 2024-05-10T00:22:00.000Z
;

tsidMetadataAttributeCount
required_capability: ts_command_v0
required_capability: metadata_tsid_field

TS k8s METADATA _tsid
| STATS cnt = count_distinct(_tsid)
;

cnt:long
9
;

tsidMetadataAttributeAggregation
required_capability: ts_command_v0
required_capability: metadata_tsid_field

TS k8s METADATA _tsid
| STATS cnt = count_distinct(_tsid) BY cluster, pod
| SORT cluster
;
ignoreOrder:true

cnt:long | cluster:keyword | pod:keyword
1        | staging         | one
1        | staging         | two
1        | staging         | three
1        | qa              | one
1        | qa              | two
1        | qa              | three
1        | prod            | one
1        | prod            | two
1        | prod            | three
;

inlineStatsAfterStatsCommand
required_capability: ts_command_v0
required_capability: tbucket
TS k8s
| STATS max_cost=max(last_over_time(network.eth0.tx)) BY pod, cluster, time_bucket = TBUCKET(1h)
| INLINE STATS max_cluster_cost=max(max_cost) by cluster
| SORT cluster, pod, time_bucket
| LIMIT 10
;

max_cost:integer | pod:keyword | time_bucket:datetime     | max_cluster_cost:integer | cluster:keyword
1149             | one         | 2024-05-10T00:00:00.000Z | 1149                     | prod
928              | three       | 2024-05-10T00:00:00.000Z | 1149                     | prod
967              | two         | 2024-05-10T00:00:00.000Z | 1149                     | prod
1380             | one         | 2024-05-10T00:00:00.000Z | 1716                     | qa
1241             | three       | 2024-05-10T00:00:00.000Z | 1716                     | qa
1716             | two         | 2024-05-10T00:00:00.000Z | 1716                     | qa
581              | one         | 2024-05-10T00:00:00.000Z | 1209                     | staging
1209             | three       | 2024-05-10T00:00:00.000Z | 1209                     | staging
973              | two         | 2024-05-10T00:00:00.000Z | 1209                     | staging
;

max_of_stddev_over_time
required_capability: ts_command_v0
required_capability: variance_stddev_over_time
// tag::stddev_over_time[]
TS k8s
| STATS max_stddev_cost=MAX(STDDEV_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute)
// end::stddev_over_time[]
| EVAL max_stddev_cost = ROUND(max_stddev_cost, 6)
| SORT max_stddev_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::stddev_over_time-result[]
cluster:keyword | time_bucket:datetime     | max_stddev_cost:double
staging         | 2024-05-10T00:03:00.000Z | 5.4375
staging         | 2024-05-10T00:09:00.000Z | 5.1875
qa              | 2024-05-10T00:18:00.000Z | 4.097764
qa              | 2024-05-10T00:21:00.000Z | 4.0
staging         | 2024-05-10T00:20:00.000Z | 3.9375
// end::stddev_over_time-result[]
prod            | 2024-05-10T00:18:00.000Z | 3.93353
qa              | 2024-05-10T00:08:00.000Z | 3.89444
qa              | 2024-05-10T00:17:00.000Z | 3.882385
staging         | 2024-05-10T00:13:00.000Z | 3.835597
staging         | 2024-05-10T00:12:00.000Z | 3.8125

;

avg_variance_over_time
required_capability: ts_command_v0
required_capability: variance_stddev_over_time
// tag::variance_over_time[]
TS k8s
| STATS avg_var_cost=AVG(VARIANCE_OVER_TIME(network.cost)) BY cluster, time_bucket = TBUCKET(1minute)
// end::variance_over_time[]
| EVAL avg_var_cost = ROUND(avg_var_cost, 6)
| SORT avg_var_cost DESC, time_bucket DESC, cluster | LIMIT 10;

// tag::variance_over_time-result[]
cluster:keyword | time_bucket:datetime     | avg_var_cost:double
staging         | 2024-05-10T00:03:00.000Z | 20.478516
qa              | 2024-05-10T00:21:00.000Z | 16.0
qa              | 2024-05-10T00:18:00.000Z | 11.192274
staging         | 2024-05-10T00:09:00.000Z | 10.446904
// end::variance_over_time-result[]
qa              | 2024-05-10T00:17:00.000Z | 10.398003
qa              | 2024-05-10T00:08:00.000Z | 10.114583
staging         | 2024-05-10T00:20:00.000Z | 7.910156
staging         | 2024-05-10T00:13:00.000Z | 7.355903
prod            | 2024-05-10T00:02:00.000Z | 6.570313
prod            | 2024-05-10T00:18:00.000Z | 5.157552

;

stddev_sq_and_var_over_time_are_consistent
required_capability: ts_command_v0
required_capability: variance_stddev_over_time

TS k8s
| STATS sd=max(stddev_over_time(network.cost)), var=max(variance_over_time(network.cost)) BY cluster, time_bucket = TBUCKET(1minute)
| EVAL sd_squared = sd * sd
| EVAL sd_squared = ROUND(sd_squared, 6), var = ROUND(var, 6), sd = ROUND(sd, 6)
| KEEP sd, var, sd_squared, cluster, time_bucket
| SORT cluster, time_bucket
| LIMIT 10;

sd:double | var:double | sd_squared:double | cluster:keyword | time_bucket:datetime
1.4375    | 2.066406   | 2.066406          | prod            | 2024-05-10T00:00:00.000Z
0.0       | 0.0        | 0.0               | prod            | 2024-05-10T00:01:00.000Z
3.625     | 13.140625  | 13.140625         | prod            | 2024-05-10T00:02:00.000Z
0.0       | 0.0        | 0.0               | prod            | 2024-05-10T00:03:00.000Z
0.0       | 0.0        | 0.0               | prod            | 2024-05-10T00:04:00.000Z
2.75      | 7.5625     | 7.5625            | prod            | 2024-05-10T00:05:00.000Z
0.0       | 0.0        | 0.0               | prod            | 2024-05-10T00:06:00.000Z
1.9375    | 3.753906   | 3.753906          | prod            | 2024-05-10T00:08:00.000Z
3.406999  | 11.607639  | 11.607639         | prod            | 2024-05-10T00:09:00.000Z
0.0       | 0.0        | 0.0               | prod            | 2024-05-10T00:10:00.000Z

;

Max of Rate with Bucket
required_capability: ts_command_v0

TS k8s
| STATS maxRate = max(rate(network.total_cost))  BY tbucket = bucket(@timestamp, 1hour) 
;

maxRate:double | tbucket:datetime
0.058979885057471274 | 2024-05-10T00:00:00.000Z
;

Max of Rate with Bucket, rename _tsid
required_capability: ts_command_v0

TS k8s METADATA _tsid
| RENAME _tsid AS newTsid
| STATS maxRate = max(rate(network.total_cost))  BY tbucket = bucket(@timestamp, 1hour) 
;

maxRate:double | tbucket:datetime
0.058979885057471274 | 2024-05-10T00:00:00.000Z
;

Max of Rate with Bucket, drop _tsid
required_capability: ts_command_v0

TS k8s METADATA _tsid
| DROP _tsid
| STATS maxRate = max(rate(network.total_cost))  BY tbucket = bucket(@timestamp, 1hour) 
;

maxRate:double | tbucket:datetime
0.058979885057471274 | 2024-05-10T00:00:00.000Z
;


Rename timestamp when aggs don't require timestamp
required_capability: ts_command_v0

TS k8s 
| RENAME @timestamp AS newTs 
| STATS mx = max(max_over_time(network.eth0.tx))  BY tbucket = bucket(newTs, 1hour)
;

mx:integer | tbucket:datetime
1716       | 2024-05-10T00:00:00.000Z
;



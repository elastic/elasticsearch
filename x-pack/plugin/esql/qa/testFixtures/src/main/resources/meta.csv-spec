metaFunctionsSynopsis#[skip:-8.14.99]
meta functions | keep synopsis;

synopsis:keyword
"double|integer|long|unsigned_long abs(number:double|integer|long|unsigned_long)"
"double acos(number:double|integer|long|unsigned_long)"
"double asin(number:double|integer|long|unsigned_long)"
"double atan(number:double|integer|long|unsigned_long)"
"double atan2(y_coordinate:double|integer|long|unsigned_long, x_coordinate:double|integer|long|unsigned_long)"
"double avg(number:double|integer|long)"
"double|date bin(field:integer|long|double|date, buckets:integer|double|date_period|time_duration, ?from:integer|long|double|date, ?to:integer|long|double|date)"
"double|date bucket(field:integer|long|double|date, buckets:integer|double|date_period|time_duration, ?from:integer|long|double|date, ?to:integer|long|double|date)"
"boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version case(condition:boolean, trueValue...:boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version)"
"double cbrt(number:double|integer|long|unsigned_long)"
"double|integer|long|unsigned_long ceil(number:double|integer|long|unsigned_long)"
"boolean cidr_match(ip:ip, blockX...:keyword|text)"
"boolean|cartesian_point|cartesian_shape|date|geo_point|geo_shape|integer|ip|keyword|long|text coalesce(first:boolean|cartesian_point|cartesian_shape|date|geo_point|geo_shape|integer|ip|keyword|long|text, ?rest...:boolean|cartesian_point|cartesian_shape|date|geo_point|geo_shape|integer|ip|keyword|long|text)"
"keyword concat(string1:keyword|text, string2...:keyword|text)"
"double cos(angle:double|integer|long|unsigned_long)"
"double cosh(angle:double|integer|long|unsigned_long)"
"long count(?field:boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version)"
"long count_distinct(field:boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|version, ?precision:integer)"
"integer date_diff(unit:keyword|text, startTimestamp:date, endTimestamp:date)"
"long date_extract(datePart:keyword|text, date:date)"
"keyword date_format(?dateFormat:keyword|text, date:date)"
"date date_parse(?datePattern:keyword|text, dateString:keyword|text)"
"date date_trunc(interval:date_period|time_duration, date:date)"
double e()
"boolean ends_with(str:keyword|text, suffix:keyword|text)"
"double|integer|long|unsigned_long floor(number:double|integer|long|unsigned_long)"
"keyword from_base64(string:keyword|text)"
"boolean|double|integer|ip|keyword|long|text|version greatest(first:boolean|double|integer|ip|keyword|long|text|version, ?rest...:boolean|double|integer|ip|keyword|long|text|version)"
"boolean|double|integer|ip|keyword|long|text|version least(first:boolean|double|integer|ip|keyword|long|text|version, ?rest...:boolean|double|integer|ip|keyword|long|text|version)"
"keyword left(string:keyword|text, length:integer)"
"integer length(string:keyword|text)"
"integer locate(string:keyword|text, substring:keyword|text, ?start:integer)"
"double log(?base:integer|unsigned_long|long|double, number:integer|unsigned_long|long|double)"
"double log10(number:double|integer|long|unsigned_long)"
"keyword|text ltrim(string:keyword|text)"
"double|integer|long max(number:double|integer|long)"
"double|integer|long median(number:double|integer|long)"
"double|integer|long median_absolute_deviation(number:double|integer|long)"
"double|integer|long min(number:double|integer|long)"
"double mv_avg(number:double|integer|long|unsigned_long)"
"keyword mv_concat(string:text|keyword, delim:text|keyword)"
"integer mv_count(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version)"
"boolean|date|double|integer|ip|keyword|long|text|version mv_dedupe(field:boolean|date|double|integer|ip|keyword|long|text|version)"
"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version mv_first(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version)"
"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version mv_last(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version)"
"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version mv_max(field:boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version)"
"double|integer|long|unsigned_long mv_median(number:double|integer|long|unsigned_long)"
"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version mv_min(field:boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version)"
"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|version mv_slice(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|version, start:integer, ?end:integer)"
"boolean|date|double|integer|ip|keyword|long|text|version mv_sort(field:boolean|date|double|integer|ip|keyword|long|text|version, ?order:keyword)"
"double|integer|long|unsigned_long mv_sum(number:double|integer|long|unsigned_long)"
"keyword mv_zip(string1:keyword|text, string2:keyword|text, ?delim:keyword|text)"
date now()
"double|integer|long percentile(number:double|integer|long, percentile:double|integer|long)"
double pi()
"double pow(base:double|integer|long|unsigned_long, exponent:double|integer|long|unsigned_long)"
"keyword replace(string:keyword|text, regex:keyword|text, newString:keyword|text)"
"keyword right(string:keyword|text, length:integer)"
"double|integer|long|unsigned_long round(number:double|integer|long|unsigned_long, ?decimals:integer)"
"keyword|text rtrim(string:keyword|text)"
"double signum(number:double|integer|long|unsigned_long)"
"double sin(angle:double|integer|long|unsigned_long)"
"double sinh(angle:double|integer|long|unsigned_long)"
"keyword split(string:keyword|text, delim:keyword|text)"
"double sqrt(number:double|integer|long|unsigned_long)"
"geo_point|cartesian_point st_centroid_agg(field:geo_point|cartesian_point)"
"boolean st_contains(geomA:geo_point|cartesian_point|geo_shape|cartesian_shape, geomB:geo_point|cartesian_point|geo_shape|cartesian_shape)"
"boolean st_disjoint(geomA:geo_point|cartesian_point|geo_shape|cartesian_shape, geomB:geo_point|cartesian_point|geo_shape|cartesian_shape)"
"boolean st_intersects(geomA:geo_point|cartesian_point|geo_shape|cartesian_shape, geomB:geo_point|cartesian_point|geo_shape|cartesian_shape)"
"boolean st_within(geomA:geo_point|cartesian_point|geo_shape|cartesian_shape, geomB:geo_point|cartesian_point|geo_shape|cartesian_shape)"
"double st_x(point:geo_point|cartesian_point)"
"double st_y(point:geo_point|cartesian_point)"
"boolean starts_with(str:keyword|text, prefix:keyword|text)"
"keyword substring(string:keyword|text, start:integer, ?length:integer)"
"long sum(number:double|integer|long)"
"double tan(angle:double|integer|long|unsigned_long)"
"double tanh(angle:double|integer|long|unsigned_long)"
double tau()
"keyword to_base64(string:keyword|text)"
"boolean to_bool(field:boolean|keyword|text|double|long|unsigned_long|integer)"
"boolean to_boolean(field:boolean|keyword|text|double|long|unsigned_long|integer)"
"cartesian_point to_cartesianpoint(field:cartesian_point|keyword|text)"
"cartesian_shape to_cartesianshape(field:cartesian_point|cartesian_shape|keyword|text)"
"date to_datetime(field:date|keyword|text|double|long|unsigned_long|integer)"
"double to_dbl(field:boolean|date|keyword|text|double|long|unsigned_long|integer|counter_double|counter_integer|counter_long)"
"double to_degrees(number:double|integer|long|unsigned_long)"
"double to_double(field:boolean|date|keyword|text|double|long|unsigned_long|integer|counter_double|counter_integer|counter_long)"
"date to_dt(field:date|keyword|text|double|long|unsigned_long|integer)"
"geo_point to_geopoint(field:geo_point|keyword|text)"
"geo_shape to_geoshape(field:geo_point|geo_shape|keyword|text)"
"integer to_int(field:boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer)"
"integer to_integer(field:boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer)"
"ip to_ip(field:ip|keyword|text)"
"long to_long(field:boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer|counter_long)"
"keyword|text to_lower(str:keyword|text)"
"double to_radians(number:double|integer|long|unsigned_long)"
"keyword to_str(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version)"
"keyword to_string(field:boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version)"
"unsigned_long to_ul(field:boolean|date|keyword|text|double|long|unsigned_long|integer)"
"unsigned_long to_ulong(field:boolean|date|keyword|text|double|long|unsigned_long|integer)"
"unsigned_long to_unsigned_long(field:boolean|date|keyword|text|double|long|unsigned_long|integer)"
"keyword|text to_upper(str:keyword|text)"
"version to_ver(field:keyword|text|version)"
"version to_version(field:keyword|text|version)"
"keyword|text trim(string:keyword|text)"
"boolean|date|double|integer|ip|keyword|long|text|version values(field:boolean|date|double|integer|ip|keyword|long|text|version)"
;

metaFunctionsArgs#[skip:-8.14.99]
  META functions
| EVAL name = SUBSTRING(name, 0, 14)
| KEEP name, argNames, argTypes, argDescriptions;

 name:keyword |          argNames:keyword          |                                               argTypes:keyword                                                                   |             argDescriptions:keyword
abs           |number                              |"double|integer|long|unsigned_long"                                                                                               |Numeric expression. If `null`, the function returns `null`.
acos          |number                              |"double|integer|long|unsigned_long"                                                                                               |Number between -1 and 1. If `null`, the function returns `null`.
asin          |number                              |"double|integer|long|unsigned_long"                                                                                               |Number between -1 and 1. If `null`, the function returns `null`.
atan          |number                              |"double|integer|long|unsigned_long"                                                                                               |Numeric expression. If `null`, the function returns `null`.
atan2         |[y_coordinate, x_coordinate]        |["double|integer|long|unsigned_long", "double|integer|long|unsigned_long"]                                                        |[y coordinate. If `null`\, the function returns `null`., x coordinate. If `null`\, the function returns `null`.]
avg           |number                              |"double|integer|long"                                                                                                             |[""]
bin           |[field, buckets, from, to]          |["integer|long|double|date", "integer|double|date_period|time_duration", "integer|long|double|date", "integer|long|double|date"]  |[Numeric or date expression from which to derive buckets., Target number of buckets., Start of the range. Can be a number or a date expressed as a string., End of the range. Can be a number or a date expressed as a string.]
bucket        |[field, buckets, from, to]          |["integer|long|double|date", "integer|double|date_period|time_duration", "integer|long|double|date", "integer|long|double|date"]  |[Numeric or date expression from which to derive buckets., Target number of buckets., Start of the range. Can be a number or a date expressed as a string., End of the range. Can be a number or a date expressed as a string.]
case          |[condition, trueValue]              |[boolean, "boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version"]                     |[A condition., The value that's returned when the corresponding condition is the first to evaluate to `true`. The default value is returned when no condition matches.]
cbrt          |number                              |"double|integer|long|unsigned_long"                                                                                               |"Numeric expression. If `null`, the function returns `null`."
ceil          |number                              |"double|integer|long|unsigned_long"                                                                                               |Numeric expression. If `null`, the function returns `null`.
cidr_match    |[ip, blockX]                        |[ip, "keyword|text"]                                                                                                              |[IP address of type `ip` (both IPv4 and IPv6 are supported)., CIDR block to test the IP against.]
coalesce      |first                               |"boolean|cartesian_point|cartesian_shape|date|geo_point|geo_shape|integer|ip|keyword|long|text"                                   |Expression to evaluate.
concat        |[string1, string2]                  |["keyword|text", "keyword|text"]                                                                                                  |[Strings to concatenate., Strings to concatenate.]
cos           |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
cosh          |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
count         |field                               |"boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version"                                |Column or literal for which to count the number of values.
count_distinct|[field, precision]                  |["boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|version", integer]                                   |[Column or literal for which to count the number of distinct values., ]
date_diff     |[unit, startTimestamp, endTimestamp]|["keyword|text", date, date]                                                                                                      |[Time difference unit, A string representing a start timestamp, A string representing an end timestamp]
date_extract  |[datePart, date]                    |["keyword|text", date]                                                                                                            |[Part of the date to extract.  Can be: `aligned_day_of_week_in_month`\, `aligned_day_of_week_in_year`\, `aligned_week_of_month`\, `aligned_week_of_year`\, `ampm_of_day`\, `clock_hour_of_ampm`\, `clock_hour_of_day`\, `day_of_month`\, `day_of_week`\, `day_of_year`\, `epoch_day`\, `era`\, `hour_of_ampm`\, `hour_of_day`\, `instant_seconds`\, `micro_of_day`\, `micro_of_second`\, `milli_of_day`\, `milli_of_second`\, `minute_of_day`\, `minute_of_hour`\, `month_of_year`\, `nano_of_day`\, `nano_of_second`\, `offset_seconds`\, `proleptic_month`\, `second_of_day`\, `second_of_minute`\, `year`\, or `year_of_era`. Refer to https://docs.oracle.com/javase/8/docs/api/java/time/temporal/ChronoField.html[java.time.temporal.ChronoField] for a description of these values.  If `null`\, the function returns `null`., Date expression. If `null`\, the function returns `null`.]
date_format   |[dateFormat, date]                  |["keyword|text", date]                                                                                                            |[Date format (optional).  If no format is specified\, the `yyyy-MM-dd'T'HH:mm:ss.SSSZ` format is used. If `null`\, the function returns `null`., Date expression. If `null`\, the function returns `null`.]
date_parse    |[datePattern, dateString]           |["keyword|text", "keyword|text"]                                                                                                  |[The date format. Refer to the https://docs.oracle.com/en/java/javase/14/docs/api/java.base/java/time/format/DateTimeFormatter.html[`DateTimeFormatter` documentation] for the syntax. If `null`\, the function returns `null`., Date expression as a string. If `null` or an empty string\, the function returns `null`.]
date_trunc    |[interval, date]                    |["date_period|time_duration", date]                                                                                               |[Interval; expressed using the timespan literal syntax., Date expression]
e             |null                                |null                                                                                                                              |null
ends_with     |[str, suffix]                       |["keyword|text", "keyword|text"]                                                                                                  |[String expression. If `null`\, the function returns `null`., String expression. If `null`\, the function returns `null`.]
floor         |number                              |"double|integer|long|unsigned_long"                                                                                               |Numeric expression. If `null`, the function returns `null`.
from_base64   |string                              |"keyword|text"                                                                                                                    |A base64 string.
greatest      |first                               |"boolean|double|integer|ip|keyword|long|text|version"                                                                             |First of the columns to evaluate.
least         |first                               |"boolean|double|integer|ip|keyword|long|text|version"                                                                             |First of the columns to evaluate.
left          |[string, length]                    |["keyword|text", integer]                                                                                                         |[The string from which to return a substring., The number of characters to return.]
length        |string                              |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
locate        |[string, substring, start]          |["keyword|text", "keyword|text", "integer"]                                                                                       |[An input string, A substring to locate in the input string, The start index]
log           |[base, number]                      |["integer|unsigned_long|long|double", "integer|unsigned_long|long|double"]                                                        |["Base of logarithm. If `null`\, the function returns `null`. If not provided\, this function returns the natural logarithm (base e) of a value.", "Numeric expression. If `null`\, the function returns `null`."]
log10         |number                              |"double|integer|long|unsigned_long"                                                                                               |Numeric expression. If `null`, the function returns `null`.
ltrim         |string                              |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
max           |number                              |"double|integer|long"                                                                                                             |[""]
median        |number                              |"double|integer|long"                                                                                                             |[""]
median_absolut|number                              |"double|integer|long"                                                                                                             |[""]
min           |number                              |"double|integer|long"                                                                                                             |[""]
mv_avg        |number                              |"double|integer|long|unsigned_long"                                                                                               |Multivalue expression.
mv_concat     |[string, delim]                     |["text|keyword", "text|keyword"]                                                                                                  |[Multivalue expression., Delimiter.]
mv_count      |field                               |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"      |Multivalue expression.
mv_dedupe     |field                               |"boolean|date|double|integer|ip|keyword|long|text|version"                                                                        |Multivalue expression.
mv_first      |field                               |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"      |Multivalue expression.
mv_last       |field                               |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"      |Multivalue expression.
mv_max        |field                               |"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version"                                                          |Multivalue expression.
mv_median     |number                              |"double|integer|long|unsigned_long"                                                                                               |Multivalue expression.
mv_min        |field                               |"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version"                                                          |Multivalue expression.
mv_slice      |[field, start, end]                 |["boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|version", integer, integer]|[Multivalue expression. If `null`\, the function returns `null`., Start position. If `null`\, the function returns `null`. The start argument can be negative. An index of -1 is used to specify the last value in the list., End position(included). Optional; if omitted\, the position at `start` is returned. The end argument can be negative. An index of -1 is used to specify the last value in the list.]
mv_sort       |[field, order]                      |["boolean|date|double|integer|ip|keyword|long|text|version", keyword]                                                             |[Multivalue expression. If `null`\, the function returns `null`., Sort order. The valid options are ASC and DESC\, the default is ASC.]
mv_sum        |number                              |"double|integer|long|unsigned_long"                                                                                               |Multivalue expression.
mv_zip        |[string1, string2, delim]           |["keyword|text", "keyword|text", "keyword|text"]                                                                                  |[Multivalue expression., Multivalue expression., Delimiter. Optional; if omitted\, `\,` is used as a default delimiter.]
now           |null                                |null                                                                                                                              |null
percentile    |[number, percentile]                |["double|integer|long", "double|integer|long"]                                                                                    |[, ]
pi            |null                                |null                                                                                                                              |null
pow           |[base, exponent]                    |["double|integer|long|unsigned_long", "double|integer|long|unsigned_long"]                                                        |["Numeric expression for the base. If `null`\, the function returns `null`.", "Numeric expression for the exponent. If `null`\, the function returns `null`."]
replace       |[string, regex, newString]          |["keyword|text", "keyword|text", "keyword|text"]                                                                                  |[String expression., Regular expression., Replacement string.]
right         |[string, length]                    |["keyword|text", integer]                                                                                                         |[The string from which to returns a substring., The number of characters to return.]
round         |[number, decimals]                  |["double|integer|long|unsigned_long", integer]                                                                                    |["The numeric value to round. If `null`\, the function returns `null`.", "The number of decimal places to round to. Defaults to 0. If `null`\, the function returns `null`."]
rtrim         |string                              |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
signum        |number                              |"double|integer|long|unsigned_long"                                                                                               |"Numeric expression. If `null`, the function returns `null`."
sin           |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
sinh          |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
split         |[string, delim]                     |["keyword|text", "keyword|text"]                                                                                                  |[String expression. If `null`\, the function returns `null`., Delimiter. Only single byte delimiters are currently supported.]
sqrt          |number                              |"double|integer|long|unsigned_long"                                                                                               |"Numeric expression. If `null`, the function returns `null`."
st_centroid_ag|field                               |"geo_point|cartesian_point"                                                                                                       |[""]
st_contains   |[geomA, geomB]                      |["geo_point|cartesian_point|geo_shape|cartesian_shape", "geo_point|cartesian_point|geo_shape|cartesian_shape"]                    |[Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`., Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`. The second parameter must also have the same coordinate system as the first. This means it is not possible to combine `geo_*` and `cartesian_*` parameters.]
st_disjoint   |[geomA, geomB]                      |["geo_point|cartesian_point|geo_shape|cartesian_shape", "geo_point|cartesian_point|geo_shape|cartesian_shape"]                    |[Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`., Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`. The second parameter must also have the same coordinate system as the first. This means it is not possible to combine `geo_*` and `cartesian_*` parameters.]
st_intersects |[geomA, geomB]                      |["geo_point|cartesian_point|geo_shape|cartesian_shape", "geo_point|cartesian_point|geo_shape|cartesian_shape"]                    |[Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`., Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`. The second parameter must also have the same coordinate system as the first. This means it is not possible to combine `geo_*` and `cartesian_*` parameters.]
st_within     |[geomA, geomB]                      |["geo_point|cartesian_point|geo_shape|cartesian_shape", "geo_point|cartesian_point|geo_shape|cartesian_shape"]                    |[Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`., Expression of type `geo_point`\, `cartesian_point`\, `geo_shape` or `cartesian_shape`. If `null`\, the function returns `null`. The second parameter must also have the same coordinate system as the first. This means it is not possible to combine `geo_*` and `cartesian_*` parameters.]
st_x          |point                               |"geo_point|cartesian_point"                                                                                                       |Expression of type `geo_point` or `cartesian_point`. If `null`, the function returns `null`.
st_y          |point                               |"geo_point|cartesian_point"                                                                                                       |Expression of type `geo_point` or `cartesian_point`. If `null`, the function returns `null`.
starts_with   |[str, prefix]                       |["keyword|text", "keyword|text"]                                                                                                  |[String expression. If `null`\, the function returns `null`., String expression. If `null`\, the function returns `null`.]
substring     |[string, start, length]             |["keyword|text", integer, integer]                                                                                                |[String expression. If `null`\, the function returns `null`., Start position., Length of the substring from the start position. Optional; if omitted\, all positions after `start` are returned.]
sum           |number                              |"double|integer|long"                                                                                                             |[""]
tan           |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
tanh          |angle                               |"double|integer|long|unsigned_long"                                                                                               |An angle, in radians. If `null`, the function returns `null`.
tau           |null                                |null                                                                                                                              |null
to_base64     |string                              |"keyword|text"                                                                                                                    |A string.
to_bool       |field                               |"boolean|keyword|text|double|long|unsigned_long|integer"                                                                          |Input value. The input can be a single- or multi-valued column or an expression.
to_boolean    |field                               |"boolean|keyword|text|double|long|unsigned_long|integer"                                                                          |Input value. The input can be a single- or multi-valued column or an expression.
to_cartesianpo|field                               |"cartesian_point|keyword|text"                                                                                                    |Input value. The input can be a single- or multi-valued column or an expression.
to_cartesiansh|field                               |"cartesian_point|cartesian_shape|keyword|text"                                                                                    |Input value. The input can be a single- or multi-valued column or an expression.
to_datetime   |field                               |"date|keyword|text|double|long|unsigned_long|integer"                                                                             |Input value. The input can be a single- or multi-valued column or an expression.
to_dbl        |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer|counter_double|counter_integer|counter_long"                         |Input value. The input can be a single- or multi-valued column or an expression.
to_degrees    |number                              |"double|integer|long|unsigned_long"                                                                                               |Input value. The input can be a single- or multi-valued column or an expression.
to_double     |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer|counter_double|counter_integer|counter_long"                         |Input value. The input can be a single- or multi-valued column or an expression.
to_dt         |field                               |"date|keyword|text|double|long|unsigned_long|integer"                                                                             |Input value. The input can be a single- or multi-valued column or an expression.
to_geopoint   |field                               |"geo_point|keyword|text"                                                                                                          |Input value. The input can be a single- or multi-valued column or an expression.
to_geoshape   |field                               |"geo_point|geo_shape|keyword|text"                                                                                                |Input value. The input can be a single- or multi-valued column or an expression.
to_int        |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer"                                                     |Input value. The input can be a single- or multi-valued column or an expression.
to_integer    |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer"                                                     |Input value. The input can be a single- or multi-valued column or an expression.
to_ip         |field                               |"ip|keyword|text"                                                                                                                 |Input value. The input can be a single- or multi-valued column or an expression.
to_long       |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer|counter_integer|counter_long"                                        |Input value. The input can be a single- or multi-valued column or an expression.
to_lower      |str                                 |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
to_radians    |number                              |"double|integer|long|unsigned_long"                                                                                               |Input value. The input can be a single- or multi-valued column or an expression.
to_str        |field                               |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"      |Input value. The input can be a single- or multi-valued column or an expression.
to_string     |field                               |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"      |Input value. The input can be a single- or multi-valued column or an expression.
to_ul         |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer"                                                                     |Input value. The input can be a single- or multi-valued column or an expression.
to_ulong      |field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer"                                                                     |Input value. The input can be a single- or multi-valued column or an expression.
to_unsigned_lo|field                               |"boolean|date|keyword|text|double|long|unsigned_long|integer"                                                                     |Input value. The input can be a single- or multi-valued column or an expression.
to_upper      |str                                 |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
to_ver        |field                               |"keyword|text|version"                                                                                                            |Input value. The input can be a single- or multi-valued column or an expression.
to_version    |field                               |"keyword|text|version"                                                                                                            |Input value. The input can be a single- or multi-valued column or an expression.
trim          |string                              |"keyword|text"                                                                                                                    |String expression. If `null`, the function returns `null`.
values        |field                               |"boolean|date|double|integer|ip|keyword|long|text|version"                                                                        |[""]
;

metaFunctionsDescription#[skip:-8.14.99]
  META functions
| EVAL name = SUBSTRING(name, 0, 14)
| KEEP name, description
;

 name:keyword | description:keyword
abs           |Returns the absolute value.
acos          |Returns the {wikipedia}/Inverse_trigonometric_functions[arccosine] of `n` as an angle, expressed in radians.
asin          |Returns the {wikipedia}/Inverse_trigonometric_functions[arcsine] of the input numeric expression as an angle, expressed in radians.
atan          |Returns the {wikipedia}/Inverse_trigonometric_functions[arctangent] of the input numeric expression as an angle, expressed in radians.
atan2         |The {wikipedia}/Atan2[angle] between the positive x-axis and the ray from the origin to the point (x , y) in the Cartesian plane, expressed in radians.
avg           |The average of a numeric field.
bin           |Creates groups of values - buckets - out of a datetime or numeric input. The size of the buckets can either be provided directly, or chosen based on a recommended count and values range.
bucket        |Creates groups of values - buckets - out of a datetime or numeric input. The size of the buckets can either be provided directly, or chosen based on a recommended count and values range.
case          |Accepts pairs of conditions and values. The function returns the value that belongs to the first condition that evaluates to `true`.  If the number of arguments is odd, the last argument is the default value which is returned when no condition matches. If the number of arguments is even, and no condition matches, the function returns `null`.
cbrt          |Returns the cube root of a number. The input can be any numeric value, the return value is always a double. Cube roots of infinities are null.
ceil          |Round a number up to the nearest integer.
cidr_match    |Returns true if the provided IP is contained in one of the provided CIDR blocks.
coalesce      |Returns the first of its arguments that is not null. If all arguments are null, it returns `null`.
concat        |Concatenates two or more strings.
cos           |Returns the {wikipedia}/Sine_and_cosine[cosine] of an angle.
cosh          |Returns the {wikipedia}/Hyperbolic_functions[hyperbolic cosine] of an angle.
count         |Returns the total number (count) of input values.
count_distinct|Returns the approximate number of distinct values.
date_diff     |Subtracts the `startTimestamp` from the `endTimestamp` and returns the difference in multiples of `unit`. If `startTimestamp` is later than the `endTimestamp`, negative values are returned.
date_extract  |Extracts parts of a date, like year, month, day, hour.
date_format   |Returns a string representation of a date, in the provided format.
date_parse    |Returns a date by parsing the second argument using the format specified in the first argument.
date_trunc    |Rounds down a date to the closest interval.
e             |Returns {wikipedia}/E_(mathematical_constant)[Euler's number].
ends_with     |Returns a boolean that indicates whether a keyword string ends with another string.
floor         |Round a number down to the nearest integer.
from_base64   |Decode a base64 string.
greatest      |Returns the maximum value from multiple columns. This is similar to <<esql-mv_max>> except it is intended to run on multiple columns at once.
least         |Returns the minimum value from multiple columns. This is similar to <<esql-mv_min>> except it is intended to run on multiple columns at once.
left          |Returns the substring that extracts 'length' chars from 'string' starting from the left.
length        |Returns the character length of a string.
locate        |Returns an integer that indicates the position of a keyword substring within another string
log           |Returns the logarithm of a value to a base. The input can be any numeric value, the return value is always a double.  Logs of zero, negative numbers, and base of one return `null` as well as a warning.
log10         |Returns the logarithm of a value to base 10. The input can be any numeric value, the return value is always a double.  Logs of 0 and negative numbers return `null` as well as a warning.
ltrim         |Removes leading whitespaces from a string.
max           |The maximum value of a numeric field.
median        |The value that is greater than half of all values and less than half of all values.
median_absolut|The median absolute deviation, a measure of variability.
min           |The minimum value of a numeric field.
mv_avg        |Converts a multivalued field into a single valued field containing the average of all of the values.
mv_concat     |Converts a multivalued string expression into a single valued column containing the concatenation of all values separated by a delimiter.
mv_count      |Converts a multivalued expression into a single valued column containing a count of the number of values.
mv_dedupe     |Remove duplicate values from a multivalued field.
mv_first      |Converts a multivalued expression into a single valued column containing the first value. This is most useful when reading from a function that emits multivalued columns in a known order like <<esql-split>>.  The order that <<esql-multivalued-fields, multivalued fields>> are read from underlying storage is not guaranteed. It is *frequently* ascending, but don't rely on that. If you need the minimum value use <<esql-mv_min>> instead of `MV_FIRST`. `MV_MIN` has optimizations for sorted values so there isn't a performance benefit to `MV_FIRST`.
mv_last       |Converts a multivalue expression into a single valued column containing the last value. This is most useful when reading from a function that emits multivalued columns in a known order like <<esql-split>>.  The order that <<esql-multivalued-fields, multivalued fields>> are read from underlying storage is not guaranteed. It is *frequently* ascending, but don't rely on that. If you need the maximum value use <<esql-mv_max>> instead of `MV_LAST`. `MV_MAX` has optimizations for sorted values so there isn't a performance benefit to `MV_LAST`.
mv_max        |Converts a multivalued expression into a single valued column containing the maximum value.
mv_median     |Converts a multivalued field into a single valued field containing the median value.
mv_min        |Converts a multivalued expression into a single valued column containing the minimum value.
mv_slice      |Returns a subset of the multivalued field using the start and end index values.
mv_sort       |Sorts a multivalued field in lexicographical order.
mv_sum        |Converts a multivalued field into a single valued field containing the sum of all of the values.
mv_zip        |Combines the values from two multivalued fields with a delimiter that joins them together.
now           |Returns current date and time.
percentile    |The value at which a certain percentage of observed values occur.
pi            |Returns {wikipedia}/Pi[Pi], the ratio of a circle's circumference to its diameter.
pow           |Returns the value of `base` raised to the power of `exponent`.
replace       |The function substitutes in the string `str` any match of the regular expression `regex` with the replacement string `newStr`.
right         |Return the substring that extracts 'length' chars from 'str' starting from the right.
round         |Rounds a number to the specified number of decimal places. Defaults to 0, which returns the nearest integer. If the precision is a negative number, rounds to the number of digits left of the decimal point.
rtrim         |Removes trailing whitespaces from a string.
signum        |Returns the sign of the given number. It returns `-1` for negative numbers, `0` for `0` and `1` for positive numbers.
sin           |Returns ths {wikipedia}/Sine_and_cosine[Sine] trigonometric function of an angle.
sinh          |Returns the {wikipedia}/Hyperbolic_functions[hyperbolic sine] of an angle.
split         |Split a single valued string into multiple strings.
sqrt          |Returns the square root of a number. The input can be any numeric value, the return value is always a double. Square roots of negative numbers and infinities are null.
st_centroid_ag|The centroid of a spatial field.
st_contains   |Returns whether the first geometry contains the second geometry. This is the inverse of the <<esql-st_within,ST_WITHIN>> function.
st_disjoint   |Returns whether the two geometries or geometry columns are disjoint. This is the inverse of the <<esql-st_intersects,ST_INTERSECTS>> function. In mathematical terms: ST_Disjoint(A, B) ⇔ A ⋂ B = ∅
st_intersects |Returns true if two geometries intersect. They intersect if they have any point in common, including their interior points (points along lines or within polygons). This is the inverse of the <<esql-st_disjoint,ST_DISJOINT>> function. In mathematical terms: ST_Intersects(A, B) ⇔ A ⋂ B ≠ ∅
st_within     |Returns whether the first geometry is within the second geometry. This is the inverse of the <<esql-st_contains,ST_CONTAINS>> function.
st_x          |Extracts the `x` coordinate from the supplied point. If the points is of type `geo_point` this is equivalent to extracting the `longitude` value.
st_y          |Extracts the `y` coordinate from the supplied point. If the points is of type `geo_point` this is equivalent to extracting the `latitude` value.
starts_with   |Returns a boolean that indicates whether a keyword string starts with another string.
substring     |Returns a substring of a string, specified by a start position and an optional length
sum           |The sum of a numeric field.
tan           |Returns the {wikipedia}/Sine_and_cosine[Tangent] trigonometric function of an angle.
tanh          |Returns the {wikipedia}/Hyperbolic_functions[Tangent] hyperbolic function of an angle.
tau           |Returns the https://tauday.com/tau-manifesto[ratio] of a circle's circumference to its radius.
to_base64     |Encode a string to a base64 string.
to_bool       |Converts an input value to a boolean value. A string value of *true* will be case-insensitive converted to the Boolean *true*. For anything else, including the empty string, the function will return *false*. The numerical value of *0* will be converted to *false*, anything else will be converted to *true*.
to_boolean    |Converts an input value to a boolean value. A string value of *true* will be case-insensitive converted to the Boolean *true*. For anything else, including the empty string, the function will return *false*. The numerical value of *0* will be converted to *false*, anything else will be converted to *true*.
to_cartesianpo|Converts an input value to a `cartesian_point` value. A string will only be successfully converted if it respects the {wikipedia}/Well-known_text_representation_of_geometry[WKT Point] format.
to_cartesiansh|Converts an input value to a `cartesian_shape` value. A string will only be successfully converted if it respects the {wikipedia}/Well-known_text_representation_of_geometry[WKT] format.
to_datetime   |Converts an input value to a date value. A string will only be successfully converted if it's respecting the format `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`. To convert dates in other formats, use <<esql-date_parse>>.
to_dbl        |Converts an input value to a double value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to double. Boolean *true* will be converted to double *1.0*, *false* to *0.0*.
to_degrees    |Converts a number in {wikipedia}/Radian[radians] to {wikipedia}/Degree_(angle)[degrees].
to_double     |Converts an input value to a double value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to double. Boolean *true* will be converted to double *1.0*, *false* to *0.0*.
to_dt         |Converts an input value to a date value. A string will only be successfully converted if it's respecting the format `yyyy-MM-dd'T'HH:mm:ss.SSS'Z'`. To convert dates in other formats, use <<esql-date_parse>>.
to_geopoint   |Converts an input value to a `geo_point` value. A string will only be successfully converted if it respects the {wikipedia}/Well-known_text_representation_of_geometry[WKT Point] format.
to_geoshape   |Converts an input value to a `geo_shape` value. A string will only be successfully converted if it respects the {wikipedia}/Well-known_text_representation_of_geometry[WKT] format.
to_int        |Converts an input value to an integer value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to integer. Boolean *true* will be converted to integer *1*, *false* to *0*.
to_integer    |Converts an input value to an integer value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to integer. Boolean *true* will be converted to integer *1*, *false* to *0*.
to_ip         |Converts an input string to an IP value.
to_long       |Converts an input value to a long value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to long. Boolean *true* will be converted to long *1*, *false* to *0*.
to_lower      |Returns a new string representing the input string converted to lower case.
to_radians    |Converts a number in {wikipedia}/Degree_(angle)[degrees] to {wikipedia}/Radian[radians].
to_str        |Converts an input value into a string.
to_string     |Converts an input value into a string.
to_ul         |Converts an input value to an unsigned long value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to unsigned long. Boolean *true* will be converted to unsigned long *1*, *false* to *0*.
to_ulong      |Converts an input value to an unsigned long value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to unsigned long. Boolean *true* will be converted to unsigned long *1*, *false* to *0*.
to_unsigned_lo|Converts an input value to an unsigned long value. If the input parameter is of a date type, its value will be interpreted as milliseconds since the {wikipedia}/Unix_time[Unix epoch], converted to unsigned long. Boolean *true* will be converted to unsigned long *1*, *false* to *0*.
to_upper      |Returns a new string representing the input string converted to upper case.
to_ver        |Converts an input string to a version value.
to_version    |Converts an input string to a version value.
trim          |Removes leading and trailing whitespaces from a string.
values        |Collect values for a field.
;

metaFunctionsRemaining#[skip:-8.14.99]
  META functions
| EVAL name = SUBSTRING(name, 0, 14)
| KEEP name, *
| DROP synopsis, description, argNames, argTypes, argDescriptions
;

 name:keyword |                                                    returnType:keyword                                                      |    optionalArgs:boolean    |variadic:boolean|isAggregation:boolean
abs           |"double|integer|long|unsigned_long"                                                                                         |false                       |false           |false
acos          |double                                                                                                                      |false                       |false           |false
asin          |double                                                                                                                      |false                       |false           |false
atan          |double                                                                                                                      |false                       |false           |false
atan2         |double                                                                                                                      |[false, false]              |false           |false
avg           |double                                                                                                                      |false                       |false           |true
bin           |"double|date"                                                                                                               |[false, false, true, true]  |false           |false
bucket        |"double|date"                                                                                                               |[false, false, true, true]  |false           |false
case          |"boolean|cartesian_point|date|double|geo_point|integer|ip|keyword|long|text|unsigned_long|version"                          |[false, false]              |true            |false
cbrt          |double                                                                                                                      |false                       |false           |false
ceil          |"double|integer|long|unsigned_long"                                                                                         |false                       |false           |false
cidr_match    |boolean                                                                                                                     |[false, false]              |true            |false
coalesce      |"boolean|cartesian_point|cartesian_shape|date|geo_point|geo_shape|integer|ip|keyword|long|text"                             |false                       |true            |false
concat        |keyword                                                                                                                     |[false, false]              |true            |false
cos           |double                                                                                                                      |false                       |false           |false
cosh          |double                                                                                                                      |false                       |false           |false
count         |long                                                                                                                        |true                        |false           |true
count_distinct|long                                                                                                                        |[false, true]               |false           |true
date_diff     |integer                                                                                                                     |[false, false, false]       |false           |false
date_extract  |long                                                                                                                        |[false, false]              |false           |false
date_format   |keyword                                                                                                                     |[true, false]               |false           |false
date_parse    |date                                                                                                                        |[true, false]               |false           |false
date_trunc    |date                                                                                                                        |[false, false]              |false           |false
e             |double                                                                                                                      |null                        |false           |false
ends_with     |boolean                                                                                                                     |[false, false]              |false           |false
floor         |"double|integer|long|unsigned_long"                                                                                         |false                       |false           |false
from_base64   |keyword                                                                                                                     |false                       |false           |false
greatest      |"boolean|double|integer|ip|keyword|long|text|version"                                                                       |false                       |true            |false
least         |"boolean|double|integer|ip|keyword|long|text|version"                                                                       |false                       |true            |false
left          |keyword                                                                                                                     |[false, false]              |false           |false
length        |integer                                                                                                                     |false                       |false           |false
locate        |integer                                                                                                                     |[false, false, true]        |false           |false
log           |double                                                                                                                      |[true, false]               |false           |false
log10         |double                                                                                                                      |false                       |false           |false
ltrim         |"keyword|text"                                                                                                              |false                       |false           |false
max           |"double|integer|long"                                                                                                       |false                       |false           |true
median        |"double|integer|long"                                                                                                       |false                       |false           |true
median_absolut|"double|integer|long"                                                                                                       |false                       |false           |true
min           |"double|integer|long"                                                                                                       |false                       |false           |true
mv_avg        |double                                                                                                                      |false                       |false           |false
mv_concat     |keyword                                                                                                                     |[false, false]              |false           |false
mv_count      |integer                                                                                                                     |false                       |false           |false
mv_dedupe     |"boolean|date|double|integer|ip|keyword|long|text|version"                                                                  |false                       |false           |false
mv_first      |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"|false                       |false           |false
mv_last       |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|unsigned_long|version"|false                       |false           |false
mv_max        |"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version"                                                    |false                       |false           |false
mv_median     |"double|integer|long|unsigned_long"                                                                                         |false                       |false           |false
mv_min        |"boolean|date|double|integer|ip|keyword|long|text|unsigned_long|version"                                                    |false                       |false           |false
mv_slice      |"boolean|cartesian_point|cartesian_shape|date|double|geo_point|geo_shape|integer|ip|keyword|long|text|version"              |[false, false, true]        |false           |false
mv_sort       |"boolean|date|double|integer|ip|keyword|long|text|version"                                                                  |[false, true]               |false           |false
mv_sum        |"double|integer|long|unsigned_long"                                                                                         |false                       |false           |false
mv_zip        |keyword                                                                                                                     |[false, false, true]        |false           |false
now           |date                                                                                                                        |null                        |false           |false
percentile    |"double|integer|long"                                                                                                       |[false, false]              |false           |true
pi            |double                                                                                                                      |null                        |false           |false
pow           |double                                                                                                                      |[false, false]              |false           |false
replace       |keyword                                                                                                                     |[false, false, false]       |false           |false
right         |keyword                                                                                                                     |[false, false]              |false           |false
round         |"double|integer|long|unsigned_long"                                                                                         |[false, true]               |false           |false
rtrim         |"keyword|text"                                                                                                              |false                       |false           |false
signum        |double                                                                                                                      |false                       |false           |false
sin           |double                                                                                                                      |false                       |false           |false
sinh          |double                                                                                                                      |false                       |false           |false
split         |keyword                                                                                                                     |[false, false]              |false           |false
sqrt          |double                                                                                                                      |false                       |false           |false
st_centroid_ag|"geo_point|cartesian_point"                                                                                                 |false                       |false           |true
st_contains   |boolean                                                                                                                     |[false, false]              |false           |false
st_disjoint   |boolean                                                                                                                     |[false, false]              |false           |false
st_intersects |boolean                                                                                                                     |[false, false]              |false           |false
st_within     |boolean                                                                                                                     |[false, false]              |false           |false
st_x          |double                                                                                                                      |false                       |false           |false
st_y          |double                                                                                                                      |false                       |false           |false
starts_with   |boolean                                                                                                                     |[false, false]              |false           |false
substring     |keyword                                                                                                                     |[false, false, true]        |false           |false
sum           |long                                                                                                                        |false                       |false           |true
tan           |double                                                                                                                      |false                       |false           |false
tanh          |double                                                                                                                      |false                       |false           |false
tau           |double                                                                                                                      |null                        |false           |false
to_base64     |keyword                                                                                                                     |false                       |false           |false
to_bool       |boolean                                                                                                                     |false                       |false           |false
to_boolean    |boolean                                                                                                                     |false                       |false           |false
to_cartesianpo|cartesian_point                                                                                                             |false                       |false           |false
to_cartesiansh|cartesian_shape                                                                                                             |false                       |false           |false
to_datetime   |date                                                                                                                        |false                       |false           |false
to_dbl        |double                                                                                                                      |false                       |false           |false
to_degrees    |double                                                                                                                      |false                       |false           |false
to_double     |double                                                                                                                      |false                       |false           |false
to_dt         |date                                                                                                                        |false                       |false           |false
to_geopoint   |geo_point                                                                                                                   |false                       |false           |false
to_geoshape   |geo_shape                                                                                                                   |false                       |false           |false
to_int        |integer                                                                                                                     |false                       |false           |false
to_integer    |integer                                                                                                                     |false                       |false           |false
to_ip         |ip                                                                                                                          |false                       |false           |false
to_long       |long                                                                                                                        |false                       |false           |false
to_lower      |"keyword|text"                                                                                                              |false                       |false           |false
to_radians    |double                                                                                                                      |false                       |false           |false
to_str        |keyword                                                                                                                     |false                       |false           |false
to_string     |keyword                                                                                                                     |false                       |false           |false
to_ul         |unsigned_long                                                                                                               |false                       |false           |false
to_ulong      |unsigned_long                                                                                                               |false                       |false           |false
to_unsigned_lo|unsigned_long                                                                                                               |false                       |false           |false
to_upper      |"keyword|text"                                                                                                              |false                       |false           |false
to_ver        |version                                                                                                                     |false                       |false           |false
to_version    |version                                                                                                                     |false                       |false           |false
trim          |"keyword|text"                                                                                                              |false                       |false           |false
values        |"boolean|date|double|integer|ip|keyword|long|text|version"                                                                  |false                       |false           |true
;

metaFunctionsFiltered#[skip:-8.14.99]
META FUNCTIONS
| WHERE STARTS_WITH(name, "sin")
;

name:keyword |                      synopsis:keyword                  |argNames:keyword  |        argTypes:keyword            |             argDescriptions:keyword                             | returnType:keyword |                                             description:keyword                     | optionalArgs:boolean | variadic:boolean | isAggregation:boolean
sin          |"double sin(angle:double|integer|long|unsigned_long)"   |angle             |"double|integer|long|unsigned_long" | "An angle, in radians. If `null`, the function returns `null`." | double             | "Returns ths {wikipedia}/Sine_and_cosine[Sine] trigonometric function of an angle." | false                | false            | false
sinh         |"double sinh(angle:double|integer|long|unsigned_long)"  |angle             |"double|integer|long|unsigned_long" | "An angle, in radians. If `null`, the function returns `null`." | double             | "Returns the {wikipedia}/Hyperbolic_functions[hyperbolic sine] of an angle."        | false                | false            | false
;


// see https://github.com/elastic/elasticsearch/issues/102120
countFunctions#[skip:-8.14.99, reason:BIN added]
meta functions |  stats  a = count(*), b = count(*), c = count(*) |  mv_expand c;

a:long | b:long | c:long
106    | 106    | 106
;

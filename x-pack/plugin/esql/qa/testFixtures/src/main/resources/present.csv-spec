// PRESENT-specific tests

PRESENT
required_capability: fn_present

FROM employees
| STATS is_present = PRESENT(languages)
;

is_present:integer
1
;

PRESENT with filter
required_capability: fn_present

FROM employees
| WHERE emp_no IN (10019, 10020)
| STATS is_present = PRESENT(languages)
;

is_present:integer
1
;

Not PRESENT with filter
required_capability: fn_present

FROM employees
| WHERE emp_no == 10020
| STATS is_present = PRESENT(languages)
;

is_present:integer
0
;

PRESENT with a constant
required_capability: fn_present

FROM employees 
| STATS is_present = PRESENT(123)
;

is_present:integer
1
;

Not PRESENT with null
required_capability: fn_present

FROM employees 
| STATS is_present = PRESENT(null)
;

is_present:integer
0
;

Not PRESENT with null evaluated field 
required_capability: fn_present

FROM employees
| EVAL null_field = null
| STATS is_present = PRESENT(null_field)
;

is_present:integer
0
;

PRESENT with an expression
required_capability: fn_present

FROM employees
| STATS is_present = PRESENT(salary + 10)
;

is_present:integer
1
;

PRESENT with grouping
required_capability: fn_present

FROM employees
| STATS is_present = PRESENT(salary) BY languages
| SORT languages
;

is_present:integer | languages:integer
1                  | 1
1                  | 2
1                  | 3
1                  | 4
1                  | 5
1                  | null
;

Some fields are not PRESENT with grouping
required_capability: fn_present

FROM employees
| WHERE gender IS NULL
| STATS is_present = PRESENT(gender) BY languages
;

is_present:integer | languages:integer
0                  | 4
0                  | 5
0                  | 1
0                  | 2
;

PRESENT with per-agg filter
required_capability: fn_present

FROM employees
| STATS p_true = PRESENT(salary) WHERE gender == "M",
        p_false = PRESENT(salary) WHERE gender == "X"
;

p_true:integer | p_false:integer
1              | 0
;

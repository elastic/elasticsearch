# Tests for hamming similarity function

similarityWithVectorField
required_capability: hamming_vector_similarity_function
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown

// tag::vector-hamming[]
from colors
| eval similarity = v_hamming(rgb_byte_vector, [0, 127, 127]) 
| sort similarity desc, color asc 
// end::vector-hamming[]
| limit 10
| keep color, similarity
;
 
// tag::vector-hamming-result[]
color:text | similarity:double
red        | 23.0
indigo     | 19.0
orange     | 19.0
black      | 17.0
gold       | 17.0
bisque     | 16.0
chartreuse | 16.0
green      | 16.0
maroon     | 16.0
navy       | 16.0
// end::vector-hamming-result[] 
;

similarityAsPartOfExpression
required_capability: hamming_vector_similarity_function
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown

from colors
| eval score = round((1 + v_hamming(rgb_byte_vector, [0, 127, 127]) / 2), 3) 
| sort score desc, color asc 
| limit 10
| keep color, score
;

color:text | score:double
red        | 12.5
indigo     | 10.5
orange     | 10.5
black      | 9.5
gold       | 9.5
bisque     | 9.0
chartreuse | 9.0
green      | 9.0
maroon     | 9.0
navy       | 9.0
;

similarityWithLiteralVectors
required_capability: hamming_vector_similarity_function
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown
 
row a = 1
| eval similarity = round(v_hamming([1, 2, 3], [0, 1, 2]), 3) 
| keep similarity
;

similarity:double
4.0
;

similarityWithStats
required_capability: hamming_vector_similarity_function
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown

from colors
| eval similarity = round(v_hamming(rgb_byte_vector, [0, 127, 127]), 3) 
| stats avg = round(avg(similarity), 3), min = min(similarity), max = max(similarity)
;

avg:double | min:double | max:double
12.932     | 3.0        | 23.0
;

similarityWithNull
required_capability: hamming_vector_similarity_function
required_capability: vector_similarity_functions_support_null
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown

from colors
| eval similarity = v_hamming(rgb_byte_vector, null) 
| stats total_null = count(*) where similarity is null
;

total_null:long
59
;

similarityWithRow
required_capability: hamming_vector_similarity_function
required_capability: to_dense_vector_function
required_capability: dense_vector_field_type_released
required_capability: vector_similarity_functions_pushdown
 
row vector = to_dense_vector([1, 2, 3])
| eval similarity = round(v_hamming(vector, [0, 1, 2]), 3) 
;

vector: dense_vector | similarity:double
[1.0, 2.0, 3.0]      | 4.0
;

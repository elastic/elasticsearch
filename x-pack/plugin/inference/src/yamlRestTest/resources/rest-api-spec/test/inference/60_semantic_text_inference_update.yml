setup:
  - requires:
      cluster_features: "gte_v8.15.0"
      reason: semantic_text introduced in 8.15.0

  - do:
      inference.put:
        task_type: sparse_embedding
        inference_id: sparse-inference-id
        body: >
          {
            "service": "test_service",
            "service_settings": {
              "model": "my_model",
              "api_key": "abc64"
            },
            "task_settings": {
            }
          }

  - do:
      inference.put:
        task_type: text_embedding
        inference_id: dense-inference-id
        body: >
          {
            "service": "text_embedding_test_service",
            "service_settings": {
              "model": "my_model",
              "dimensions": 10,
              "similarity": "cosine",
              "api_key": "abc64"
            },
            "task_settings": {
            }
          }

  - do:
      indices.create:
        index: test-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              dense_field:
                type: semantic_text
                inference_id: dense-inference-id
              non_inference_field:
                type: text

---
"Updating non semantic_text fields does not recalculate embeddings":
  - do:
      index:
        index: test-index
        id: doc_1
        body:
          sparse_field: "inference test"
          dense_field: "another inference test"
          non_inference_field: "non inference test"

  - do:
      get:
        index: test-index
        id: doc_1

  - set: { _source.sparse_field.inference.chunks.0.embeddings: sparse_field_embedding }
  - set: { _source.dense_field.inference.chunks.0.embeddings: dense_field_embedding }

  - do:
      update:
        index: test-index
        id: doc_1
        body:
          doc:
            non_inference_field: "another non inference test"

  - do:
      get:
        index: test-index
        id: doc_1

  - match:  { _source.sparse_field.text: "inference test" }
  - match:  { _source.sparse_field.inference.chunks.0.text: "inference test" }
  - match:  { _source.sparse_field.inference.chunks.0.embeddings: $sparse_field_embedding }
  - match:  { _source.dense_field.text: "another inference test" }
  - match:  { _source.dense_field.inference.chunks.0.text: "another inference test" }
  - match:  { _source.dense_field.inference.chunks.0.embeddings: $dense_field_embedding }
  - match:  { _source.non_inference_field: "another non inference test" }

---
"Updating semantic_text fields recalculates embeddings":
  - do:
      index:
        index: test-index
        id: doc_1
        body:
          sparse_field: "inference test"
          dense_field: "another inference test"
          non_inference_field: "non inference test"

  - do:
      get:
        index: test-index
        id: doc_1

  - match:  { _source.sparse_field.text: "inference test" }
  - match:  { _source.sparse_field.inference.chunks.0.text: "inference test" }
  - match:  { _source.dense_field.text: "another inference test" }
  - match:  { _source.dense_field.inference.chunks.0.text: "another inference test" }
  - match:  { _source.non_inference_field: "non inference test" }

  - do:
      bulk:
        index: test-index
        body:
          - '{"update": {"_id": "doc_1"}}'
          - '{"doc":{"sparse_field": "I am a test", "dense_field": "I am a teapot"}}'

  - do:
      get:
        index: test-index
        id: doc_1

  - match:  { _source.sparse_field.text: "I am a test" }
  - match:  { _source.sparse_field.inference.chunks.0.text: "I am a test" }
  - match:  { _source.dense_field.text: "I am a teapot" }
  - match:  { _source.dense_field.inference.chunks.0.text: "I am a teapot" }
  - match:  { _source.non_inference_field: "non inference test" }

  - do:
      update:
        index: test-index
        id: doc_1
        body:
          doc:
            sparse_field: "updated inference test"
            dense_field: "another updated inference test"

  - do:
      get:
        index: test-index
        id: doc_1

  - match:  { _source.sparse_field.text: "updated inference test" }
  - match:  { _source.sparse_field.inference.chunks.0.text: "updated inference test" }
  - match:  { _source.dense_field.text: "another updated inference test" }
  - match:  { _source.dense_field.inference.chunks.0.text: "another updated inference test" }
  - match:  { _source.non_inference_field: "non inference test" }

  - do:
      bulk:
        index: test-index
        body:
          - '{"update": {"_id": "doc_1"}}'
          - '{"doc":{"sparse_field": "bulk inference test", "dense_field": "bulk updated inference test"}}'

  - do:
      get:
        index: test-index
        id: doc_1

  - match:  { _source.sparse_field.text: "bulk inference test" }
  - match:  { _source.sparse_field.inference.chunks.0.text: "bulk inference test" }
  - match:  { _source.dense_field.text: "bulk updated inference test" }
  - match:  { _source.dense_field.inference.chunks.0.text: "bulk updated inference test" }
  - match:  { _source.non_inference_field: "non inference test" }

---
"Update logic handles source fields in object fields":
  - do:
      indices.create:
        index: test-copy-to-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              dense_field:
                type: semantic_text
                inference_id: dense-inference-id
              object_source:
                properties:
                  sparse_field:
                    type: text
                    copy_to: sparse_field
                  dense_field:
                    type: text
                    copy_to: dense_field

  - do:
      index:
        index: test-copy-to-index
        id: doc_1
        body:
          sparse_field: "sparse data 1"
          dense_field: "dense data 1"

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: "sparse data 1" }
  - length: { _source.sparse_field.inference.chunks: 1 }
  - match: { _source.sparse_field.inference.chunks.0.text: "sparse data 1" }
  - match: { _source.dense_field.text: "dense data 1" }
  - length: { _source.dense_field.inference.chunks: 1 }
  - match: { _source.dense_field.inference.chunks.0.text: "dense data 1" }

  - do:
      bulk:
        index: test-copy-to-index
        body:
          - '{"update": {"_id": "doc_1"}}'
          - >
           {
             "doc": {
               "sparse_field": "sparse data 1",
               "object_source.sparse_field": "sparse data 2",
               "dense_field": "dense data 1",
               "object_source.dense_field": "dense data 2"
             }
           }

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: "sparse data 1" }
  - length: { _source.sparse_field.inference.chunks: 2 }
  - match: { _source.sparse_field.inference.chunks.0.text: "sparse data 2" }
  - match: { _source.sparse_field.inference.chunks.1.text: "sparse data 1" }
  - match: { _source.dense_field.text: "dense data 1" }
  - length: { _source.dense_field.inference.chunks: 2 }
  - match: { _source.dense_field.inference.chunks.0.text: "dense data 1" }
  - match: { _source.dense_field.inference.chunks.1.text: "dense data 2" }

  - do:
      update:
        index: test-copy-to-index
        id: doc_1
        body:
          doc:
            {
              "sparse_field": "sparse data 1",
              "object_source.sparse_field": "sparse data 3",
              "dense_field": "dense data 1",
              "object_source.dense_field": "dense data 3"
            }

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: "sparse data 1" }
  - length: { _source.sparse_field.inference.chunks: 2 }
  - match: { _source.sparse_field.inference.chunks.0.text: "sparse data 3" }
  - match: { _source.sparse_field.inference.chunks.1.text: "sparse data 1" }
  - match: { _source.dense_field.text: "dense data 1" }
  - length: { _source.dense_field.inference.chunks: 2 }
  - match: { _source.dense_field.inference.chunks.0.text: "dense data 1" }
  - match: { _source.dense_field.inference.chunks.1.text: "dense data 3" }

---
"Updates fail when the updated value is invalid":
  - do:
      index:
        index: test-index
        id: doc_1
        body:
          sparse_field: "inference test"
          dense_field: "another inference test"
          non_inference_field: "non inference test"

  - do:
      get:
        index: test-index
        id: doc_1

  - match: { _source.sparse_field.text: "inference test" }
  - match: { _source.sparse_field.inference.chunks.0.text: "inference test" }
  - match: { _source.dense_field.text: "another inference test" }
  - match: { _source.dense_field.inference.chunks.0.text: "another inference test" }
  - match: { _source.non_inference_field: "non inference test" }

  - do:
      bulk:
        index: test-index
        body:
          - '{"update": {"_id": "doc_1"}}'
          - '{"doc":{"sparse_field": [{"key": "value"}], "dense_field": [{"key": "value"}]}}'

  - match: { errors: true }
  - match: { items.0.update.status: 400 }
  - match: { items.0.update.error.reason: "/Invalid\\ format\\ for\\ field\\ \\[(dense|sparse)_field\\].+/" }

  - do:
      catch: bad_request
      update:
        index: test-index
        id: doc_1
        body:
          doc: { "sparse_field": [{"key": "value"}], "dense_field": [{"key": "value"}] }

  - match: { error.type: "status_exception" }
  - match: { error.reason: "/Invalid\\ format\\ for\\ field\\ \\[(dense|sparse)_field\\].+/" }

---
"Partial updates work when using the update API":
  - do:
      indices.create:
        index: test-copy-to-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              sparse_source_field:
                type: text
                copy_to: sparse_field
              dense_field:
                type: semantic_text
                inference_id: dense-inference-id
              dense_source_field:
                type: text
                copy_to: dense_field

  - do:
      index:
        index: test-copy-to-index
        id: doc_1
        body:
          sparse_field: "sparse data 1"
          sparse_source_field: "sparse data 2"
          dense_field: "dense data 1"
          dense_source_field: "dense data 2"

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - length: { _source.sparse_field.inference.chunks: 2 }
  - match: { _source.sparse_field.inference.chunks.1.text: "sparse data 2" }
  - exists: _source.sparse_field.inference.chunks.1.embeddings
  - length: { _source.dense_field.inference.chunks: 2 }
  - match: { _source.dense_field.inference.chunks.1.text: "dense data 2" }
  - exists: _source.dense_field.inference.chunks.1.embeddings

  - do:
      update:
        index: test-copy-to-index
        id: doc_1
        body:
          doc: { "sparse_source_field": "sparse data 3", "dense_source_field": "dense data 3" }

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: "sparse data 1" }
  - length: { _source.sparse_field.inference.chunks: 2 }
  - match: { _source.sparse_field.inference.chunks.1.text: "sparse data 3" }
  - exists: _source.sparse_field.inference.chunks.1.embeddings
  - match: { _source.dense_field.text: "dense data 1" }
  - length: { _source.dense_field.inference.chunks: 2 }
  - match: { _source.dense_field.inference.chunks.1.text: "dense data 3" }
  - exists: _source.dense_field.inference.chunks.1.embeddings

---
"Partial updates work when using the update API and the semantic_text field's original value is null":
  - do:
      indices.create:
        index: test-copy-to-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              sparse_source_field:
                type: text
                copy_to: sparse_field
              dense_field:
                type: semantic_text
                inference_id: dense-inference-id
              dense_source_field:
                type: text
                copy_to: dense_field

  # Don't set sparse_field or dense_field so their original value is null
  - do:
      index:
        index: test-copy-to-index
        id: doc_1
        body:
          sparse_source_field: "sparse data 2"
          dense_source_field: "dense data 2"

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: null }
  - length: { _source.sparse_field.inference.chunks: 1 }
  - match: { _source.sparse_field.inference.chunks.0.text: "sparse data 2" }
  - exists: _source.sparse_field.inference.chunks.0.embeddings
  - match: { _source.dense_field.text: null }
  - length: { _source.dense_field.inference.chunks: 1 }
  - match: { _source.dense_field.inference.chunks.0.text: "dense data 2" }
  - exists: _source.dense_field.inference.chunks.0.embeddings

  - do:
      update:
        index: test-copy-to-index
        id: doc_1
        body:
          doc: { "sparse_source_field": "sparse data 3", "dense_source_field": "dense data 3" }

  - do:
      get:
        index: test-copy-to-index
        id: doc_1

  - match: { _source.sparse_field.text: null }
  - length: { _source.sparse_field.inference.chunks: 1 }
  - match: { _source.sparse_field.inference.chunks.0.text: "sparse data 3" }
  - exists: _source.sparse_field.inference.chunks.0.embeddings
  - match: { _source.dense_field.text: null }
  - length: { _source.dense_field.inference.chunks: 1 }
  - match: { _source.dense_field.inference.chunks.0.text: "dense data 3" }
  - exists: _source.dense_field.inference.chunks.0.embeddings

---
"Updates with script are not allowed":
  - do:
      bulk:
        index: test-index
        body:
          - '{"index": {"_id": "doc_1"}}'
          - '{"doc":{"sparse_field": "I am a test", "dense_field": "I am a teapot"}}'

  - do:
      bulk:
        index: test-index
        body:
          - '{"update": {"_id": "doc_1"}}'
          - '{"script": "ctx._source.new_field = \"hello\"", "scripted_upsert": true}'

  - match: { errors: true }
  - match: { items.0.update.status: 400 }
  - match: { items.0.update.error.reason: "Cannot apply update with a script on indices that contain [semantic_text] field(s)" }

  - do:
      catch: bad_request
      update:
        index: test-index
        id: doc_1
        body:
          script:
            source: "ctx._source.new_field = \"hello\""
            lang: "painless"

  - match: { error.type: "status_exception" }
  - match: { error.reason: "Cannot apply update with a script on indices that contain inference field(s)" }

---
"semantic_text copy_to needs values for every source field for bulk updates":
  - do:
      indices.create:
        index: test-copy-to-index
        body:
          mappings:
            properties:
              sparse_field:
                type: semantic_text
                inference_id: sparse-inference-id
              source_field:
                type: text
                copy_to: sparse_field
              another_source_field:
                type: text
                copy_to: sparse_field

  # Not every source field needed on creation
  - do:
      index:
        index: test-copy-to-index
        id: doc_1
        body:
          source_field: "a single source field provided"
          sparse_field: "inference test"

  # Every source field needed on bulk updates
  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-copy-to-index", "_id": "doc_1"}}'
          - '{"doc": {"source_field": "a single source field is kept as provided via bulk", "sparse_field": "updated inference test" }}'

  - match: { items.0.update.status: 400 }
  - match: { items.0.update.error.reason: "Field [another_source_field] must be specified on an update request to calculate inference for field [sparse_field]" }

---
"Calculates embeddings for bulk operations - update":
  - do:
      bulk:
        body:
          - '{"index": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"sparse_field": "inference test", "dense_field": "another inference test", "non_inference_field": "non inference test"}'

  - match: { errors: false }
  - match: { items.0.index.result: "created" }

  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"doc": { "sparse_field": "updated inference test", "dense_field": "another updated inference test", "non_inference_field": "updated non inference test" }}'

  - match: { errors: false }
  - match: { items.0.update.result: "updated" }

  - do:
      get:
        index: test-index
        id: doc_1

  - match: { _source.sparse_field.text: "updated inference test" }
  - exists: _source.sparse_field.inference.chunks.0.embeddings
  - match: { _source.sparse_field.inference.chunks.0.text: "updated inference test" }
  - match: { _source.dense_field.text: "another updated inference test" }
  - exists: _source.dense_field.inference.chunks.0.embeddings
  - match: { _source.dense_field.inference.chunks.0.text: "another updated inference test" }
  - match: { _source.non_inference_field: "updated non inference test" }

  # Script update not supported
  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"script": {"source": {"ctx.sparse_field": "updated inference test"}}}'

  - match: { errors: true }
  - match: { items.0.update.status: 400 }
  - match: { items.0.update.error.reason: "Cannot apply update with a script on indices that contain [semantic_text] field(s)" }

---
"Calculates embeddings for bulk operations - upsert":
  # Initial update fails
  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"doc": { "sparse_field": "inference test", "dense_field": "another inference test", "non_inference_field": "non inference test" }}'

  - match: { errors: true }
  - match: { items.0.update.status: 404 }

  # Update as upsert
  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"doc": { "sparse_field": "inference test", "dense_field": "another inference test", "non_inference_field": "non inference test" }, "doc_as_upsert": true}'

  - match: { errors: false }
  - match: { items.0.update.result: "created" }

  - do:
      get:
        index: test-index
        id: doc_1

  - match: { _source.sparse_field.text: "inference test" }
  - exists: _source.sparse_field.inference.chunks.0.embeddings
  - match: { _source.sparse_field.inference.chunks.0.text: "inference test" }
  - match: { _source.dense_field.text: "another inference test" }
  - exists: _source.dense_field.inference.chunks.0.embeddings
  - match: { _source.dense_field.inference.chunks.0.text: "another inference test" }
  - match: { _source.non_inference_field: "non inference test" }

  - do:
      bulk:
        body:
          - '{"update": {"_index": "test-index", "_id": "doc_1"}}'
          - '{"doc": { "sparse_field": "updated inference test", "dense_field": "another updated inference test", "non_inference_field": "updated non inference test" }, "doc_as_upsert": true}'

  - match: { errors: false }
  - match: { items.0.update.result: "updated" }

  - do:
      get:
        index: test-index
        id: doc_1

  - match: { _source.sparse_field.text: "updated inference test" }
  - exists: _source.sparse_field.inference.chunks.0.embeddings
  - match: { _source.sparse_field.inference.chunks.0.text: "updated inference test" }
  - match: { _source.dense_field.text: "another updated inference test" }
  - exists: _source.dense_field.inference.chunks.0.embeddings
  - match: { _source.dense_field.inference.chunks.0.text: "another updated inference test" }
  - match: { _source.non_inference_field: "updated non inference test" }

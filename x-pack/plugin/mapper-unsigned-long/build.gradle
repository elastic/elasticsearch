import org.elasticsearch.gradle.Version
import org.elasticsearch.gradle.internal.info.BuildParams

/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

evaluationDependsOn(xpackModule('core'))

apply plugin: 'elasticsearch.internal-es-plugin'
apply plugin: 'elasticsearch.legacy-yaml-rest-test'
apply plugin: 'elasticsearch.legacy-yaml-rest-compat-test'

esplugin {
  name 'unsigned-long'
  description 'Module for the unsigned long field type'
  classname 'org.elasticsearch.xpack.unsignedlong.UnsignedLongMapperPlugin'
  extendedPlugins = ['x-pack-core', 'lang-painless']
}
base {
  archivesName = 'x-pack-unsigned-long'
}

dependencies {
  compileOnly project(':modules:lang-painless:spi')
  compileOnly project(path: xpackModule('core'))
  testImplementation(testArtifact(project(xpackModule('core'))))
  yamlRestTestImplementation(testArtifact(project(xpackModule('core'))))
}

restResources {
    restApi {
        include '_common', 'bulk', 'indices', 'index', 'search', 'xpack'
    }
}

tasks.named("yamlRestTestV7CompatTest").configure {
    systemProperty 'tests.rest.blacklist', [
        '50_script_values/Scripted fields values return Long',
        '50_script_values/Scripted sort values',
        '50_script_values/Script query',
        '50_script_values/script_score query'
    ].join(',')
}

if (BuildParams.isSnapshotBuild() == false) {
  tasks.named("test").configure {
    systemProperty 'es.index_mode_feature_flag_registered', 'true'
  }
}

testClusters.configureEach {
  requiresFeature 'es.index_mode_feature_flag_registered', Version.fromString("8.0.0")
}

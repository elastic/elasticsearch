# This test uses the simple model defined in
# TextExpansionQueryIT.java to create the token weights.
setup:
  - requires:
      cluster_features: [ "gte_v8.15.0" ]
      reason: "sparse_vector query introduced in 8.15.0"
  - skip:
      features: headers
  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
      indices.create:
        index: index-with-sparse-vector
        body:
          mappings:
            properties:
              source_text:
                type: keyword
              ml.tokens:
                type: sparse_vector

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
      ml.put_trained_model:
        model_id: "text_expansion_model"
        body: >
          {
            "description": "simple model for testing",
            "model_type": "pytorch",
            "inference_config": {
              "text_expansion": {
                "tokenization": {
                  "bert": {
                    "with_special_tokens": false
                  }
                }
              }
            }
          }
  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
      ml.put_trained_model_vocabulary:
        model_id: "text_expansion_model"
        body: >
          { "vocabulary": ["[PAD]", "[UNK]", "these", "are", "my", "words", "the", "washing", "machine", "is", "leaking", "octopus", "comforter", "smells"] }
  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
      ml.put_trained_model_definition_part:
        model_id: "text_expansion_model"
        part: 0
        body: >
          {
            "total_definition_length":2078,
            "definition": "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",
            "total_parts": 1
          }
  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      bulk:
        index: index-with-sparse-vector
        refresh: true
        body: |
          {"index": {}}
          {"source_text": "my words comforter", "ml.tokens":{"my":1.0, "words":1.0,"comforter":1.0}}
          {"index": {}}
          {"source_text": "the machine is leaking", "ml.tokens":{"the":1.0,"machine":1.0,"is":1.0,"leaking":1.0}}
          {"index": {}}
          {"source_text": "these are my words", "ml.tokens":{"these":1.0,"are":1.0,"my":1.0,"words":1.0}}
          {"index": {}}
          {"source_text": "the octopus comforter smells", "ml.tokens":{"the":1.0,"octopus":1.0,"comforter":1.0,"smells":1.0}}
          {"index": {}}
          {"source_text": "the octopus comforter is leaking", "ml.tokens":{"the":1.0,"octopus":1.0,"comforter":1.0,"is":1.0,"leaking":1.0}}
          {"index": {}}
          {"source_text": "washing machine smells", "ml.tokens":{"washing":1.0,"machine":1.0,"smells":1.0}}

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      ml.start_trained_model_deployment:
        model_id: text_expansion_model
        wait_for: started

---
teardown:
  - skip:
      features: headers

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk"
      indices.delete:
        index: index-with-sparse-vector
        ignore: 404

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk"
      ml.stop_trained_model_deployment:
        model_id: text_expansion_model
        ignore: 404

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk"
      ml.delete_trained_model:
        model_id: "text_expansion_model"
        ignore: 404

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.delete:
        index: ["sparse_vector_pruning_test", "test-sparse-vector-without-pruning", "test-sparse-vector-with-pruning"]
        ignore: 404

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.refresh: { }

---
"Test sparse_vector search":
  - do:
      search:
        index: index-with-sparse-vector
        body:
          query:
            sparse_vector:
              field: ml.tokens
              inference_id: text_expansion_model
              query: "octopus comforter smells"
  - match: { hits.total.value: 4 }
  - match: { hits.hits.0._source.source_text: "the octopus comforter smells" }

---
"Test sparse_vector search with pruning config":
  - do:
      search:
        index: index-with-sparse-vector
        body:
          query:
            sparse_vector:
              field: ml.tokens
              inference_id: text_expansion_model
              query: "octopus comforter smells"
              prune: true
              pruning_config:
                tokens_freq_ratio_threshold: 4
                tokens_weight_threshold: 0.4
  - match: { hits.total.value: 4 }
  - match: { hits.hits.0._source.source_text: "the octopus comforter smells" }

---
"Test sparse_vector search with query vector":
  - do:
      search:
        index: index-with-sparse-vector
        body:
          query:
            sparse_vector:
              field: ml.tokens
              query_vector:
                the: 1.0
                comforter: 1.0
                smells: 1.0
                bad: 1.0
  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._source.source_text: "the octopus comforter smells" }

---
"Test sparse_vector search with query vector and pruning config":
  - do:
      search:
        index: index-with-sparse-vector
        body:
          query:
            sparse_vector:
              field: ml.tokens
              query_vector:
                the: 1.0
                comforter: 1.0
                smells: 1.0
                bad: 1.0
              prune: true
              pruning_config:
                tokens_freq_ratio_threshold: 1
                tokens_weight_threshold: 0.4
                only_score_pruned_tokens: false

  - match: { hits.total.value: 5 }
  - match: { hits.hits.0._source.source_text: "the octopus comforter smells" }

---
"Check sparse_vector token pruning index_options mappings":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              text:
                type: text
              ml.tokens:
                type: sparse_vector
                index_options:
                  prune: true
                  pruning_config:
                    tokens_freq_ratio_threshold: 1.0
                    tokens_weight_threshold: 0.4

  - match: { acknowledged: true }

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.get_mapping:
        index: sparse_vector_pruning_test

  - match: { sparse_vector_pruning_test.mappings.properties.ml.properties.tokens.index_options.prune: true }
  - match: { sparse_vector_pruning_test.mappings.properties.ml.properties.tokens.index_options.pruning_config.tokens_freq_ratio_threshold: 1.0 }
  - match: { sparse_vector_pruning_test.mappings.properties.ml.properties.tokens.index_options.pruning_config.tokens_weight_threshold: 0.4 }

---
"Check sparse_vector token pruning index_options mappings defaults":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      headers:
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              ml.tokens:
                type: sparse_vector

  - match: { acknowledged: true }

  - do:
      headers:
        Content-Type: application/json
      indices.get_field_mapping:
        index: sparse_vector_pruning_test
        fields: ml.tokens
        include_defaults: true

  # the index_options with pruning defaults will be serialized here explicitly
  - match: { sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.prune: true }
  - match: { sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.pruning_config.tokens_freq_ratio_threshold: 5.0 }
  - match: { sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.pruning_config.tokens_weight_threshold: 0.4 }

  - do:
      headers:
        Content-Type: application/json
      indices.get_field_mapping:
        index: sparse_vector_pruning_test
        fields: ml.tokens

  - not_exists: sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.prune
  - not_exists: sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.pruning_config.tokens_freq_ratio_threshold
  - not_exists: sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options.pruning_config.tokens_weight_threshold
  - not_exists: sparse_vector_pruning_test.mappings.ml\.tokens.mapping.tokens.index_options

---
"Check sparse_vector token pruning index_options prune missing do not allow config":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      catch: /\[index_options\] field \[pruning_config\] should only be set if \[prune\] is set to true/
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              text:
                type: text
              ml.tokens:
                type: sparse_vector
                index_options:
                  pruning_config:
                    tokens_freq_ratio_threshold: 1.0
                    tokens_weight_threshold: 0.4

  - match: { status: 400 }

---
"Check sparse_vector token pruning index_options prune false do not allow config":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      catch: /\[index_options\] field \[pruning_config\] should only be set if \[prune\] is set to true/
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              text:
                type: text
              ml.tokens:
                type: sparse_vector
                index_options:
                  prune: false
                  pruning_config:
                    tokens_freq_ratio_threshold: 1.0
                    tokens_weight_threshold: 0.4

  - match: { status: 400 }

---
"Check sparse_vector token pruning index_options tokens freq out of bounds":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      catch: /\[tokens_freq_ratio_threshold\] must be between \[1\] and \[100\]/
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              text:
                type: text
              ml.tokens:
                type: sparse_vector
                index_options:
                  prune: true
                  pruning_config:
                    tokens_freq_ratio_threshold: 101.0
                    tokens_weight_threshold: 0.4

  - match: { status: 400 }

---
"Check sparse_vector token pruning index_options tokens weight out of bounds":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      catch: /\[tokens_weight_threshold\] must be between 0 and 1/
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: sparse_vector_pruning_test
        body:
          mappings:
            properties:
              text:
                type: text
              ml.tokens:
                type: sparse_vector
                index_options:
                  prune: true
                  pruning_config:
                    tokens_freq_ratio_threshold: 5.0
                    tokens_weight_threshold: 3.5

  - match: { status: 400 }

---
"Check sparse_vector token pruning index_options in query":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: test-sparse-vector-with-pruning
        body:
          mappings:
            properties:
              content_embedding:
                type: sparse_vector
                index_options:
                  prune: true
                  pruning_config:
                    tokens_freq_ratio_threshold: 1
                    tokens_weight_threshold: 1.0

  - match: { acknowledged: true }

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: test-sparse-vector-without-pruning
        body:
          mappings:
            properties:
              content_embedding:
                type: sparse_vector
                index_options:
                  prune: false

  - match: { acknowledged: true }

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      bulk:
        index: test-sparse-vector-with-pruning
        refresh: true
        body: |
          {"index": { "_id": "1" }}
          {"content_embedding":{"cheese": 2.671405,"is": 0.11809908,"comet": 0.26088917}}
          {"index": { "_id": "2" }}
          {"content_embedding":{"planet": 2.3438394,"is": 0.54600334,"astronomy": 0.36015007,"moon": 0.20022368}}
          {"index": { "_id": "3" }}
          {"content_embedding":{"is": 0.6891394,"globe": 0.484035,"ocean": 0.080102935,"underground": 0.053516876}}
  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      bulk:
        index: test-sparse-vector-without-pruning
        refresh: true
        body: |
          {"index": { "_id": "1" }}
          {"content_embedding":{"cheese": 2.671405,"is": 0.11809908,"comet": 0.26088917}}
          {"index": { "_id": "2" }}
          {"content_embedding":{"planet": 2.3438394,"is": 0.54600334,"astronomy": 0.36015007,"moon": 0.20022368}}
          {"index": { "_id": "3" }}
          {"content_embedding":{"is": 0.6891394,"globe": 0.484035,"ocean": 0.080102935,"underground": 0.053516876}}
  - do:
      search:
        index: test-sparse-vector-without-pruning
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                cheese: 0.5
                comet: 0.5
                globe: 0.484035
                ocean: 0.080102935
                underground: 0.053516876
                is: 0.54600334

  - match: { hits.total.value: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "3" }
  - match: { hits.hits.2._id: "2" }

  - do:
      search:
        index: test-sparse-vector-with-pruning
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                cheese: 0.5
                comet: 0.5
                globe: 0.484035
                ocean: 0.080102935
                underground: 0.053516876
                is: 0.54600334

  - match: { hits.total.value: 2 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "3" }

  - do:
      search:
        index: test-sparse-vector-without-pruning
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                cheese: 0.5
                comet: 0.5
                globe: 0.484035
                ocean: 0.080102935
                underground: 0.053516876
                is: 0.54600334
              prune: true
              pruning_config:
                tokens_freq_ratio_threshold: 1
                tokens_weight_threshold: 1.0

  - match: { hits.total.value: 2 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "3" }

  - do:
      search:
        index: test-sparse-vector-with-pruning
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                cheese: 0.5
                comet: 0.5
                globe: 0.484035
                ocean: 0.080102935
                underground: 0.053516876
                is: 0.54600334
              prune: false

  - match: { hits.total.value: 3 }
  - match: { hits.hits.0._id: "1" }
  - match: { hits.hits.1._id: "3" }
  - match: { hits.hits.2._id: "2" }

---
"Check sparse_vector should prune by default":

  - requires:
      cluster_features: 'sparse_vector.index_options_supported'
      reason: "sparse_vector token pruning index options added support in 8.19"
  - skip:
      features: headers

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      indices.create:
        index: test-sparse-vector-pruning-default
        body:
          settings:
            number_of_shards: 1
          mappings:
            properties:
              content_embedding:
                type: sparse_vector

  - match: { acknowledged: true }

  - do:
      headers:
        Authorization: "Basic dGVzdF91c2VyOngtcGFjay10ZXN0LXBhc3N3b3Jk" #test_user credentials
        Content-Type: application/json
      bulk:
        index: test-sparse-vector-pruning-default
        refresh: true
        body: |
          {"index": { "_id": "1" }}
          {"content_embedding":{"cheese": 2.671405,"is": 0.11809908,"comet": 0.26088917}}
          {"index": { "_id": "2" }}
          {"content_embedding":{"planet": 2.3438394,"is": 0.14600334,"astronomy": 0.36015007,"moon": 0.20022368}}
          {"index": { "_id": "3" }}
          {"content_embedding":{"is": 0.1891394,"globe": 0.484035,"ocean": 0.080102935,"underground": 0.053516876}}
          {"index": { "_id": "4" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "5" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "6" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "7" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "8" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "9" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "10" }}
          {"content_embedding":{"is": 0.1891394}}
          {"index": { "_id": "11" }}
          {"content_embedding":{"is": 0.6, "pugs": 0.6 }}
          {"index": { "_id": "12" }}
          {"content_embedding":{"is": 0.1891394, "pugs": 0.1 }}

  - do:
      search:
        index: test-sparse-vector-pruning-default
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                pugs: 0.5
                cats: 0.5
                is: 0.04600334

  - match: { hits.total.value: 2 }
  - match: { hits.hits.0._id: "11" }
  - match: { hits.hits.1._id: "12" }

  - do:
      search:
        index: test-sparse-vector-pruning-default
        body:
          query:
            sparse_vector:
              field: content_embedding
              query_vector:
                pugs: 0.5
                cats: 0.5
                is: 0.04600334
              prune: false

  - match: { hits.total.value: 12 }


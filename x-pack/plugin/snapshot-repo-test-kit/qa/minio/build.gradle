/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import static org.elasticsearch.gradle.PropertyNormalization.IGNORE_VALUE

apply plugin: 'elasticsearch.legacy-java-rest-test'
apply plugin: 'elasticsearch.test.fixtures'
apply plugin: 'elasticsearch.rest-resources'

final Project fixture = project(':test:fixtures:minio-fixture')
final Project repositoryPlugin = project(':plugins:repository-s3')

dependencies {
  javaRestTestImplementation testArtifact(project(xpackModule('snapshot-repo-test-kit')))
  javaRestTestImplementation repositoryPlugin
}

restResources {
  restApi {
    include 'indices', 'search', 'bulk', 'snapshot', 'nodes', '_common', 'snapshot_repo_test_kit'
  }
}

testFixtures.useFixture(fixture.path, 'minio-fixture-repository-test-kit')
def fixtureAddress = {
  int ephemeralPort =  fixture.postProcessFixture.ext."test.fixtures.minio-fixture-repository-test-kit.tcp.9000"
  assert ephemeralPort > 0
  '127.0.0.1:' + ephemeralPort
}

tasks.named("javaRestTest").configure {
  systemProperty 'test.minio.bucket', 'bucket'
  systemProperty 'test.minio.base_path', 'repository_test_kit_tests'
}

testClusters.matching { it.name == "javaRestTest" }.configureEach {
  testDistribution = 'DEFAULT'
  plugin repositoryPlugin.path

  keystore 's3.client.repository_test_kit.access_key', 's3_test_access_key'
  keystore 's3.client.repository_test_kit.secret_key', 's3_test_secret_key'
  setting 's3.client.repository_test_kit.protocol', 'http'
  setting 's3.client.repository_test_kit.endpoint', { "${-> fixtureAddress()}" }, IGNORE_VALUE

  setting 'xpack.security.enabled', 'false'
}

apply plugin: 'elasticsearch.build'
apply plugin: 'elasticsearch.publish'
apply plugin: 'com.gradleup.shadow'

description = 'JDBC driver for Elasticsearch'

base {
  archivesName = "x-pack-sql-jdbc"
}

tasks.named('forbiddenApisMain').configure {
  // does not depend on core, so only jdk and http signatures should be checked
  replaceSignatureFiles 'jdk-signatures'
}

dependencies {
  api(xpackProject('plugin:sql:sql-client')) {
    transitive = false
  }
  api(xpackProject('plugin:sql:sql-proto')) {
    transitive = false
  }
  api(project(':libs:elasticsearch-x-content')) {
    transitive = false
  }
  api(project(':libs:elasticsearch-geo')) {
    transitive = false
  }
  api project(':libs:elasticsearch-core')
  api "com.fasterxml.jackson.dataformat:jackson-dataformat-cbor:${versions.jackson}"
  runtimeOnly "com.fasterxml.jackson.core:jackson-core:${versions.jackson}"
  testImplementation project(":test:framework")
  testImplementation(testArtifact(project(xpackModule('core'))))}

tasks.named("dependencyLicenses").configure {
  mapping from: /jackson-.*/, to: 'jackson'
}

tasks.named("shadowJar").configure {
  relocate 'com.fasterxml', 'shadow.fasterxml'
  relocate('org.elasticsearch', 'shadow.org.elasticsearch') {
    // Don't relocate the JDBC driver classes themselves as that's (mostly) public API
    exclude 'org.elasticsearch.xpack.sql.jdbc.*'
  }
}

tasks.named("thirdPartyAudit").configure {
  ignoreMissingClasses(
          'com.fasterxml.jackson.databind.ObjectMapper',
          'com.fasterxml.jackson.databind.cfg.MapperBuilder'
  )
}

tasks.named("test").configure {
  // reset the unit test classpath as using the shadow jar won't work due to relocated packages
  classpath = sourceSets.test.runtimeClasspath
}

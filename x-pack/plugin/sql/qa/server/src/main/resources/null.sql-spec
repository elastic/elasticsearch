// To mute tests follow example in file: example.sql-spec

//
// Null conditionals
//

coalesceFirstNotNull
SELECT COALESCE(123) AS c;

coalesceWithFirstNullOfString
SELECT COALESCE(null, 'first') AS c;

coalesceWithFirstNullOfNumber
SELECT COALESCE(null, 123) AS c;

coalesceMixedWithAlias
SELECT COALESCE(null, 123, null, 321) AS c;

coalesceScalar
SELECT COALESCE(null, ABS(123) + 1) AS c;

coalesceField
SELECT COALESCE(null, ABS(emp_no) + 1) AS c FROM test_emp ORDER BY emp_no LIMIT 5;

coalesceHaving
SELECT COALESCE(null, ABS(MAX(emp_no)) + 1, 123) AS c FROM test_emp GROUP BY languages HAVING c > 100 ORDER BY languages LIMIT 5;

coalesceWhere
SELECT COALESCE(null, ABS(emp_no) + 1, 123) AS c FROM test_emp WHERE COALESCE(null, ABS(emp_no) + 1, 123, 321) > 100 ORDER BY emp_no NULLS FIRST LIMIT 5;

coalesceOrderBy
SELECT COALESCE(null, ABS(emp_no) + 1, 123) AS c FROM test_emp ORDER BY c NULLS FIRST LIMIT 5;

ifNullField
SELECT IFNULL(null, ABS(emp_no) + 1) AS "ifnull" FROM test_emp ORDER BY emp_no LIMIT 5;

nullIfField
SELECT NULLIF(emp_no - 2 + 3, ABS(emp_no) + 1) AS "nullif1", NULLIF(emp_no + 1, emp_no - 1) AS "nullif2" FROM test_emp ORDER BY emp_no LIMIT 5;

nullIfWhere
SELECT NULLIF(10002, ABS(emp_no) + 1) AS c, emp_no FROM test_emp WHERE NULLIF(10003, ABS(emp_no) + 1) IS NOT NULL ORDER BY emp_no LIMIT 5;

nullIfHaving
SELECT NULLIF(10030, ABS(MAX(emp_no)) + 1) AS nif FROM test_emp GROUP BY languages HAVING nif IS NOT NULL ORDER BY languages;

nullIfOrderBy
SELECT NULLIF(10030, ABS(emp_no + 1)) AS nif FROM test_emp ORDER BY nif NULLS FIRST LIMIT 5;

greatestField
SELECT GREATEST(emp_no - 1 + 3, ABS(emp_no) + 1) AS "greatest" FROM test_emp ORDER BY emp_no LIMIT 5;

greatestWhere
SELECT emp_no FROM test_emp WHERE GREATEST(10005, ABS(emp_no) + 1, null, emp_no - 1 + 3) > 10008 ORDER BY emp_no LIMIT 5;

greatestHaving
SELECT GREATEST(10096, ABS(MAX(emp_no)) + 1) AS gt FROM test_emp GROUP BY languages HAVING gt >= 10098 ORDER BY languages;

greatestOrderBy
SELECT GREATEST(10096, ABS(emp_no + 1)) AS gt FROM test_emp ORDER BY gt LIMIT 10;

leastField
SELECT LEAST(emp_no - 1 + 3, ABS(emp_no) + 1) AS "least" FROM test_emp ORDER BY emp_no LIMIT 5;

leastWhere
SELECT emp_no FROM test_emp WHERE LEAST(10005, ABS(emp_no) + 1, null, emp_no - 1 + 3) > 10004 ORDER BY emp_no LIMIT 5;

leastHaving
SELECT LEAST(10098, ABS(MAX(emp_no)) + 1) AS lt FROM test_emp GROUP BY languages HAVING lt >= 10095 ORDER BY languages;

leastOrderBy
SELECT LEAST(10096, ABS(emp_no + 1)) AS lt FROM test_emp ORDER BY lt LIMIT 10;


//
// IS NULL/IS NOT NULL propagation
//

isNullAndComparisonOnTheSameField
SELECT emp_no IS NULL AS e FROM "test_emp" WHERE emp_no IS NULL AND emp_no > 10;

isNotNullAndComparisonOnTheSameField
SELECT emp_no IS NULL AS e FROM "test_emp" WHERE emp_no IS NOT NULL AND emp_no IS NULL;

nullifyFieldExpression
SELECT emp_no + 1 AS e FROM "test_emp" WHERE (emp_no + 2) / 1 + 10 % 3 > 100 AND emp_no IS NULL;

nullifyCoalesceInSelectAndFilter
SELECT COALESCE(null, ABS(emp_no) + 1, 123) AS c FROM test_emp WHERE emp_no IS NULL ORDER BY c NULLS FIRST LIMIT 5;

isNullInProjectionsWithGroup
SELECT last_name IS NULL x FROM test_emp GROUP BY x;


/*
 * Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one
 * or more contributor license agreements. Licensed under the Elastic License
 * 2.0; you may not use this file except in compliance with the Elastic License
 * 2.0.
 */

import org.elasticsearch.gradle.testclusters.DefaultTestClustersTask
import static org.elasticsearch.gradle.PropertyNormalization.IGNORE_VALUE
apply plugin: 'elasticsearch.legacy-java-rest-test'

dependencies {
  javaRestTestImplementation project(':x-pack:plugin:vector-tile')
}


def remoteCluster = testClusters.register('remote') {
  testDistribution = 'DEFAULT'
  setting 'xpack.license.self_generated.type', 'trial'
  setting 'xpack.security.enabled', 'true'
  user username: 'admin', password: 'admin-password', role: 'superuser'
}

def localCluster = testClusters.register('local') {
    testDistribution = 'DEFAULT'
    setting 'xpack.license.self_generated.type', 'trial'
    setting 'xpack.security.enabled', 'true'
    user username: 'admin', password: 'admin-password', role: 'superuser'
    setting 'cluster.remote.other.seeds',
      { "\"${remoteCluster.get().getAllTransportPortURI().join(",")}\"" }, IGNORE_VALUE
}


def startRemoteCluster = tasks.register("startRemoteCluster", DefaultTestClustersTask.class) {
  useCluster remoteCluster
  doLast {
    "Starting remote cluster before integ tests and integTest cluster is started"
  }
}

tasks.named("javaRestTest").configure {
  dependsOn startRemoteCluster
  useCluster remoteCluster
  useCluster localCluster
  doFirst {
    nonInputProperties.systemProperty 'tests.local',
    "${-> localCluster.get().getAllHttpSocketURI().get(0)}"
    nonInputProperties.systemProperty 'tests.remote',
    "${-> remoteCluster.get().getAllHttpSocketURI().get(0)}"
  }
}

---
setup:
  - do:
      cluster.health:
        wait_for_status: yellow
  - do:
      watcher.put_watch:
        id: "my_watch"
        body: >
          {
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [ 0, 5 ]
                  }
                }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "condition": {
              "always": {}
            },
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            }
          }

---
"Test update and get watch settings api":
  - do:
      watcher.get_settings: { }

  - match: { index.auto_expand_replicas: "0-1" }
  - match: { index.number_of_replicas: "0" }

  - do:
      watcher.update_settings:
        body:
          index.auto_expand_replicas: "0-all"

  - do:
      watcher.get_settings: { }

  - match: { index.auto_expand_replicas: "0-all" }
  - is_false: index.routing.allocation.include._tier_preference

  - do:
      watcher.update_settings:
        body:
          index.auto_expand_replicas: null
          index.number_of_replicas: 1

  - do:
      watcher.get_settings: { }

  - match: { index.number_of_replicas: "1" }
---
"Test disallowed setting name throws error":
  - requires:
      test_runner_features: regex
  - do:
      watcher.update_settings:
        body:
          index.disallowed_setting: "some_invalid_value"
      catch: bad_request
  - match:
      error:
        type: "action_request_validation_exception"
        reason: '/illegal settings\: \[index.disallowed_setting\].*/'
---
"Test allowed prefix setting name":
  - do:
      watcher.update_settings:
        body:
          index.routing.allocation.include.role: "watcher"
          index.routing.allocation.exclude.role: "noWatcher"
          index.routing.allocation.require.role: "mustWatcher"
  - do:
      watcher.get_settings: { }
  - match: { index.routing.allocation.include.role: "watcher" }
  - match: { index.routing.allocation.exclude.role: "noWatcher" }
  - match: { index.routing.allocation.require.role: "mustWatcher" }
---
"Test explicitly disallowed prefix setting name throws error":
  - requires:
      test_runner_features: regex
  - do:
      watcher.update_settings:
        body:
          index.routing.allocation.include.disallowed_prefix: "some_invalid_value"
      catch: bad_request
  - match:
      error:
        type: "action_request_validation_exception"
        reason: '/illegal settings\: \[index.routing.allocation.include.disallowed_prefix\].*/'

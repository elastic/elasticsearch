---
"Add persistent remote cluster in proxy mode with invalid sniff settings":
  - do:
      cluster.get_settings:
        include_defaults: true

  - set: { defaults.cluster.remote.my_remote_cluster.seeds.0: remote_ip }

  - do:
      catch: bad_request
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "proxy"
            cluster.remote.test_remote_cluster.node_connections: "5"
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Setting \"cluster.remote.test_remote_cluster.node_connections\" cannot be
  used with the configured \"cluster.remote.test_remote_cluster.mode\" [required=SNIFF, configured=PROXY]" }

  - do:
      catch: bad_request
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "proxy"
            cluster.remote.test_remote_cluster.seeds: $remote_ip
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Setting \"cluster.remote.test_remote_cluster.seeds\" cannot be
   used with the configured \"cluster.remote.test_remote_cluster.mode\" [required=SNIFF, configured=PROXY]" }

---
"Add persistent remote cluster in sniff mode with invalid proxy settings":
  - do:
      cluster.get_settings:
        include_defaults: true

  - set: { defaults.cluster.remote.my_remote_cluster.seeds.0: remote_ip }

  - do:
      catch: bad_request
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.proxy_socket_connections: "20"
            cluster.remote.test_remote_cluster.seeds: $remote_ip

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Setting \"cluster.remote.test_remote_cluster.proxy_socket_connections\" cannot be
  used with the configured \"cluster.remote.test_remote_cluster.mode\" [required=PROXY, configured=SNIFF]" }

  - do:
      catch: bad_request
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip
            cluster.remote.test_remote_cluster.seeds: $remote_ip

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Setting \"cluster.remote.test_remote_cluster.proxy_address\" cannot be
   used with the configured \"cluster.remote.test_remote_cluster.mode\" [required=PROXY, configured=SNIFF]" }

---
"Add persistent remote cluster using proxy connection mode using valid settings":
  - do:
      cluster.get_settings:
        include_defaults: true

  - set: { defaults.cluster.remote.my_remote_cluster.seeds.0: remote_ip }

  - do:
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "proxy"
            cluster.remote.test_remote_cluster.proxy_socket_connections: "3"
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip

  - match: {persistent.cluster\.remote\.test_remote_cluster\.mode: "proxy"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.proxy_socket_connections: "3"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.proxy_address: $remote_ip}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_remote_cluster:test_index

  - is_false: num_reduce_phases
  - match: {_clusters.total: 1}
  - match: {_clusters.successful: 1}
  - match: {_clusters.skipped: 0}
  - match: { _shards.total: 3 }
  - match: { hits.total: 6 }
  - match: { hits.hits.0._index: "test_remote_cluster:test_index" }

---
"Add persistent remote cluster using sniff connection mode using valid settings":
  - do:
      cluster.get_settings:
        include_defaults: true

  - set: { defaults.cluster.remote.my_remote_cluster.seeds.0: remote_ip }

  - do:
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "sniff"
            cluster.remote.test_remote_cluster.node_connections: "3"
            cluster.remote.test_remote_cluster.seeds: $remote_ip

  - match: {persistent.cluster\.remote\.test_remote_cluster\.mode: "sniff"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.node_connections: "3"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.seeds: $remote_ip}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_remote_cluster:test_index

  - is_false: num_reduce_phases
  - match: {_clusters.total: 1}
  - match: {_clusters.successful: 1}
  - match: {_clusters.skipped: 0}
  - match: { _shards.total: 3 }
  - match: { hits.total: 6 }
  - match: { hits.hits.0._index: "test_remote_cluster:test_index" }

---
"Switch connection mode for configured cluster":
  - do:
      cluster.get_settings:
        include_defaults: true

  - set: { defaults.cluster.remote.my_remote_cluster.seeds.0: remote_ip }

  - do:
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "sniff"
            cluster.remote.test_remote_cluster.seeds: $remote_ip

  - match: {persistent.cluster\.remote\.test_remote_cluster\.mode: "sniff"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.seeds: $remote_ip}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_remote_cluster:test_index

  - is_false: num_reduce_phases
  - match: {_clusters.total: 1}
  - match: {_clusters.successful: 1}
  - match: {_clusters.skipped: 0}
  - match: { _shards.total: 3 }
  - match: { hits.total: 6 }
  - match: { hits.hits.0._index: "test_remote_cluster:test_index" }

  - do:
      catch: bad_request
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "proxy"
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip

  - match: { status: 400 }
  - match: { error.root_cause.0.type: "illegal_argument_exception" }
  - match: { error.root_cause.0.reason: "Setting \"cluster.remote.test_remote_cluster.seeds\" cannot be
  used with the configured \"cluster.remote.test_remote_cluster.mode\" [required=SNIFF, configured=PROXY]" }

  - do:
      cluster.put_settings:
        flat_settings: true
        body:
          persistent:
            cluster.remote.test_remote_cluster.mode: "proxy"
            cluster.remote.test_remote_cluster.seeds: null
            cluster.remote.test_remote_cluster.proxy_address: $remote_ip

  - match: {persistent.cluster\.remote\.test_remote_cluster\.mode: "proxy"}
  - match: {persistent.cluster\.remote\.test_remote_cluster\.proxy_address: $remote_ip}

  - do:
      search:
        rest_total_hits_as_int: true
        index: test_remote_cluster:test_index

  - is_false: num_reduce_phases
  - match: {_clusters.total: 1}
  - match: {_clusters.successful: 1}
  - match: {_clusters.skipped: 0}
  - match: { _shards.total: 3 }
  - match: { hits.total: 6 }
  - match: { hits.hits.0._index: "test_remote_cluster:test_index" }

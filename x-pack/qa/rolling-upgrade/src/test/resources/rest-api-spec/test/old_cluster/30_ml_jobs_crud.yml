setup:
  - do:
      index:
        index: .ml-state-000001
        id: "dummy-document-to-make-index-creation-idempotent"
        body: >
          {
          }

  - do:
      cluster.health:
        index: [".ml-state-000001"]
        wait_for_status: green

---
"Put job on the old cluster and post some data":

  - skip:
      features: allowed_warnings

  - do:
      ml.put_job:
        job_id: old-cluster-job
        body:  >
          {
            "description":"Cluster upgrade",
            "analysis_config" : {
                "bucket_span": "60s",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "analysis_limits" : {
                "model_memory_limit": "50mb"
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: old-cluster-job }

  - do:
      ml.open_job:
        job_id: old-cluster-job

  - do:
      allowed_warnings:
        - 'Posting data directly to anomaly detection jobs is deprecated, in a future major version it will be compulsory to use a datafeed'
      ml.post_data:
        job_id: old-cluster-job
        body:
          - airline: AAL
            responsetime: 132.2046
            sourcetype: post-data-job
            time: 1403481600
          - airline: JZA
            responsetime: 990.4628
            sourcetype: post-data-job
            time: 1403481700
  - match: { processed_record_count: 2 }

  - do:
      ml.close_job:
        job_id: old-cluster-job

  - do:
      ml.get_buckets:
        job_id: old-cluster-job
  - match: { count: 1 }

# Wait for indices to be fully allocated before
# killing the node
  - do:
     cluster.health:
       index: [".ml-state-000001", ".ml-anomalies*"]
       wait_for_status: green

---
"Put categorization job on the old cluster and post some data":

  - skip:
      features: allowed_warnings

  - do:
      ml.put_job:
        job_id: old-cluster-categorization-job
        body:  >
          {
            "description":"Cluster upgrade with categorization",
            "analysis_config" : {
                "bucket_span": "60s",
                "detectors" :[{"function":"count","by_field_name":"mlcategory"}],
                "categorization_field_name": "message",
                "categorization_analyzer" : {
                    "char_filter" : ["html_strip"],
                    "tokenizer" : "classic",
                    "filter" : ["stop"]
                }
            },
            "analysis_limits" : {
                "model_memory_limit": "50mb"
            },
            "data_description" : {
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: old-cluster-categorization-job }

  - do:
      ml.open_job:
        job_id: old-cluster-categorization-job

  - do:
      allowed_warnings:
        - 'Posting data directly to anomaly detection jobs is deprecated, in a future major version it will be compulsory to use a datafeed'
      ml.post_data:
        job_id: old-cluster-categorization-job
        body:
          - message: "this is the first message to be categorized"
            time: 1403481600
          - message: "this is the second message to be categorized"
            time: 1403481700
  - match: { processed_record_count: 2 }

  - do:
      ml.close_job:
        job_id: old-cluster-categorization-job

  - do:
      ml.get_categories:
        job_id: old-cluster-categorization-job
  - match: { count: 1 }

# Wait for indices to be fully allocated before
# killing the node
  - do:
     cluster.health:
       index: [".ml-state-000001", ".ml-anomalies*"]
       wait_for_status: green

---
"Put job on the old cluster with the default model memory limit and post some data":

  - skip:
      features: allowed_warnings

  - do:
      ml.put_job:
        job_id: no-model-memory-limit-job
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "60s",
                "detectors" :[{"function":"count"}]
            },
            "data_description" : {
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: no-model-memory-limit-job }

  - do:
      ml.open_job:
        job_id: no-model-memory-limit-job

  - do:
      allowed_warnings:
        - 'Posting data directly to anomaly detection jobs is deprecated, in a future major version it will be compulsory to use a datafeed'
      ml.post_data:
        job_id: no-model-memory-limit-job
        body:
          - sourcetype: post-data-job
            time: 1403481600
          - sourcetype: post-data-job
            time: 1403484700
          - sourcetype: post-data-job
            time: 1403487700
          - sourcetype: post-data-job
            time: 1403490700
          - sourcetype: post-data-job
            time: 1403493700
  - match: { processed_record_count: 5 }

  - do:
      ml.close_job:
        job_id: no-model-memory-limit-job

  - do:
      ml.get_buckets:
        job_id: no-model-memory-limit-job
  - match: { count: 201 }

# Wait for indices to be fully allocated before
# killing the node
  - do:
     cluster.health:
       index: [".ml-state-000001", ".ml-anomalies*"]
       wait_for_status: green

---
"Put job with timing stats checking on the old cluster and post some data":

  - skip:
      features: allowed_warnings

  - do:
      ml.put_job:
        job_id: old-cluster-job-with-ts
        body:  >
          {
            "description":"Cluster upgrade with timing stats checking",
            "analysis_config" : {
                "bucket_span": "60s",
                "detectors" :[{"function":"metric","field_name":"responsetime","by_field_name":"airline"}]
            },
            "analysis_limits" : {
                "model_memory_limit": "50mb"
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"epoch"
            }
          }
  - match: { job_id: old-cluster-job-with-ts }

  - do:
      ml.open_job:
        job_id: old-cluster-job-with-ts

  - do:
      allowed_warnings:
        - 'Posting data directly to anomaly detection jobs is deprecated, in a future major version it will be compulsory to use a datafeed'
      ml.post_data:
        job_id: old-cluster-job-with-ts
        body:
          - airline: AAL
            responsetime: 132.2046
            sourcetype: post-data-job
            time: 1403481600
          - airline: JZA
            responsetime: 990.4628
            sourcetype: post-data-job
            time: 1403481700
  - match: { processed_record_count: 2 }

  - do:
      ml.close_job:
        job_id: old-cluster-job-with-ts

  - do:
      ml.get_buckets:
        job_id: old-cluster-job-with-ts
  - match: { count: 1 }

  # Wait for indices to be fully allocated before
  # killing the node
  - do:
      cluster.health:
        index: [".ml-state-000001", ".ml-anomalies*"]
        wait_for_status: green

---
"Put job with empty strings in the configuration":
  - do:
      ml.put_job:
        job_id: old-cluster-job-empty-fields
        body:  >
          {
            "description": "Cluster upgrade bad config",
            "analysis_config" : {
                "influencers": "",
                "bucket_span": "60s",
                "detectors" :[{"function":"count","field_name":""}]
            },
            "analysis_limits" : {
                "model_memory_limit": "50mb"
            },
            "data_description" : {
                "format":"xcontent",
                "time_field":"time",
                "time_format":"epoch"
            }
          }

---
"Test job with pre 6.4 rules - dummy job 6.4 onwards":
  - do:
      ml.put_job:
        job_id: job-with-old-rules
        body:  >
          {
            "analysis_config": {
              "detectors": [
                {
                  "function": "count",
                  "by_field_name": "country"
                }
              ]
            },
            "data_description" : {}
          }

---
"Test function shortcut expansion":
  - do:
      ml.put_job:
        job_id: old-cluster-function-shortcut-expansion
        body:  >
          {
            "analysis_config" : {
                "bucket_span": "1h",
                "detectors" :[{"function":"nzc","by_field_name":"airline"}]
            },
            "data_description" : {}
          }
  - match: { job_id: "old-cluster-function-shortcut-expansion" }
